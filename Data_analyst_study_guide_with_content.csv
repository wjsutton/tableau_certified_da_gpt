Domain,Section,Study Area,URL,Article Content
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.1. Choose an appropriate data source,https://help.tableau.com/current/pro/desktop/en-us/datasource_plan.htm,"Plan the Data Source Applies to: Tableau Cloud, Tableau Desktop, Tableau Server At the center of Tableau is your data. How successful you are with exploring data, answering questions, and building visualizations for yourself or others to consume all depend on the underlying data. If your goal is to do some quick exploration or ad-hoc analysis, you might be able to hop in, connect to some data, drag and drop a bit to build some vizzes, and hop out with the information you need. But if your goal is to create an analysis or data source that will be used more than once, it's best to think through and plan your data source. Tableau data sources A Tableau data source is the link between your source data and Tableau. It is essentially the sum of your data (either as a live connection or an extract), the connection information, the names of tables or sheets containing data, and the customizations that you make on top of data to work with it in Tableau. Those customizations include things like how the data is combined and metadata such as calculations, renamed fields, and default formatting. A Tableau data source may contain multiple data connections to different databases or files. Connection information includes where the data is located, such as a file name and path or a network location, and details on how to connect to your data, such as database server name and server sign-in information. Note : The terms data source and data connection have been used indiscriminately in the past and may lack clear distinction in older materials. It’s also important to bear in mind the difference between the Tableau data source (Tableau’s access to your data and all the customizations that may be involved) and the source data itself (such as a database or Excel spreadsheet). Planning a data source in the sense of designing a database is not the scope of this topic. Tableau data sources can remain embedded in the workbook where they were originally created, or they can be published separately. Published Data Sources allow for centralization and scaling of curated data sources. See Best Practices for Published Data Sources for more information. Considerations for a Tableau data source Before anything else, make sure you’re clear on the purpose of the data source. If you’re creating a catch-all data source for a wide variety of users with broad questions, you’d go about it differently than if you were constructing a niche data source optimized for performance. It’s important to know your goal from the outset. With that goal in mind, there are several items to consider and plan before you build a data source in Tableau: Location and access Shape and cleanliness The data model and combining data Metadata and customization Scalability, security, and discoverability Performance and freshness Location and access The location of your data can be as simple as a single excel file on your computer or a Google sheet you’ve created, or as complex as multiple databases using various technologies. Access can also involve specific drivers or connectors for a database or login information for a database server. Questions to consider: Do the correct Tableau users have access and permissions to the data and to Tableau? What user account should be used to log into the database? Will user filtering or row level security be needed? Is the source data on premises or in the cloud? This may have implications if the data is published to Tableau Cloud . Are there Supported Connectors ? Are there any limitations for that database (does it support all the functionality you hope to use)? Shape and cleanliness Your organization may already have well-structured data that you can connect to or ETL processes you can leverage, or you may need to use Tableau Prep Builder to perform cleaning and shaping operations to get your data into a useful format. Questions to consider: Is the data well-structured for use with Tableau? Should Tableau Prep Builder and Tableau Prep Conductor be used to clean and automate data prep flows? What calculations or manipulations would be best done natively in Tableau? Is any of this data unnecessary? Is any data missing? The data model and combining data Tableau needs to know how to query the data, which is conveyed by The Tableau Data Model . If the data comes from multiple tables, the data needs to be combined. Methods for combining data include relationships, joins, unions, and blends. Questions to consider: Is the data spread across multiple systems? What is the best way to combine each table of data? Metadata and customization Data is often stored in a way that isn’t easy for a person to use comfortably. For example, default field names can be unwieldy, custom formatting may be desired, definitions of abbreviations or codes may be missing, or common calculations may not be present in the underlying data. Creating a metadata layer with those pieces of information can make the data much easier to understand and use. Questions to consider: What calculations should be added? Are the table and field names understandable? Are the default settings for the fields useful or should they be customized? Are there any adjustments that should be made to support Ask Data or Tableau Catalog ? Note that Explain Data does not support multi-table data sources at this time. Scalability, security, and discoverability A data source may remain in the workbook where it was created— an embedded data source —or it may be published to Tableau Server or Tableau Cloud independently of any analysis as a content asset all its own. This centralization of published data sources has the added benefit of security and scaling, allowing multiple users to access a consistent data source. Published data sources can also take advantage of Tableau Catalog and recommendations and provide a single source of truth for an organization. Questions to consider: Should the data source stay embedded in the workbook? (The following questions assume the data source is published) Where will the data source be published? Who will own the data source? What authentication and permissions should it have? Will it be certified ? Performance and freshness In addition, Tableau data sources can be live connections to the source data or the data can be copied out as a refreshable extract. Extracts can boost the analysis performance or prevent resource drains against database systems. Questions to consider: Should the data connection be live or an extract ? If extracted, will there be a refresh schedule? ( Tableau Server | Tableau Cloud ) If published to Tableau Cloud, will Tableau Bridge need to be used? Build quality data sources There’s a lot that goes into a well-designed and performant data source. You don’t have to publish your first attempt, though. Like creating a good visualization, building a data source can be an ongoing process. Try your hand at combining the data you think you need and then see if you can build the viz you want. You can always go back and write a new calculation or bring in another table of data. Do some user testing and ask a colleague if they can figure out your field names. Of course, it’s best to only publish data sources you’re confident in and only certify ones that have passed quality assurance. By the time your data source is in front of users, they should be able to trust it. Combine Data If your data comes from one table, you can connect to your data to create the data source, drag the table onto the canvas, and then start building your view. But if your data is spread across multiple tables—or across multiple databases—you’ll need to combine it. Combining data happens on the Data Source Page. Single database Multiple databases Connect to your data. This creates a data source. Drag a table or sheet of data to the canvas and release it. Drag a second table or sheet to the canvas and release it. Either a noodle will form, indicating an automatic relationship has formed, or the Edit Relationship dialog will open, prompting you to tell Tableau which field those tables relate the two tables. Continue adding tables. Connect to your data. This creates a data source. Drag a table or sheet of data to the canvas and release it. After bringing out the first table of data, click the Add link to the right of the Connections heading in the Left pane. Switch between data connections in the Left pane, then drag out the desired table  to the canvas and release it. Either a noodle will form, indicating an automatic relationship has formed, or the Edit Relationship dialog will open, prompting you to tell Tableau which field those tables relate the two tables. Continue adding tables, switching between data connections as relevant. Note : In order to relate tables across different databases, they must be added as data connections within the same data source, not a new data source . Data connections are added from the Add link in the Left pane. New data sources can be created from the Data menu or the drop down menu from the icon next to the Data Source’s name, as seen in the image below. Methods of combining data Relationships are the default way to combine data in Tableau. Relationships are a dynamic, flexible way to combine data from multiple tables for analysis. If necessary, tables can also be joined or unioned. Data sources can also be blended. Let’s take a look the options for how data can be combined in Tableau and some of the situations when each method is useful. Relationships Establish the potential for joins between two tables based on related fields. Does not merge data together to create a new, fixed table. During analysis, queries the relevant tables automatically using the contextually-appropriate joins to generate a custom table of data for that analysis. Maintains the appropriate level of detail, does not lose data, keeps appropriate aggregations, and handles nulls. Joins Merge two tables of data based on a join clause and join type to form a new, fixed table of data. Often used to add new columns of data across the same basic row structure. May cause data loss with some join types if fields are not present in all tables. May cause data duplication if tables are at different levels of detail. Unions Merge two or more tables of data to form a new, fixed table of data. Used to append (add new rows of) data across the same basic column structure. Blends Work across two or more separate Tableau data sources. Data remains separate. Tableau queries the data sources independently and visualizes the results together in the view, based on the linking fields established for that sheet. Mimics the behavior of a left join and may filter data from secondary data sources. Note : It’s also possible to combine data with Custom SQL . Most of the time, it’s best to combine data directly in the canvas or with data blending. This allows Tableau the greatest flexibility for optimization. However, in certain scenarios, there may be reasons to use Custom SQL. Keep in mind doing so can have performance implications because Tableau is forced to execute the Custom SQL statement as written. Relationships Relating is a method for working with data from multiple tables based on shared fields—columns—between those tables. Establishing a relationship informs Tableau how rows can be connected across tables. Tableau holds that information but does not immediately bring the rows together. Instead, when a visualization is created, the fields involved in the analysis are traced back through the relationship and the appropriate data is returned from its original table. Because the data is never fully brought together into a single table outside the context of a visualization, relationships are useful when the data is at different levels of detail, or granularity. For example, if you need to work with data about daily rainfall in one table but hourly temperatures in another. Tableau supports relationships between tables in the same database and between tables in different databases. For more information about how to combine tables using relationships, see Relate Your Data and these Tableau blog posts: Relationships, part 1: Introducing new data modeling in Tableau (Link opens in a new window) Relationships, part 2: Tips and tricks (Link opens in a new window) Relationships, part 3: Asking questions across multiple related tables (Link opens in a new window) Join Joining is a method for combining tables related by common fields. The result of combining data using a join is a table that extends horizontally by adding columns of data. For more information about how to join data in Tableau, see Join Your Data . Data blending When you use data blending to combine your data, you combine data in what is called a primary data source with common fields from one or more secondary data sources. Data blending is useful when you need to change how the data source is configured on a sheet-by-sheet basis, when you want to combine databases that don’t allow relationships or joins such as cube data sources or Published Data Sources. The result of combining data using data blending is a virtual table that extends horizontally by adding columns of data. The data from each data source will be aggregated to a common level before being displayed together in the visualization. For more information about how data blending works and how to blend your data in Tableau, see Blend Your Data . Union Unioning is a method for appending values (rows) to tables. You can union tables if they have the same columns. The result of combining data using a union is a virtual table that has the same columns but extends vertically by adding rows of data. You can union tables in one of two ways: manually or using wildcard search. For more information about how to union data using one of these methods in Tableau, see Union Your Data . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.2. Choose between live connection or extract ,https://help.tableau.com/current/pro/desktop/en-us/perf_extracts.htm,"Test Your Data and Use Extracts Applies to: Tableau Desktop You probably have no control over the hardware, processing power, and disk space that your database runs on. Or how many people access the database at any given time, how many services are running, or how robust the network is. But you can test the raw performance of the data before you begin to build a workbook, so that you understand the environment you’re working in. And there are things you can do to affect the performance of the workbooks you create, starting with how you choose to connect to your data: the drivers you use, and whether your connection type is live or extract . Test as close to the data as possible A good way to test the raw performance of the data is to install Tableau Desktop on the computer where the data resides and to run some queries. This eliminates external factors such as network bandwidth and latency from performance results, and help you to understand the raw performance of the query in the data source. Additionally, you can use the localhost name for the data instead of the DNS name to help determine if environmental factors such as slow name resolution or proxy servers are slowing performance. Connect with native database drivers When you connect to data with native database drivers, you will often experience significantly faster performance than when you connect to the same data with ODBC drivers. When you use native database drivers, make sure that you’re using the latest version. Database vendors are always working to improve their drivers. For a list of drivers, see Drivers and Activation on the Tableau website. Work with extracts instead of live data Depending on your data, you can choose between a live or extract connection on the data source page. A live connection is a direct connection to your data. A Tableau data extract is a compressed snapshot of data stored locally and loaded into memory as required to render a Tableau visualization. Extracts are designed to use all parts of your computer’s memory optimally. There are several reasons to use an extract, but the main performance-related reason is if your query execution is slow. The extract data format is designed to provide a fast response to analytic queries. In this case, you can think of the extract as a query acceleration cache. For more information about Tableau extracts, see Extract Your Data . Another reference is a three-part blog post about extracts that starts with the first post, Understanding Tableau Data Extracts . Reduce the amount of data When you create an extract, use filters to exclude data that you don't need. Also, ask yourself if you need all of the records in a data source, or if you can limit the extract to a representative sample. For more information, see Extract Your Data . Hide unused fields Hidden fields are not included when you create an extract. Use the Hide All Unused Fields option to hide unnecessary fields before you create an extract. This makes the extract smaller, which improves performance. For more information, see Hide or Unhide Fields . Optimize extracts The Compute Calculations Now option materializes calculations in your extract, meaning that certain calculations are computed in advance and their values are stored in the extract. Depending on the complexity of the calculations used in your extract, this can potentially speed up future queries. To materialize calculations,  select a data source on the Data menu and then select Extract > Compute Calculations Now . For more information, see Materialize Calculations in Your Extracts . Use extracts for file-based data In general it’s best practice to import file-based data—text files such as CSV, Microsoft Excel spreadsheets, and Microsoft Access files, as well as statistical files like SPSS, SAS, and R—into Tableau. This makes queries perform much faster and also results in a much smaller file to store the data values. If your data is a large text or Excel file, using an extract not only improves performance but also makes more functionality available to you. Note that if you connect Tableau to a large text file, you will be prompted to extract the data if Tableau discovers that the file is too large to perform well. Avoid using custom SQL In most cases, custom SQL runs slower than queries created by Tableau. Tableau cannot perform query optimizations on custom SQL. But in cases where you must use custom SQL, use an extract so that the query runs only once. For more information, see Connect to a Custom SQL Query . Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.3. Connect to extracts ,https://help.tableau.com/current/pro/desktop/en-us/extracting_data.htm,"Extract Your Data Applies to: Tableau Desktop Extracts are saved subsets of data that you can use to improve performance or to take advantage of Tableau functionality not available or supported in your original data. When you create an extract of your data, you can reduce the total amount of data by using filters and configuring other limits. After you create an extract, you can refresh it with data from the original data. When refreshing the data, you have the option to either do a full refresh, which replaces all of the contents in the extract, or you can do an incremental refresh, which only adds rows that are new since the previous refresh. Extracts are advantageous for several reasons: Supports large data sets: You can create extracts that contain billions of rows of data. Help improve performance: When you interact with views that use extract data sources, you generally experience better performance than when interacting with views based on connections to the original data. Support additional functionality: Extracts allow you to take advantage of Tableau functionality that's not available or supported by the original data, such as the ability to compute Count Distinct. Provide offline access to your data: If you are using Tableau Desktop, extracts allow you to save and work with the data locally when the original data is not available. For example, when you are traveling. Latest changes to extracts Extracts in the web Beginning with version 2020.4, extracts are available in web authoring and content server. Now, you no longer have to use Tableau Desktop to extract your data sources. For more information, see Create Extracts on the Web . Logical and physical table extracts With the introduction of logical tables and physical tables in the Tableau data model in version 2020.2, extract storage options have changed from Single Table and Multiple Tables, to Logical Tables and Physical Tables. These options better describe how extracts will be stored. For more information, see Decide how the extract data should be stored . Deprecation of .tde format Note: Beginning in March 2023, extracts using the .tde format are deprecated in Tableau Cloud, Tableau Public, and Tableau Server (version 2023.1.0). For more information, see Extract Upgrade to .hyper Format . Beginning with version 10.5, when you create a new extract it uses the .hyper format. Extracts in the .hyper format take advantage of the improved data engine, which supports faster analytical and query performance for larger data sets. Similarly, when an extract-related task is performed on a .tde extract using version 10.5 and later, the extract is upgraded to a .hyper extract. After a .tde extract is upgraded to a .hyper extract, it can't be reverted back to .tde extract. For more information, see Extract Upgrade to .hyper Format . Changes to  values and marks in the view To improve extract efficiency and scalability, values in extracts  can be computed differently in versions 10.5 and later compared to versions 10.4 and earlier. Changes to how the values are computed can affect the way marks in your view are populated. In some rare cases, the changes can cause your view to change shape or become blank.  These changes can also apply to multi-connection data sources, data sources that use live connections to filed-based data, data sources that connect to Google Sheets data, cloud-based data sources, extract-only data sources, and WDC data sources. To get an idea of some of the differences you might see in your view using version 2022.4 , see the sections below. Format of date and date time values In versions 10.5 and later, extracts are subject to more consistent and stricter rules around how date strings are interpreted through the DATE, DATETIME, and DATEPARSE functions. This affects how dates are parsed, or the date formats and patterns that are allowed for these functions. More specifically, the rules can be generalized as the following: Dates are evaluated and then parsed  by column, not by row. Dates are evaluated and then parsed based on the locale of where the workbook was created, not on locale of the computer where the workbook is opened. These new rules allow extracts to be more efficient and to produce results that are consistent with commercial databases. However, because of these rules, particularly in international scenarios where the workbook is created in a locale different from the locale that the workbook is opened in or the server that the workbook is published to, you might see that 1.) date and datetime values change to different date and datetime values or 2.) date and datetime values change to Null . When your date and datetime values change to different date and datetime values or become Null , it's often an indication that there are issues with the underlying data. Here are some common reasons why you might see changes to your date and datetime values in your extract data source using version 10.5 and later. Common causes of changes to date/datetime values Common causes of null values When a function has to parse multiple date formats in a single column. Where the date is ambiguous and can be interpreted in several different ways, the date will be interpreted based on the format Tableau has determined for that column. For some examples, see Date scenario 1 and Date scenario 2 below. When a function has to parse a YYYY-MM-DD (ISO) format. For an example, see Date scenario 3 . When a function doesn't have enough information to derive the time, it can interpret a value as ""00:00:00.0"", using ""0"" for hour, minute, second, and millisecond. When a function doesn't have enough information to derive the day, it can interpret a value as ""1"" or  ""January"" for month. When a function parses years, it is interpreted as the following: Year ""07"" is interpreted as ""2007"" Year ""17"" is interpreted as ""2017."" Year ""30"" is interpreted as ""2030."" Year ""69"" interpreted as ""2069."" Year ""70"" is interpreted as ""1970."" When a function has to parse multiple date formats in a single column. After Tableau determines the date format, all other dates in the column that deviate from the  format become null values. For some examples, see Date scenario 1 and Date scenario 2 below. When a function has to parse a YYYY-MM-DD (ISO) format. Values that exceed what is allowed for ""YYYY,"" or ""MM,"" or ""DD"" cause null values. For an example, see Date scenario 3 . When a function has to parse date values that contain trailing characters.  For example, time zone and daylight savings suffixes and keywords, such as ""midnight""  cause null values. When a function has to parse an invalid date or time. For example, 32/3/2012 causes a null value. In another example, 25:01:61 causes a null value. When a function has to parse contradicting inputs. For example, suppose the pattern is 'dd.MM (MMMM) y' and the input string is '1.09 (August) 2017', where both ""9"" and ""August"" are months. The result is a null value because the month values are not the same. When a function has to parse contradicting patterns. For example, a pattern that specifies a mix of Gregorian year (y) and ISO week (ww) causes null values. Date scenario 1 Suppose you have a workbook created in an English locale that uses .tde extract data source. The table below shows a column of string data contained in the extract data source. 10/31/2018 31/10/2018 12/10/2018 Based on the particular English locale, the format of the date column was determined to follow the MDY (month, day, and year) format. The following tables show what Tableau displays based on this locale when the DATE function is used to convert string values into date values. October 31, 2018 October 31, 2018 December 10, 2018 If the extract is opened in a German locale, you see the following: 31 Oktober 2018 31 Oktober 2018 12 Oktober 2018 However, after the extract is opened in a German locale using version 10.5 and later, the  DMY (day, month, and year) format of the German locale is strictly enforced and causes a Null value because one of the values doesn't follow DMY format. Null October 31, 2018 October 12, 2018 Date scenario 2 Suppose you have another workbook created in an English locale that uses a .tde extract data source. The table below shows a column of numeric date data contained in the extract data source. 1112018 1212018 1312018 1412018 Based on the particular English locale, the format of the date column was determined to follow the MDY (month, day, and year) format. The following tables show what Tableau displays based on this locale when the DATE function is used to convert the numeric values into date values. 11/1/2018 12/1/2018 Null Null Date scenario 3 Suppose you have a workbook  that uses a .tde extract data source. The table below shows a column of string data contained in the extract data source. 2018-10-31 2018-31-10 2018-12-10 2018-10-12 Because the date uses the ISO format, the date column always follows the YYYY-MM-DD format. The following tables show what Tableau displays when the DATE function is used to convert string values into date values. October 10, 2018 Null December 10, 2018 October 12, 2018 Note: In versions 10.4 (and earlier), ISO format and other date formats could have produced differing results depending on the locale of where the workbook was created. In an English locale for example, both 2018-12-10 and 2018/12/10 could produce December 12, 2o18. However, in a German locale 2018-12-10 could produce December 12, 2018 and 2018/12/10 could produce October 12, 2018. Sort order and case sensitivity Extracts have collation support and therefore can more appropriately sort string values that have accents or are cased differently. For example, suppose you have a table of string values. In terms of sort order, this means that a string value like Égypte is now appropriately listed after Estonie and before Fidji. About Excel data: With regard to casing, this means that how Tableau stores values have changed between version 10.4 (and earlier) and version 10.5 (and later). However, the rules for sorting and comparing values haven't. In version 10.4 (and earlier), string values like ""House,"" ""HOUSE,"" and ""houSe"" are treated the same and stored with one representative value. In version 10.5 (and later), the same string values are considered unique and therefore stored as individual values. For more information, see Changes to the way values are computed . Breaking ties in Top N queries When a Top N query in your extract produces duplicate values for a specific position in a rank, the position that breaks the tie can be different when using version 10.5 and later. For example, suppose you create a top 3 filter. Positions 3, 4, and 5 have the same values. When using version 10.4 and earlier, the top filter can return 1, 2, and 3 positions. However, when using version 10.5 and later, the top filter can return 1, 2, and 5 positions. Precision of floating-point values Extracts are better at taking advantage of the available hardware resources on a computer and therefore able to perform mathematical operations in a highly parallel way. Because of this, real numbers can be aggregated by .hyper extracts in different order. When numbers are aggregated in different order, you might see different values in your view after the decimal point each time the aggregation is computed. This is because floating-point addition and multiplication is not necessarily associative. That is, (a + b) + c is not necessarily the same as a + (b + c). Also, real numbers can be aggregated in different order because floating-point multiplication is not necessarily distributive. That is, (a x b) x c is not necessarily the same as a x b x c. This type of floating-point rounding behavior in .hyper extracts resemble that of floating-point rounding behavior in commercial databases. For example, suppose your workbook contains a slider filter on an aggregated field comprised of floating point values. Because the precision of floating-point values have changed, the filter might now exclude a mark that defines the upper or lower bound of the filter range. The absence of these numbers could cause a blank view. To resolve this issue, move the slider on the filter or remove and add the filter again. Accuracy of aggregations Extracts optimize for large data sets by taking better advantage of the available hardware resources on a computer and therefore able to compute aggregations in a highly parallel way. Because of this, aggregations performed by .hyper extracts can resemble the results from commercial databases more than the results from software that specializes in statistical computations. If you’re working with a small data set or need a higher level of accuracy, consider performing aggregations through reference lines, summary card statistics, or table calculation functions like variance, standard deviation, correlation, or covariance. About the Compute Calculations Now option for extracts If the Compute Calculations Now option was used in a .tde extract  using an earlier version of Tableau Desktop, certain calculated fields were materialized and therefore computed in advance and stored in the extract.  If you upgrade the extract from a .tde extract to a .hyper extract, the previously materialized calculations in your extract are not included. You must use the Compute Calculations Now option again to ensure that materialized calculations are a part of the extract after the extract upgrade. For more information, see Materialize Calculations in Your Extracts . New Extract API You can use the Extract API 2.0 to create .hyper extracts. For tasks that you previously performed using the Tableau SDK, such as publishing extracts, you can use the Tableau Server REST API or the Tableau Server Client (Python) library. For refresh tasks, you can use the Tableau Server REST API as well. For more information, see Tableau Hyper API . Create an extract Though there are several options in your Tableau workflow for creating an extract, the primary method is described below. After you connect to your data and set up the data source on the Data Source page, in the upper-right corner, select Extract , and then click the Edit link to open the Extract Data dialog box. (Optional) Configure one or more of the following options to tell Tableau how to store, define filters for, and limit the amount of data in your extract: Decide how the extract data should be stored You can choose to have Tableau store the data in your extract using one of two structures (schemas): logical tables (normalized schema) or physical tables (normalized schema). For more information about logical and physical tables, see The Tableau Data Model . The option you choose depends on what you need. Logical Tables Stores data using one extract table for each logical table in the data source. Physical tables that define a logical table are merged and stored with that logical table. For example, if a data source was made of a single logical table, the data would be stored in a single table. If a data source was made of three logical tables (each containing multiple physical tables), the extract data would be stored in three tables—one for each logical table. Select Logical Tables when you want to limit the amount of data in your extract with additional extract properties like extract filters, aggregation, Top N, or other features that require denormalized data. Also use when your data uses pass-through functions (RAWSQL). This is the default structure Tableau uses to store extract data. If you use this option when your extract contains joins, the joins are applied when the extract is created. Physical Tables Stores data using one extract table for each physical table in the data source. Select Physical Tables if your extract is comprised of tables combined with one or more equality joins and meets the Conditions for using the Physical Tables option listed below. If you use this option, joins are performed at query time. This option can potentially  improve performance and help reduce the size of the extract file. For more information about how Tableau recommends you use the Physical Tables option, see Tips for using the Physical Tables option . In some cases, you can also use this option as a workaround for row-level security. For more information about row-level security using Tableau, see Restrict Access at the Data Row Level . Conditions for using the Physical Tables option To store your extract using the Physical Tables option, the data in your extract must meet all of the conditions listed below. All joins between physical tables are equality (=) joins Data types of the columns used for relationships or joins are identical No pass-through functions (RAWSQL) used No incremental refresh configured No extract filters configured No Top N or sampling configured When the extract is stored as physical tables, you cannot append data to it. For logical tables, you can't append data to extracts that have more than one logical table. Note: Both the Logical Tables and Physical Tables options only affect how the data in your extract is stored. The options do not affect how tables in your extract are displayed on the Data Source page. For example, suppose your extract is comprised of one logical table that contains three physical tables. If you directly open the extract (.hyper) file that has been configured to use the default option, Logical Tables, you see one table listed on the Data Source page. However, if you open the extract using the packaged data source (.tdsx) file or the data source (.tdsx) file with its corresponding extract (.hyper) file, you see all three tables that comprise the extract on the Data Source page. Determine how much data to extract Click Add to define one or more filters to limit how much data gets extracted based on fields and their values. Aggregate the data in the extract Select Aggregate data for visible dimensions to aggregate the measures using their default aggregation. Aggregating the data consolidates rows, can minimize the size of the extract file, and increase performance. When you choose to aggregate the data, you can also select Roll up dates to a specified date level such as Year, Month, etc. The examples below show how the data will be extracted for each aggregation option you can choose. Original data Each record is shown as a separate row. There are seven rows in your data. Aggregate data for visible dimensions (no roll up) Records with the same date and region have been aggregated into a single row. There are five rows in the extract. Aggregate data for visible dimensions (roll up dates to Month) Dates have been rolled up to the Month level and records with the same region have been aggregated into a single row. There are three rows in the extract. Choose the rows to extract Select the number of rows you want to extract. You can extract All rows or the Top N rows. Tableau first applies any filters and aggregation and then extracts the number of rows from the filtered and aggregated results. The number of rows options depend on the type of data source you are extracting from. Notes: Not all data sources support sampling. Therefore, you might not see the Sampling option in the Extract Data dialog box. Any fields that you hide first in the Data Source page or on the sheet tab will be excluded from the extract. Click the Hide All Unused Fields button to remove these hidden fields from the extract. When finished, click OK . Click the sheet tab. Clicking the sheet tab initiates the creating of the extract. In the subsequent dialog box, select a location to save the extract, give the extract file a name, and then click Save . If the Save dialog box does not display, see the Troubleshoot extracts section, below. General tips for working with extracts Save your workbook to preserve the connection to the extract After you create an extract, the workbook begins to use the extract version of your data. However, the connection to the extract version of your data is not preserved  until you save the workbook. This means if you close the workbook without saving the workbook first, the workbook will connect to the original data source the next time you open it. Toggle between sampled data and entire extract When you're working with a large extract, you might want to create an extract with a sample of the data so you can set up the view while avoiding long queries every time you place a field on a shelf on the sheet tab.  You can then toggle between using the extract (with sample data) and using the entire data source by selecting a data source on the Data menu and then selecting Use Extract . Don't connect directly to the extract Because extracts are saved to your file system, it is possible to connect directly to them with a new Tableau Desktop instance. This is not recommended for a few reasons: The table names will be different . Tables stored in your extract use special naming to guarantee name uniqueness, and it may not be human-readable. You cannot refresh the extract . When connecting directly to an extract, Tableau treats that file as the true source, as opposed to a clone of underlying data. So, it's not possible to relate it back to your source data. The data model and relationships will be lost . The data model and relationships between the tables is stored in the .tds file and not in the .hyper file, so this information is lost when connecting directly to the .hyper file. Additionally, if you extract using logical tables storage, you will not see any references to the original underlying physical tables. Remove the extract from the workbook You can remove an extract at anytime by selecting the extract data source on the Data menu and then selecting Extract > Remove . When you remove an extract, you can choose to Remove the extract from the workbook only or Remove and delete the extract file . The latter option will delete the extract from your hard drive. See extract history You can see when the extract was last updated and other details by selecting a data source on the Data menu and then selecting Extract > History . If you open a workbook that is saved with an extract and Tableau cannot locate the extract, select one of the following options in the Extract Not Found dialog box when prompted: Locate the extract: Select this option if the extract exists but not in the location where Tableau originally saved it. Click OK to open an Open File dialog box where you can specify the new location for the extract file. Remove the extract: Select this option if you have no further need for the extract. This is equivalent to closing the data source. All open worksheets that reference the data source are deleted. Deactivate the extract: Use the original data source from which the extract was created, instead of the extract. Regenerate the extract: Recreates the extract. All filters and other customizations you specified when you originally created the extract are automatically applied. Tips for using the Physical Tables option Tableau generally recommends that you use the default data storage option, Logical Tables, when setting up and working with extracts. In many cases, some of the features you need for your extract, like extract filters, are only available to you if you use the Logical Tables option. Physical Tables option for extracts that are larger than expected The Physical Tables option should be used sparingly to help with specific situations such as when your data source meets the Conditions for using the Physical Tables option and the size of your extract is larger than expected. To determine if the extract is larger than it should be, the sum of rows in the extract using the Logical Tables option must be higher than the sum of rows of all the combined tables before the extract has been created. If you encounter this scenario, try using the Physical Tables option instead. Alternative filtering suggestions when using the Physical Tables option When using the Physical Tables option, other options to help reduce the data in your extract, like extract filters, aggregation, Top N and Sampling are disabled. If you need to reduce the data in an extract that uses the Physical Tables option, consider filtering the data before it is brought into Tableau Desktop using one of the following suggestions: Connect to your data and define filters using custom SQL: Instead of connecting to a database table, connect to your data using custom SQL instead. When creating your custom SQL query, make sure that it contains the appropriate level of filtering that you need to reduce the data in your extract. For more information about custom SQL in Tableau Desktop, see Connect to a Custom SQL Query . Define a view in the database: If you have write access to your database, consider defining a database view that contains just the data you need for your extract and then connect to the database view from Tableau Desktop. Row-level security with extracts If you want to secure extract data at the row level, using the Physical Tables option is the recommended way to achieve this scenario. For more information about row-level security in Tableau, see Restrict Access at the Data Row Level . Troubleshoot extracts Creating an extract takes a long time: Depending on the size of your data set, creating an extract can take a long time. However, after you have extracted the data and saved it to your computer, performance can improve. Extract is not created: If your data set contains a really large number of columns (e.g., in the thousands), in some cases Tableau might not be able to create the extract. If you encounter problems, consider extracting fewer columns or restructuring the underlying data. Save dialog does not display or extract is not created from a .twbx: If you follow the above procedure to extract data from a packaged workbook, the Save dialog does not display. When an extract is created from a packaged workbook (.twbx), the extract file  is automatically stored in the package of files associated with the packaged workbook. To access the extract file that you created from the packaged workbook, you must unpackage the workbook. For more information, see Packaged Workbooks . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.4. Connect to spreadsheets ,https://help.tableau.com/current/pro/desktop/en-us/examples_excel.htm,"Excel Applies to: Tableau Cloud, Tableau Desktop, Tableau Prep, Tableau Server This article describes how to connect Tableau to Microsoft Excel file data and set up the data source. Tableau connects to .xls and .xlsx files. To connect to a .csv file, use the Text file connector. Make the connection and set up the data source After you open Tableau, under Connect , click Excel . Select the Excel workbook you want to connect to, and then click Open . NOTE: Beginning with Tableau 2020.2, legacy Excel and Text connections are no longer supported. See the Legacy Connection Alternatives document in Tableau Community for alternatives to using the legacy connection. On the Data Source page, do the following: (Optional) Select the default data source name at the top of the page, and then enter a unique data source name for use in Tableau. For example, use a data source naming convention that helps other users of the data source figure out which data source to connect to. If your Excel file has one table, click  the sheet tab to start your analysis. Use custom SQL to connect to a specific query rather than the entire data source. For more information, see Connect to a Custom SQL Query . You can also connect to a named range or an Excel table (also known as an Excel list) in the same way you connect to a worksheet. Both the named range and Excel table function as a table in Tableau. You create named ranges  in Excel by selecting a range of cells and then selecting Define Name on the Formulas tab. Similar to named ranges, you can create an Excel table in Excel by selecting a range of cells, and then selecting Insert > Table . When you connect to a named range or Excel table in Tableau, an icon appears next to the sheet in the Data Source page as shown below. You can connect to multiple Excel workbooks at the same time as long as each connection in the data source has a unique name. Note: Tableau does not support pivot tables in Excel. Microsoft Excel data source example The following is an example of a Microsoft Excel 		data source. Note: If 			the Excel file contains columns that are more than 254 characters 			wide, Tableau Desktop can't use these fields for workbooks that were created before Tableau Desktop 8.2. Also, you cannot use the legacy connection to connect to this data. Either remove the columns, modify 		them to fit within 254 characters prior to connecting in Tableau Desktop, or upgrade the Excel data source. For more information about upgrading data sources, see Upgrade Data Sources . Get more data Get more data into your data source by adding more tables or connecting to data in a different database. Add more data from the current file: From the left pane, drag additional tables to the canvas to combine data using a join or union. For more information, see Join Your Data or Union Your Data . Add more data from different databases: In the left pane, click Add next to Connections. For more information, see Join Your Data . If a connector you want is not listed in the left pane, select Data > New Data Source to add a new data source. For more information, see Blend Your Data . Set Excel table options Excel table options are scoped to the connection. To change the table options, on the canvas, click the table drop-down arrow and then specify whether the data includes field names in the first row. If so, these names will become the field names in Tableau. If field names are not included, Tableau generates them automatically. You can rename the fields later. Use Data Interpreter to clean your data If Tableau detects that it can help optimize your data source for analysis, it prompts you to use Data Interpreter. Data Interpreter can detect sub-tables that you can use  and remove unique formatting that might cause problems later on in your analysis. For more information, see Clean Data from Excel, CSV, PDF, and Google Sheets with Data Interpreter . About .ttde and .hhyper files You might notice .ttde or .hhyper files when navigating your computer's directory. When you create a Tableau data source that connects to your data, Tableau creates a .ttde or .hhyper file. This file, also known as a shadow extract, is used to help improve the speed your data source loads in Tableau Desktop. Although a shadow extract contains underlying data and other information similar to the standard Tableau extract, a shadow extract is saved in a different format and  can't be used to recover your data. Changes to the way values are computed Starting from version 10.5, when you are working with extract data sources as well as data sources that use live connections to file-based data like Excel, the values in your data can be computed differently from previous versions of Tableau. This change means that you might see differences between the data and the marks in your view between version 10.4 (and earlier) and version 10.5 (and later). The purpose of this change is to improve the efficiency and scalability of your Excel data source. For more information, see Changes to  values and marks in the view . In the case of an Excel data source, one example of this change is with case sensitivity. In version 10.4 (and earlier), for comparing and sorting purposes, string values are treated as case insensitive and therefore treated the same and stored as a single string value. In version 10.5 (and later),  for sorting and comparing purposes, values remain case insensitive. However, values are case sensitive for storing purposes. This becomes evident when values are displayed on the data source page. For example, suppose you have a column in your data that contains the values ""House,"" ""HOUSE,"" and ""houSe."" You see the following string values depending on the version of Tableau you are using: In version 10.4 and earlier, both on the data source page and view, you see: ""House,"" ""House,"" and ""House."" In version 10.5 and later, on the data source page you see: ""House,"" ""HOUSE,"" and ""houSe."" But in the view you see: ""House,"" ""House,"" and ""House."" If you need to maintain case sensitivity for your data when performing a join, you can enable the Maintain Character Case (Excel) option from the Data menu. For more information about this option, see Join Your Data (Link opens in a new window) . See also Set Up Data Sources – Add more data to this data source or prepare your data before you analyze it. Build Charts and Analyze Data – Begin your data analysis. Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.5. Connect to .hyper files (or .tde files) ,https://help.tableau.com/current/pro/desktop/en-us/extracting_data.htm,"Extract Your Data Applies to: Tableau Desktop Extracts are saved subsets of data that you can use to improve performance or to take advantage of Tableau functionality not available or supported in your original data. When you create an extract of your data, you can reduce the total amount of data by using filters and configuring other limits. After you create an extract, you can refresh it with data from the original data. When refreshing the data, you have the option to either do a full refresh, which replaces all of the contents in the extract, or you can do an incremental refresh, which only adds rows that are new since the previous refresh. Extracts are advantageous for several reasons: Supports large data sets: You can create extracts that contain billions of rows of data. Help improve performance: When you interact with views that use extract data sources, you generally experience better performance than when interacting with views based on connections to the original data. Support additional functionality: Extracts allow you to take advantage of Tableau functionality that's not available or supported by the original data, such as the ability to compute Count Distinct. Provide offline access to your data: If you are using Tableau Desktop, extracts allow you to save and work with the data locally when the original data is not available. For example, when you are traveling. Latest changes to extracts Extracts in the web Beginning with version 2020.4, extracts are available in web authoring and content server. Now, you no longer have to use Tableau Desktop to extract your data sources. For more information, see Create Extracts on the Web . Logical and physical table extracts With the introduction of logical tables and physical tables in the Tableau data model in version 2020.2, extract storage options have changed from Single Table and Multiple Tables, to Logical Tables and Physical Tables. These options better describe how extracts will be stored. For more information, see Decide how the extract data should be stored . Deprecation of .tde format Note: Beginning in March 2023, extracts using the .tde format are deprecated in Tableau Cloud, Tableau Public, and Tableau Server (version 2023.1.0). For more information, see Extract Upgrade to .hyper Format . Beginning with version 10.5, when you create a new extract it uses the .hyper format. Extracts in the .hyper format take advantage of the improved data engine, which supports faster analytical and query performance for larger data sets. Similarly, when an extract-related task is performed on a .tde extract using version 10.5 and later, the extract is upgraded to a .hyper extract. After a .tde extract is upgraded to a .hyper extract, it can't be reverted back to .tde extract. For more information, see Extract Upgrade to .hyper Format . Changes to  values and marks in the view To improve extract efficiency and scalability, values in extracts  can be computed differently in versions 10.5 and later compared to versions 10.4 and earlier. Changes to how the values are computed can affect the way marks in your view are populated. In some rare cases, the changes can cause your view to change shape or become blank.  These changes can also apply to multi-connection data sources, data sources that use live connections to filed-based data, data sources that connect to Google Sheets data, cloud-based data sources, extract-only data sources, and WDC data sources. To get an idea of some of the differences you might see in your view using version 2022.4 , see the sections below. Format of date and date time values In versions 10.5 and later, extracts are subject to more consistent and stricter rules around how date strings are interpreted through the DATE, DATETIME, and DATEPARSE functions. This affects how dates are parsed, or the date formats and patterns that are allowed for these functions. More specifically, the rules can be generalized as the following: Dates are evaluated and then parsed  by column, not by row. Dates are evaluated and then parsed based on the locale of where the workbook was created, not on locale of the computer where the workbook is opened. These new rules allow extracts to be more efficient and to produce results that are consistent with commercial databases. However, because of these rules, particularly in international scenarios where the workbook is created in a locale different from the locale that the workbook is opened in or the server that the workbook is published to, you might see that 1.) date and datetime values change to different date and datetime values or 2.) date and datetime values change to Null . When your date and datetime values change to different date and datetime values or become Null , it's often an indication that there are issues with the underlying data. Here are some common reasons why you might see changes to your date and datetime values in your extract data source using version 10.5 and later. Common causes of changes to date/datetime values Common causes of null values When a function has to parse multiple date formats in a single column. Where the date is ambiguous and can be interpreted in several different ways, the date will be interpreted based on the format Tableau has determined for that column. For some examples, see Date scenario 1 and Date scenario 2 below. When a function has to parse a YYYY-MM-DD (ISO) format. For an example, see Date scenario 3 . When a function doesn't have enough information to derive the time, it can interpret a value as ""00:00:00.0"", using ""0"" for hour, minute, second, and millisecond. When a function doesn't have enough information to derive the day, it can interpret a value as ""1"" or  ""January"" for month. When a function parses years, it is interpreted as the following: Year ""07"" is interpreted as ""2007"" Year ""17"" is interpreted as ""2017."" Year ""30"" is interpreted as ""2030."" Year ""69"" interpreted as ""2069."" Year ""70"" is interpreted as ""1970."" When a function has to parse multiple date formats in a single column. After Tableau determines the date format, all other dates in the column that deviate from the  format become null values. For some examples, see Date scenario 1 and Date scenario 2 below. When a function has to parse a YYYY-MM-DD (ISO) format. Values that exceed what is allowed for ""YYYY,"" or ""MM,"" or ""DD"" cause null values. For an example, see Date scenario 3 . When a function has to parse date values that contain trailing characters.  For example, time zone and daylight savings suffixes and keywords, such as ""midnight""  cause null values. When a function has to parse an invalid date or time. For example, 32/3/2012 causes a null value. In another example, 25:01:61 causes a null value. When a function has to parse contradicting inputs. For example, suppose the pattern is 'dd.MM (MMMM) y' and the input string is '1.09 (August) 2017', where both ""9"" and ""August"" are months. The result is a null value because the month values are not the same. When a function has to parse contradicting patterns. For example, a pattern that specifies a mix of Gregorian year (y) and ISO week (ww) causes null values. Date scenario 1 Suppose you have a workbook created in an English locale that uses .tde extract data source. The table below shows a column of string data contained in the extract data source. 10/31/2018 31/10/2018 12/10/2018 Based on the particular English locale, the format of the date column was determined to follow the MDY (month, day, and year) format. The following tables show what Tableau displays based on this locale when the DATE function is used to convert string values into date values. October 31, 2018 October 31, 2018 December 10, 2018 If the extract is opened in a German locale, you see the following: 31 Oktober 2018 31 Oktober 2018 12 Oktober 2018 However, after the extract is opened in a German locale using version 10.5 and later, the  DMY (day, month, and year) format of the German locale is strictly enforced and causes a Null value because one of the values doesn't follow DMY format. Null October 31, 2018 October 12, 2018 Date scenario 2 Suppose you have another workbook created in an English locale that uses a .tde extract data source. The table below shows a column of numeric date data contained in the extract data source. 1112018 1212018 1312018 1412018 Based on the particular English locale, the format of the date column was determined to follow the MDY (month, day, and year) format. The following tables show what Tableau displays based on this locale when the DATE function is used to convert the numeric values into date values. 11/1/2018 12/1/2018 Null Null Date scenario 3 Suppose you have a workbook  that uses a .tde extract data source. The table below shows a column of string data contained in the extract data source. 2018-10-31 2018-31-10 2018-12-10 2018-10-12 Because the date uses the ISO format, the date column always follows the YYYY-MM-DD format. The following tables show what Tableau displays when the DATE function is used to convert string values into date values. October 10, 2018 Null December 10, 2018 October 12, 2018 Note: In versions 10.4 (and earlier), ISO format and other date formats could have produced differing results depending on the locale of where the workbook was created. In an English locale for example, both 2018-12-10 and 2018/12/10 could produce December 12, 2o18. However, in a German locale 2018-12-10 could produce December 12, 2018 and 2018/12/10 could produce October 12, 2018. Sort order and case sensitivity Extracts have collation support and therefore can more appropriately sort string values that have accents or are cased differently. For example, suppose you have a table of string values. In terms of sort order, this means that a string value like Égypte is now appropriately listed after Estonie and before Fidji. About Excel data: With regard to casing, this means that how Tableau stores values have changed between version 10.4 (and earlier) and version 10.5 (and later). However, the rules for sorting and comparing values haven't. In version 10.4 (and earlier), string values like ""House,"" ""HOUSE,"" and ""houSe"" are treated the same and stored with one representative value. In version 10.5 (and later), the same string values are considered unique and therefore stored as individual values. For more information, see Changes to the way values are computed . Breaking ties in Top N queries When a Top N query in your extract produces duplicate values for a specific position in a rank, the position that breaks the tie can be different when using version 10.5 and later. For example, suppose you create a top 3 filter. Positions 3, 4, and 5 have the same values. When using version 10.4 and earlier, the top filter can return 1, 2, and 3 positions. However, when using version 10.5 and later, the top filter can return 1, 2, and 5 positions. Precision of floating-point values Extracts are better at taking advantage of the available hardware resources on a computer and therefore able to perform mathematical operations in a highly parallel way. Because of this, real numbers can be aggregated by .hyper extracts in different order. When numbers are aggregated in different order, you might see different values in your view after the decimal point each time the aggregation is computed. This is because floating-point addition and multiplication is not necessarily associative. That is, (a + b) + c is not necessarily the same as a + (b + c). Also, real numbers can be aggregated in different order because floating-point multiplication is not necessarily distributive. That is, (a x b) x c is not necessarily the same as a x b x c. This type of floating-point rounding behavior in .hyper extracts resemble that of floating-point rounding behavior in commercial databases. For example, suppose your workbook contains a slider filter on an aggregated field comprised of floating point values. Because the precision of floating-point values have changed, the filter might now exclude a mark that defines the upper or lower bound of the filter range. The absence of these numbers could cause a blank view. To resolve this issue, move the slider on the filter or remove and add the filter again. Accuracy of aggregations Extracts optimize for large data sets by taking better advantage of the available hardware resources on a computer and therefore able to compute aggregations in a highly parallel way. Because of this, aggregations performed by .hyper extracts can resemble the results from commercial databases more than the results from software that specializes in statistical computations. If you’re working with a small data set or need a higher level of accuracy, consider performing aggregations through reference lines, summary card statistics, or table calculation functions like variance, standard deviation, correlation, or covariance. About the Compute Calculations Now option for extracts If the Compute Calculations Now option was used in a .tde extract  using an earlier version of Tableau Desktop, certain calculated fields were materialized and therefore computed in advance and stored in the extract.  If you upgrade the extract from a .tde extract to a .hyper extract, the previously materialized calculations in your extract are not included. You must use the Compute Calculations Now option again to ensure that materialized calculations are a part of the extract after the extract upgrade. For more information, see Materialize Calculations in Your Extracts . New Extract API You can use the Extract API 2.0 to create .hyper extracts. For tasks that you previously performed using the Tableau SDK, such as publishing extracts, you can use the Tableau Server REST API or the Tableau Server Client (Python) library. For refresh tasks, you can use the Tableau Server REST API as well. For more information, see Tableau Hyper API . Create an extract Though there are several options in your Tableau workflow for creating an extract, the primary method is described below. After you connect to your data and set up the data source on the Data Source page, in the upper-right corner, select Extract , and then click the Edit link to open the Extract Data dialog box. (Optional) Configure one or more of the following options to tell Tableau how to store, define filters for, and limit the amount of data in your extract: Decide how the extract data should be stored You can choose to have Tableau store the data in your extract using one of two structures (schemas): logical tables (normalized schema) or physical tables (normalized schema). For more information about logical and physical tables, see The Tableau Data Model . The option you choose depends on what you need. Logical Tables Stores data using one extract table for each logical table in the data source. Physical tables that define a logical table are merged and stored with that logical table. For example, if a data source was made of a single logical table, the data would be stored in a single table. If a data source was made of three logical tables (each containing multiple physical tables), the extract data would be stored in three tables—one for each logical table. Select Logical Tables when you want to limit the amount of data in your extract with additional extract properties like extract filters, aggregation, Top N, or other features that require denormalized data. Also use when your data uses pass-through functions (RAWSQL). This is the default structure Tableau uses to store extract data. If you use this option when your extract contains joins, the joins are applied when the extract is created. Physical Tables Stores data using one extract table for each physical table in the data source. Select Physical Tables if your extract is comprised of tables combined with one or more equality joins and meets the Conditions for using the Physical Tables option listed below. If you use this option, joins are performed at query time. This option can potentially  improve performance and help reduce the size of the extract file. For more information about how Tableau recommends you use the Physical Tables option, see Tips for using the Physical Tables option . In some cases, you can also use this option as a workaround for row-level security. For more information about row-level security using Tableau, see Restrict Access at the Data Row Level . Conditions for using the Physical Tables option To store your extract using the Physical Tables option, the data in your extract must meet all of the conditions listed below. All joins between physical tables are equality (=) joins Data types of the columns used for relationships or joins are identical No pass-through functions (RAWSQL) used No incremental refresh configured No extract filters configured No Top N or sampling configured When the extract is stored as physical tables, you cannot append data to it. For logical tables, you can't append data to extracts that have more than one logical table. Note: Both the Logical Tables and Physical Tables options only affect how the data in your extract is stored. The options do not affect how tables in your extract are displayed on the Data Source page. For example, suppose your extract is comprised of one logical table that contains three physical tables. If you directly open the extract (.hyper) file that has been configured to use the default option, Logical Tables, you see one table listed on the Data Source page. However, if you open the extract using the packaged data source (.tdsx) file or the data source (.tdsx) file with its corresponding extract (.hyper) file, you see all three tables that comprise the extract on the Data Source page. Determine how much data to extract Click Add to define one or more filters to limit how much data gets extracted based on fields and their values. Aggregate the data in the extract Select Aggregate data for visible dimensions to aggregate the measures using their default aggregation. Aggregating the data consolidates rows, can minimize the size of the extract file, and increase performance. When you choose to aggregate the data, you can also select Roll up dates to a specified date level such as Year, Month, etc. The examples below show how the data will be extracted for each aggregation option you can choose. Original data Each record is shown as a separate row. There are seven rows in your data. Aggregate data for visible dimensions (no roll up) Records with the same date and region have been aggregated into a single row. There are five rows in the extract. Aggregate data for visible dimensions (roll up dates to Month) Dates have been rolled up to the Month level and records with the same region have been aggregated into a single row. There are three rows in the extract. Choose the rows to extract Select the number of rows you want to extract. You can extract All rows or the Top N rows. Tableau first applies any filters and aggregation and then extracts the number of rows from the filtered and aggregated results. The number of rows options depend on the type of data source you are extracting from. Notes: Not all data sources support sampling. Therefore, you might not see the Sampling option in the Extract Data dialog box. Any fields that you hide first in the Data Source page or on the sheet tab will be excluded from the extract. Click the Hide All Unused Fields button to remove these hidden fields from the extract. When finished, click OK . Click the sheet tab. Clicking the sheet tab initiates the creating of the extract. In the subsequent dialog box, select a location to save the extract, give the extract file a name, and then click Save . If the Save dialog box does not display, see the Troubleshoot extracts section, below. General tips for working with extracts Save your workbook to preserve the connection to the extract After you create an extract, the workbook begins to use the extract version of your data. However, the connection to the extract version of your data is not preserved  until you save the workbook. This means if you close the workbook without saving the workbook first, the workbook will connect to the original data source the next time you open it. Toggle between sampled data and entire extract When you're working with a large extract, you might want to create an extract with a sample of the data so you can set up the view while avoiding long queries every time you place a field on a shelf on the sheet tab.  You can then toggle between using the extract (with sample data) and using the entire data source by selecting a data source on the Data menu and then selecting Use Extract . Don't connect directly to the extract Because extracts are saved to your file system, it is possible to connect directly to them with a new Tableau Desktop instance. This is not recommended for a few reasons: The table names will be different . Tables stored in your extract use special naming to guarantee name uniqueness, and it may not be human-readable. You cannot refresh the extract . When connecting directly to an extract, Tableau treats that file as the true source, as opposed to a clone of underlying data. So, it's not possible to relate it back to your source data. The data model and relationships will be lost . The data model and relationships between the tables is stored in the .tds file and not in the .hyper file, so this information is lost when connecting directly to the .hyper file. Additionally, if you extract using logical tables storage, you will not see any references to the original underlying physical tables. Remove the extract from the workbook You can remove an extract at anytime by selecting the extract data source on the Data menu and then selecting Extract > Remove . When you remove an extract, you can choose to Remove the extract from the workbook only or Remove and delete the extract file . The latter option will delete the extract from your hard drive. See extract history You can see when the extract was last updated and other details by selecting a data source on the Data menu and then selecting Extract > History . If you open a workbook that is saved with an extract and Tableau cannot locate the extract, select one of the following options in the Extract Not Found dialog box when prompted: Locate the extract: Select this option if the extract exists but not in the location where Tableau originally saved it. Click OK to open an Open File dialog box where you can specify the new location for the extract file. Remove the extract: Select this option if you have no further need for the extract. This is equivalent to closing the data source. All open worksheets that reference the data source are deleted. Deactivate the extract: Use the original data source from which the extract was created, instead of the extract. Regenerate the extract: Recreates the extract. All filters and other customizations you specified when you originally created the extract are automatically applied. Tips for using the Physical Tables option Tableau generally recommends that you use the default data storage option, Logical Tables, when setting up and working with extracts. In many cases, some of the features you need for your extract, like extract filters, are only available to you if you use the Logical Tables option. Physical Tables option for extracts that are larger than expected The Physical Tables option should be used sparingly to help with specific situations such as when your data source meets the Conditions for using the Physical Tables option and the size of your extract is larger than expected. To determine if the extract is larger than it should be, the sum of rows in the extract using the Logical Tables option must be higher than the sum of rows of all the combined tables before the extract has been created. If you encounter this scenario, try using the Physical Tables option instead. Alternative filtering suggestions when using the Physical Tables option When using the Physical Tables option, other options to help reduce the data in your extract, like extract filters, aggregation, Top N and Sampling are disabled. If you need to reduce the data in an extract that uses the Physical Tables option, consider filtering the data before it is brought into Tableau Desktop using one of the following suggestions: Connect to your data and define filters using custom SQL: Instead of connecting to a database table, connect to your data using custom SQL instead. When creating your custom SQL query, make sure that it contains the appropriate level of filtering that you need to reduce the data in your extract. For more information about custom SQL in Tableau Desktop, see Connect to a Custom SQL Query . Define a view in the database: If you have write access to your database, consider defining a database view that contains just the data you need for your extract and then connect to the database view from Tableau Desktop. Row-level security with extracts If you want to secure extract data at the row level, using the Physical Tables option is the recommended way to achieve this scenario. For more information about row-level security in Tableau, see Restrict Access at the Data Row Level . Troubleshoot extracts Creating an extract takes a long time: Depending on the size of your data set, creating an extract can take a long time. However, after you have extracted the data and saved it to your computer, performance can improve. Extract is not created: If your data set contains a really large number of columns (e.g., in the thousands), in some cases Tableau might not be able to create the extract. If you encounter problems, consider extracting fewer columns or restructuring the underlying data. Save dialog does not display or extract is not created from a .twbx: If you follow the above procedure to extract data from a packaged workbook, the Save dialog does not display. When an extract is created from a packaged workbook (.twbx), the extract file  is automatically stored in the package of files associated with the packaged workbook. To access the extract file that you created from the packaged workbook, you must unpackage the workbook. For more information, see Packaged Workbooks . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.6. Connect to relational databases ,https://help.tableau.com/current/pro/desktop/en-us/basicconnectoverview.htm,"Connect to Your Data Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Before you can build a view and analyze your data, you must first connect Tableau to your data. Tableau supports connecting to a wide variety of data, stored in a variety of places. For example, your data might be stored on your computer in a spreadsheet or a  text file, or in a big data, relational, or cube (multidimensional) database on a server in your enterprise. Or, you might connect to public domain data available on the web such as U.S. Census Bureau information, or to a cloud database source, such as Google Analytics, Amazon Redshift, or Salesforce. Starting in 2019.3, Tableau Catalog is available as part of the Data Management offering for Tableau Server and Tableau Cloud. When Tableau Catalog is enabled in your environment, in addition to connecting to published data sources, you can connect to databases and tables from Tableau Server on the Connect pane in Tableau Desktop. For more information about Tableau Catalog , see ""About Tableau Catalog"" in the Tableau Server or Tableau Cloud Help. Starting in 2021.4, Data Management includes virtual connections, a central access point to data. For more information, see ""About Virtual Connections and Data Policies"" in the Tableau Server (Link opens in a new window) or Tableau Cloud (Link opens in a new window) help. Tableau Desktop When you launch Tableau Desktop, the data connectors that are available to you are listed on the Connect pane, which is the left pane on the Start page. Under Search for Data , select Tableau Server to find data using Tableau Server or Tableau Cloud. File types are listed next, then common server types, or servers that you've recently connected to. Click More to see the complete list of data connectors you can use. For supported files and databases, Tableau provides native connectors that are built for and optimized for those types of data. If your file or database type is listed under Connect , use this native connector to connect to your data. If your file or database type isn’t listed, you might have the option of creating your own connection using Other Databases (JDBC) , Other Databases (ODBC) , a Web Data Connector , or a Connector Plugin built using the Tableau Connector SDK. Tableau provides limited support for connections that you create using these options. The data connectors supported by your copy of Tableau Desktop are determined by the version you purchased. For more information, see the list of data connectors (Link opens in a new window) on the Tableau website. After you've connected to data, you can save the connections to have them show up under the Saved data sources section on the Connect pane. You supply different information for each data connection that you want to make. For example, for most data connections, you’ll need to supply a server name and your sign-in information. With some data connections, you can Run Initial SQL statements, and SSL-enabled servers require that you select the Require SSL check box when you connect. The following sections discuss the specific information you must provide for each type of data you want to connect to. Tip: You can quickly create a data source in Tableau by copying and pasting data using the clipboard. For more information, see Create a Data Source or Add a New Connection with Clipboard Data . Tableau Server and Tableau Cloud web authoring Sign in to your Tableau site and select New > Create Workbook on the Home page to open the Connect to Data page. The tabs that you see on the pages depend on the product you have. On Tableau Server, select from the following tabs to connect to data: On this site . Browse to or search for published data sources. If you have Data Management , you can also connect to data using a virtual connection.  If you have Data Management with Tableau Catalog enabled, you can additionally connect to external assets like databases, files, and tables. Files . Upload Excel or text-based data sources (.xlsx, .csv, .tsv) directly in your browser. Connectors . Connect to data housed in a cloud database or on a server in your enterprise. For more information about connecting to data, see Creators: Connect to Data on the Web . On Tableau Cloud, select from the following tabs to connect to data: On this site . Browse to or search for published data sources. If you have Data Management , you can also connect to data using a virtual connection.  If you have Data Management with Tableau Catalog enabled, you can additionally connect to external assets like databases, files, and tables. Files . Upload Excel or text-based data sources (.xlsx, .csv, .tsv) directly in your browser. Connectors . Connect to data housed in a cloud database or on a server in your enterprise. Dashboard Starters . Use to author and analyze data from Oracle Eloqua, Salesforce, ServiceNow ITSM, and QuickBooks Online. For more information about connecting to data, see Creators: Connect to Data on the Web . The data connectors supported by your Tableau site are determined by your site's server and your license level. For more information, see What Can I Do with a Tableau Site? After you've connected to data, you can save the connections to have them show up in the Data Sources section of your site. Request a new connector If Tableau doesn't have a native (built-in) connector for your data, consider requesting one on Tableau Community. Use Ideas (Link opens in a new window) on Community to search for your connector to see if it's been requested, and if it has been, vote for it. If it's not listed, add it. Tableau regularly reviews Ideas on Community to help determine what features should be added to the product. Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.7. Pull data from relational databases by using custom SQL queries ,https://help.tableau.com/current/pro/desktop/en-us/customsql.htm,"Connect to a Custom SQL Query Applies to: Tableau Cloud, Tableau Desktop, Tableau Server For most databases, you can connect to a specific query rather than the entire data set. Because databases have slightly different SQL syntax from each other, the custom SQL you use to connect to one database might be different from the custom SQL you might use to connect to another. However, using custom SQL can be useful when you know exactly the information you need and understand how to write SQL queries. Though there are several common reasons why you might use custom SQL, you can use custom SQL to union your data across tables, recast fields to perform cross-database joins, restructure or reduce the size of your data for analysis, etc. For Excel and text file data sources, this option is available only in workbooks that were created before Tableau Desktop 8.2 or when using Tableau Desktop on Windows with the legacy connection. To connect to Excel or text files using the legacy connection, connect to the file, and in the Open dialog box, click the Open drop-down menu, and then select Open with Legacy Connection . NOTE: Beginning with Tableau 2020.2, legacy Excel and Text connections are no longer supported. See the Legacy Connection Alternatives document in Tableau Community for alternatives to using the legacy connection. Connect to a custom SQL query After connecting to your data, double-click the New Custom SQL option on the Data Source page. Type or paste the query into the text box. The query must be a single SELECT* statement. When finished, click OK . When you click OK, the query runs and the custom SQL query table appears in the logical layer of the canvas. Only relevant fields from the custom SQL query display in the data grid on the Data Source page. For more information about the logical and physical layers of the canvas, see The Tableau Data Model . Examples of custom SQL queries Combine your tables vertically (union) If you need to append data to each other, you can use the union option in the physical layer of the canvas in Tableau. In some cases your database does not support this option, so you can use custom SQL instead. For example, suppose you have the following two tables: November and December. November December You can use the following custom SQL query to append the second table, December, to the first table, November: SELECT * FROM November UNION ALL SELECT * FROM December The result of the query looks like this in the data grid: For more information about the union option, see Union Your Data . Change the data type of a field to do a cross-database join When you want to perform a join between two tables in the physical layer of the canvas, the data type of the fields you join on must be the same. In cases when the data type of the fields are not the same, you can use custom SQL to change the data type (cast) the field before performing the join. For example, suppose you want to join two tables, Main and Sub, using the Root and ID fields, respectively. The Root field is a number type and the ID field is a string type. You can use the following custom SQL query to change the data type of Root from a number to a string so that you can join the Main and Sub tables using the Root and ID fields. SELECT         [Main].[Root] AS [Root_Number] CAST([Main].[Root] AS INT] AS [Root_String] FROM [Main] The result of this query shows the original Root field and the Root field cast as a string. For more information about joins and cross-database joins, see Join Your Data . Reduce the size of your data When working with very large data sets, sometimes you can save time while working with your data if you reduce its size first. For example, suppose you have a large table called FischerIris. You can use the following custom SQL query to retrieve the specified columns and records thereby reducing the size of the data set that you connect to from Tableau. SELECT [FischerIris].[Species] AS [Species], [FischerIris].[Width] AS [Petal Width], COUNT([FischerIris].[ID]) AS [Num of Species] FROM [FischerIris] WHERE [FischerIris].[Organ] = 'Petal' AND [FischerIris].[Width] > 15.0000 GROUP BY [FischerIris].[Species], [FischerIris].[Width] Restructure your data (pivot) In some cases, you might be working with a table that needs to be restructured before analysis. Though this type of task can be done in the physical layer of the canvas in Tableau by using options like pivot, your database might not support it. In this case, you can use custom SQL instead. For example, suppose you have the following table: To change its structure and optimize your data for analysis in Tableau, you can use the following custom SQL query: SELECT Table1.Season ID AS [Season ID], Table1.Items - Don't like AS [Quantity], ""Don't Like"" AS [Reason] FROM Table1 UNION ALL SELECT Table1.Season ID AS [Season ID], Table.Items - Defective AS [Quantity], ""Defective"" AS [Reason] FROM Table1 UNION ALL SELECT Table1.Season ID AS [Season ID], Table1.Items - Too big AS [Quantity], ""Too Big"" AS [Reason] FROM Table1 UNION ALL SELECT Table1.Season ID AS Season ID, Table1.Items - Too small AS [Quantity] ""Too Small"" AS [Reason] FROM Table1 The result of the query looks like this in the data grid: For more information about the pivot option, see Pivot Data from Columns to Rows . Combine (join) and aggregate your data If you need to combine tables and aggregate your data, you can use both a join and default aggregation type options in the physical layer of the canvas in Tableau. In some cases you might need to use custom SQL instead. For example, suppose you have the following two tables: Orders and Vendors. Orders Vendors You can use the following custom SQL query to find a count on the number of orders and do a left join on the Orders and Vendors tables: SELECT Vendors.Name,COUNT(Orders.Order) AS Number Of Orders FROM Orders LEFT JOIN Vendors ON Orders.VendorID=Vendors.VendorID GROUP BY Name; The result of the query looks like this: For more information about joins, see Join Your Data . Errors when duplicate columns are referenced If your custom SQL query references duplicate columns, you may get errors when trying to use one of the columns in your analysis in Tableau. This will happen even if the query is valid. For example, consider the following query: SELECT * FROM authors, titleauthor WHERE authors.au_id = titleauthor.au_id The query is valid, but the au_id field is ambiguous because in this case it exists in both the “authors” table and the “titleauthor” table. Tableau will connect to the query but you will get an error anytime you try to use the au_id field. This is because Tableau doesn’t know which table you are referring to. Note: It is a best practice to define column aliases with an AS clause whenever possible in a Custom SQL Query. This is because each database has its own rules when it comes to automatically generating a column name whenever an alias is not used. Edit a custom SQL query To edit a custom SQL query On the data source page, in the canvas, double-click the custom SQL query in the logical layer. Hover over the custom SQL table in the physical layer until the arrow displays. Click the arrow and then select Edit Custom SQL Query . In the dialog box, edit the custom SQL query. To change a custom SQL query name When you drag a custom SQL query to the logical layer of the canvas, Tableau gives it a default name: Custom SQL Query, Custom SQL Query1, and so on. You can change the default name to something more meaningful. On the data source page, in the logical layer of the canvas, select the drop-down arrow in the custom SQL query table and select Rename . Enter the name you want to use for your custom SQL query. Use parameters in a custom SQL query You can use parameters in a custom SQL query statement to replace a constant value with a dynamic value. You can then update the parameter in the workbook to modify the connection. For example, you may connect to a custom SQL query that provides web traffic data for a particular page that is specified by a pageID. Instead of using a constant value for the pageID value in the SQL query, you can insert a parameter. Then after finishing the connection, you can show a parameter control in the workbook. Use the parameter control to switch out the pageID and pull in data for each page of interest without having to edit or duplicate the connection. In Tableau Desktop , you can create a parameter directly from the Custom SQL dialog box or use any parameters that are part of the workbook. If you create a new parameter, it becomes available for use in the workbook just like any other parameter. See Create Parameters to learn more. For web authoring (in Tableau Cloud or Tableau Server) , you can use an existing parameter published from Tableau Desktop. You cannot create a new parameter in web authoring. To add a parameter to a custom SQL query On the data source page, in the canvas, hover over the table until the edit icon displays, and then click the edit button. At the bottom of the dialog box, click Insert Parameter . Select a constant value in the SQL statement and then, from the Insert Parameter drop-down menu select the parameter you want to use instead. If you have not created a parameter yet, select Create a new parameter . Follow the instructions in Create Parameters to create a parameter. Note: Parameters can only replace literal values. They cannot replace expressions or identifiers such as table names. In the example below, the custom SQL query returns all orders that are marked as Urgent priority. In the custom SQL statement, the order priority is the constant value. If you want to change the connection to see the High priority orders, you would have to edit the data source. Instead of creating and maintaining many variations of the same query, you can replace the constant order priority value with a parameter. The parameter should contain all of the possible values for Order Priority. After you create a parameter, you can insert it into the SQL statement to replace the constant value. After you finish editing the connection, the new parameter is listed in the Parameters area at the bottom of the Data pane and the parameter control displays on the right side of the view. As you select different values, the connection updates. Note: If you are using an extract, you must refresh the extract in order to reflect changes to the parameter. Publishing a data source that uses Custom SQL parameters includes the parameters. The parameters are transferred to any workbooks that connect to the data source. Tableau Catalog support for custom SQL Support for custom SQL in Tableau Catalog depends on the custom SQL query. Tableau Catalog is available as part of the Data Management offering for Tableau Server and Tableau Cloud. For more information about Tableau Catalog, see ""About Tableau Catalog"" in the Tableau Server or Tableau Cloud Help. Supported queries Catalog supports custom SQL queries that meet the ANSI SQL-2003 standard, with three known exceptions: Time zone expressions Multiset expressions Tableau parameters Starting in 2021.4, Tableau Catalog also supports use of the Transact-SQL (T-SQL) dialect in Custom SQL, with the following exceptions: Hints FOR clauses OPENROWSET, OPENXML, and OPENJSON functions ODBC scalar functions FOR SYSTEM_TIME TABLESAMPLE MATCH expression CONTAINS expression FREETEXT expression Starting in Tableau Cloud October 2023 and Tableau Server 2023.3, Tableau Catalog also offers support for custom SQL queries that use PostgreSQL, with the following exceptions: XML function JSON functions and operators Supported features and functions Catalog supports the following additional functionality for data sources, workbooks, and flows with connections that use the MySQL or PostgreSQL drivers, for example, Amazon Aurora for MySQL, Amazon RedShift, Pivotal Greenplum Database, MemSQL, Denodo, and others. MySQL GROUP_CONCAT function PostgreSQL arrays PostgreSQL EXTRACT() function Other custom SQL scenarios and functionality might work, but Tableau doesn't specifically test for or support them. Supported lineage When an asset uses custom SQL, a message with a Show Custom SQL Query button appears on the Lineage tab of the asset page. Click the button to see the custom SQL used in the connection. Then, if you would like to copy the custom SQL to your clipboard, click Copy . Some types of custom SQL can cause the upstream lineage to be incomplete. When this happens, a message appears with that information.  Field details cards might not contain links to connected columns, or might not show any connected columns at all.  Column details cards might not contain links to fields that use the column, or might not show any fields at all. If you are examining a table’s lineage, note that Catalog doesn't support showing column information in the lineage for table metadata gathered using custom SQL. However, if other assets use the same table and don’t use custom SQL, Tableau Catalog might be able to display information about the columns that it has discovered through these other assets. In the following screenshot, the factAccountOpportunityByQuarter table was indexed because it’s used by a data source. However, because it’s referenced by a custom SQL query, the column information isn't available. In a case where more than one data source, workbook, or flow uses a table, any of the assets downstream from that table that uses a custom SQL query are excluded when column-level filters are applied. As a result, fewer downstream assets show in the lineage than are actually used. For more information about using the lineage, see ""Use Lineage for Impact Analysis"" in the Tableau Server (Link opens in a new window) or Tableau Cloud (Link opens in a new window) Help. See Also Use Custom SQL and RAWSQL to perform advanced spatial analysis (Link opens in a new window) Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.8. Connect to a data source on Tableau Server,https://help.tableau.com/current/pro/desktop/en-us/examples_tableauserver.htm,"Connect to Data by Using Tableau Server or Tableau Cloud Applies to: Tableau Cloud, Tableau Desktop, Tableau Prep, Tableau Server You can connect to data from either Tableau Desktop or a web browser by using Tableau Server or Tableau Cloud. The process differs slightly for each. Starting in 2019.3, Tableau Catalog is available with Data Management in Tableau Server and Tableau Cloud. When Tableau Catalog is enabled in your environment, in addition to connecting to published data sources from Tableau Server or Tableau Cloud, you can connect to databases and tables from the Search for Data dialog on Tableau Desktop and the Connect to Data dialog in Tableau Web Authoring.  For more information about Tableau Catalog , see ""About Tableau Catalog"" in the Tableau Server or Tableau Cloud Help. Starting in 2021.4, Data Management includes virtual connections, a central access point to data. For more information, see ""About Virtual Connections and Data Policies"" in the Tableau Server (Link opens in a new window) or Tableau Cloud (Link opens in a new window) help. Tableau Prep Builder can  connect to  published data sources and you can use them as an input data source for your flow starting in version 2019.3.1. If you have Data Management with Tableau Catalog enabled, starting in version 2020.2.2, you can also connect to databases and tables from the Search for Data results, just like Tableau Desktop. For more information, see Connecting to published data sources (Link opens in a new window) in the Tableau Prep Builder help. Connect from Tableau Desktop Note: Starting 2019.3, on the Connect pane, Tableau Server has moved to the top of the pane under Search for Data . Select this option to connect to Tableau Server or Tableau Cloud from Tableau Desktop. Start Tableau Desktop and on the Connect pane, under Search for Data , select Tableau Server . To connect to Tableau Server, enter the name of the server and then select Connect . To connect to Tableau Cloud, select Tableau Cloud under Quick Connect . Tip: If you don't sign out, Tableau Desktop saves your server connection, so you can skip step 3.  You can also skip it if Kerberos is enabled on Tableau Server and your computer has valid credentials. For more information, see Automatically keep Tableau Desktop connected to Tableau Server or Online . To sign in: For Tableau Server, enter your user name and password. For Tableau Cloud, enter your email address and password. Select data to connect to. The Search for Data dialog displays a scrollable list of mixed content that's popular. If you have a Data Management license, you can connect to data with a virtual connection, and if you have Data Management with Tableau Catalog enabled, you can also connect to external assets, like databases, files, and tables. The responsive search field shows a list of suggestions that updates as you enter text. Filter search results by type of data, certification status, or other filters that depend on the type of data selected. For example, some types of data may allow you to filter based on tags, connection type, data quality warnings, or other criteria. Older versions of the dialog look and function slightly differently, but the overall function is similar. Note: Data that you don't have Connect permissions for is unavailable (gray). External assets (databases, files, and tables) are unavailable (gray) until Catalog finishes ingesting them. If you select a cube (multidimensional) data source, the Create Local Copy dialog box appears, and you must create a local copy of the data before you can start your analysis. In Web Authoring, you can make a connection with a subset of the data connectors that Tableau Desktop supports. If a data source, database, file, or table is grayed out, you can't connect from Tableau Server or Tableau Cloud. You can, however, connect from the Tableau Desktop Connect pane, if you have the correct permissions. After you select the data you want to connect to, click Connect . Select the sheet tab to start your analysis. Data sources published to Tableau Server or Tableau Cloud are shown in the Data pane with a Tableau icon. You might want to download a local copy of the data source so that you can, for example, work offline or make changes to a data source without modifying the original. To download a local copy, on the Data menu, select the data source, and then select Create Local Copy . A duplicate of the data source is added to the Data pane. Sign in on a Mac If you use Tableau Desktop on a Mac, when you enter the server name to connect, use a fully qualified domain name, such as mydb.test.ourdomain.lan, instead of a relative domain name, such as mydb or mydb.test. Alternatively, you can add the domain to the list of Search Domains for the Mac computer so that when you connect, you need to provide only the server name. To update the list of Search Domains, go to System Preferences > Network > Advanced , and then open the DNS tab. Connect to published data sources while web authoring Tableau Desktop users who create and customize data connections for Tableau use can publish their data sources to Tableau Server or Tableau Cloud. Publishing enables sharing data among colleagues, including those who don't use Tableau Desktop, but have permission to edit workbooks in the web editing environment. If you have permission to edit workbooks in a browser, follow these steps to connect to published data sources when you’re signed in to Tableau Server or Tableau Cloud. For more information see Edit Tableau Views on the Web and Using Tableau on the Web . Note: To connect to data, you need permission to create and edit views. Add more data to an existing view On a Tableau Server or Tableau Cloud site, select a view to edit. In editing mode, click the New Data Source icon . In the Connect to Data page, the options you can see and select from depend on your permissions: On this site . Select a published data source from the list, and then select Add data source . When Tableau Catalog is enabled in your environment, you can select Data Sources , Databases and Files , or Tables from the Content Type drop-down list. Then select the data you want to connect to and click Connect . Files . Drag and drop a file or upload one from your computer. Connectors . Connect to your data using one of the connectors listed. Create a workbook with a published data source You can also connect to a published data source when creating a new workbook: On a Tableau Server or Tableau Cloud site, navigate to the Explore page, and select All Data Sources from the drop-down list. In the list, select the check box next to the data you want to use. At the top of the page, from the Actions drop-down menu, select New Workbook . For information about connecting to data when you're authoring on the web, see Creators: Connect to Data on the Web . Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.1. Connect to data sources,1.1.9. Replace the connected data source with another data source for an existing chart or sheet,https://help.tableau.com/current/pro/desktop/en-us/connect_basic_replace.htm,"Replace Data Sources Note: Replacing a data source isn’t supported by Tableau Cloud or Tableau Server. Users can update a workbook or sheet with a different data source. Replacing a data source doesn’t merge or edit the data sources. It redirects fields used in the worksheet to map to corresponding fields in the new data source. Any fields that the user creates in the original data source are copied over to the new data source. Fields that aren’t included in the original data source must be manually copied and pasted to the new data source before replacing the old one. When you replace a data source, the folder structures aren't copied over. The two data sources don’t have to be identical, any differences between the data sources will affect the sheets in the workbook and the fields in the view.  Any fields, groups, sets, and calculated fields that don’t exist in the new data source (or have a different name) are removed from the Data pane. For more information about how to replace field references to fix invalid fields, see Edit Data Sources . Replace a Data Source Complete the following steps to replace a data source. Open a workbook that connects to the original data source. Select Data > New Data Source and then connect to the new data source. On the Data Source page, drag a table to the canvas to set up the data source (if this isn’t automatically done for you). Go to the sheet tab and select Data > Replace Data Source . Note: You must have at least one field in the view to make the Replace Data Source option available. In the Replace Data Source dialog box, select the Current data source and the Replacement data source. (optional) Under the Current field, select the checkbox to replace the current worksheet only. When finished, select OK . All worksheets, dashboards, and stories that used the original data source are updated to use the new data source. You can click Undo on the toolbar to revert the change and return to the original data source. Note: You can only replace one data source with another data source when both data sources are relational data sources, or when both data sources are cube (multidimensional) data sources. In Tableau, cube data sources are supported for Windows only. Replace the Data Source for a Single Sheet All sheets that use the data source will be updated when a data source is replaced. If you wish to replace the data source for a single sheet, you’ll need to use the following workaround. Copy the sheet to a new workbook. Delete the sheet from the old workbook. In the new workbook, replace the data source. Copy the sheet back into the original workbook. The data source and all relevant items for the sheet, such as parameters and sets will be copied as well. For more information, see Copy and paste sheets between workbooks . Published Data Sources When users publish a data source from a workbook, the current workbook in Tableau Desktop will automatically connect to the published data source and close the local data source. For more information on publishing a data source see Publish a Data Source . Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.1. Assess data quality (completeness, consistency, accuracy) (part 1)",https://help.tableau.com/current/prep/en-us/prep_get_started.htm,"Get Started with Tableau Prep Builder Note :  Starting in version 2020.4.1, as a Creator, you can also create and edit flows on the web. This tutorial was designed using Tableau Prep Builder, but can also be done on the web with some noted exceptions. This tutorial introduces you to the common operations that are available in Tableau Prep. Using the sample data sets that come with Tableau Prep, you will walk through creating a flow for Sample Superstore. This tutorial uses the most current version of Tableau Prep Builder. If you are using a previous version, your results may differ. Watch for tips along the way to gain insights into how Tableau Prep  helps you clean and shape your data for analysis. To install Tableau Prep Builder before continuing with this tutorial, see Install Tableau Desktop or Tableau Prep Builder from the User Interface (Link opens in a new window) in the Tableau Desktop and Tableau Prep Builder Deployment guide. Otherwise you can download the free trial (Link opens in a new window) . Sample files To complete the tasks in this tutorial, you need to install Tableau Prep Builder, or if web authoring is enabled on your server version 2020.4 or later, you can also try the steps on the web. After installing Tableau Prep Builder on your machine, you can also find the sample files in the following location : (Windows) C:\Program Files\Tableau\Tableau Prep Builder <version>\help\Samples\en_US\Superstore Files (Mac) /Applications/Tableau Prep Builder <version>.app/Contents/help/Samples/en_US/Superstore Files Alternatively, download the sample files from these links and create a Samples directory and a South sub-directory. You'll need to do this if completing this tutorial on the web. Download to Samples directory Download to South Sub-directory Orders_Central Orders_East Orders_West returns_reasons_new Orders_South_2015 Orders_South_2016 Orders_South_2017 Orders_South_2018 Here's the story... You work at the headquarters for a large retail chain. Your boss wants to analyze product sales and profits over the last four years for the company. You suggest that he use Tableau Desktop to do that. Your boss thinks that's a great idea and wants you to get right on that. As you start gathering all the data you'll need, you notice that the data has been collected and tracked differently for each region. You also notice a lot of creative data entry in the different files, and that one region even has a separate file for each year! Before you can start analyzing the data in Tableau, you'll have to do some serious data cleaning first, and it's going to be a long night. As you rummage for restaurant menus to order some dinner, you remember that Tableau has a product called Tableau Prep  that might help you with your Herculean data cleaning tasks. You download the product, or sign up for a free trial (Link opens in a new window) and decide to give it a try. 1. Connect to data The first thing you see when you open Tableau Prep Builder is a Start page with a Connections pane, just like Tableau Desktop. To get started, the first step is to connect to your data and create an Input step. From there you will start building a workflow or ""flow"", as it's called in Tableau Prep, and add more steps to take action on your data as you go. Tip : The Input step is the ingestion point for your data and the starting point for your flow. You can have multiple Input steps and some might include multiple data files. For more information about connecting to data, see Connect to Data (Link opens in a new window) . Your sales data files for the different regions are stored in different formats, and your orders from the South are actually multiple files. You check out the Connections pane and see that you have a lot of choices to connect to data. Great! Since your other regions have one file for all four years worth of data, you decide to tackle the files from the South  first. On the Connections pane, click the Add connection button. In web authoring, from the Home page, click Create > Flow or from the Explore page, click New > Flow . Then click Connect to Data . The files are .csv files, so select Text file in the list of connections. Navigate to the directory for your files. In the Orders South subdirectory, select  the first file orders_south_2015.csv and click Open to add it to your flow. (For file location, see Wrap up and resources .) After you connect to your first file, the Tableau Prep Builder workspace opens and you see it is divided into two main sections. The Flow pane at the top and the Input pane at the bottom. Much like Tableau Desktop, this Flow pane is your workspace, where you can interact with your data visually and build your flow. The Input pane contains configuration options about how the data is ingested. It also shows you the fields, data types, and examples of your values from your data set. We'll look at how you can interact with this data in the next section. Tip: For single tables, Tableau Prep  automatically creates an Input step for you in the Flow pane when you add data to your flow. Otherwise you can use drag-and-drop to add tables  to the Flow pane. You have three other files for your orders in the South, and how you combine them depends on where you're working. In Tableau Prep Builder: You could add each file individually, but you want to combine all the files together into one  Input step, so you click the Tables tab in the Input pane. You see an option for Union multiple tables . Select it. You notice that the directory where you selected your file is already populated and the other files you need are listed in the Included files section in the Input pane. Tip : Using a wildcard union is a great way to connect to and combine multiple files from a single data source with a similar name and structure. To use this option, the files must be in the same parent or child directory. If you don't see the files you need right away, change your search criteria. For more information, see Union files and database tables in the Input step (Link opens in a new window) . Click Apply to add the data from these files to the orders_south_2015 input step. The files for the other regions are all single table files, so you can select all of the files at once and add them to your flow. Note : On the web, files can only be uploaded individually. In Tableau Server or Tableau Cloud: The wildcard option isn't currently available for Tableau Server or Tableau Cloud. Still, you want to include all of the files from the South and handle the data alike, so combining them makes sense. Repeat steps 2 and 3 to add the rest of the files from the Orders South subdirectory. Combine them with a union step. (For more details, see Union files and database tables in the Input step (Link opens in a new window) .) Drag Orders_South_2016 on top of Orders_South_2015 and drop it on the Union option. Drag Orders_South_2017 on top of the new Union step and drop it on Add . Repeat this step with the final file. Add the remaining files. In Tableau Prep Builder: Open File Explorer or Finder and navigate to the directory for the files. Ctrl-click or Cmd-click (MacOS) to select  the following files and drag-and-drop them onto the Flow pane to add them to your flow. (For file location, see Wrap up and resources .) Orders_Central.csv Orders_East.xlsx Orders_West.csv Note : These are different file types. If you don't see all of these files, make sure your file explorer or finder is set to view all file types. In Tableau Server or Tableau Cloud: Follow steps 2 and 3 to add Orders_Central.csv and Orders_West.csv. On the Connections pane, click the Add connection button. Click Microsoft Excel and select Orders_East.xlsx . Check your work: Watch ""Connect to data"" in action. Click the image to replay it 2. Explore your data Now that you have the data files  loaded into Tableau Prep, you're pretty sure that you want to combine all of the files together. But before you do that, it might be a good idea to take a look at them first and see if you can spot any issues. When you select an Input step in the Flow pane, you can see the settings used to bring in the data, the fields that are included,  and a preview of your values. This is a good place to decide how much data you want to include in your flow and remove or filter fields that you don't want. You can also change any data types that were assigned incorrectly. Tip : If you are working with large data sets, Tableau Prep  automatically brings in a sample of the data to maximize performance. If you don't see the data you expect, you might need to adjust the sample. You can do this on the Data Sample tab. For more information about configuring your data options and sample size, see Set your data sample size (Link opens in a new window) . In the Flow pane, as you select each step and look over each data set, you notice a few things that you want to fix later and one thing that you can fix now in the Input step. Select the Orders_West Input step. The State field uses abbreviations for the state name. Other files spell this out, so you'll need to fix that later. There are a lot of fields that start with Right_ . These fields appear to be duplicates of the other fields. You don't want to include these duplicate fields in your flow. This is something you can fix right here in the Input step: To fix this now , clear the check box for all fields that start with Right_ . This tells Tableau Prep to ignore these fields and not to include them  in the flow. Tip : When you perform cleaning operations in a step, like removing fields, Tableau Prep  tracks your changes in the Changes pane and adds an annotation (in the form of a little icon) in the Flow pane to help you keep track of the actions you take on your data. For Input steps, an annotation is also added to each field. In the Flow pane, click the Orders_Central Input step to select it. In the Input pane, you notice the following issues: The order dates and ship dates are separated out into fields for month, day, and year. Some of the fields have different data types than the same fields in  other files. There is no field for Region . You'll need to do some cleaning on these fields before you can combine this file with the others files. But you can't fix that here in the Input step, so you make a note to do this later Select the Orders_East Input step. The fields in this file look like they align pretty well with the other files. But the Sales values all seem to have the currency code included. You'll need to fix that later, too. Now that you've identified a few troublemakers in your data sets, the next step is to examine your data a bit more closely  and clean up any issues that you find so that you can combine and shape your data and generate an output file that you can use for analysis. 3. Clean your data In Tableau Prep, examining and cleaning your data is an iterative process. After you decide on the data set that you want to work with, the next step is to examine and take action on that data by applying various cleaning, shaping, and combining operations to it. You apply these operations by adding steps to your flow. For more information about  cleaning options, see Clean and Shape Data (Link opens in a new window) Steps come in many flavors, depending on what you are trying to do. For example, add a cleaning step any time you want to apply cleaning operations to your fields like filter, merge, split, rename, and so on. Add an aggregation step to group and aggregate fields and change the level of detail of your data. For more information about the different step types and their uses, see Build and Organize your Flow (Link opens in a new window) . Tip : As you add steps to your flow, a flow line is automatically added to connect the steps to one another. You can move these flow lines around and remove or add them as needed. When you run your flow, these connection points are required so Tableau Prep  knows which steps are connected and in which order the steps apply in the flow. If a flow line is missing, the flow will be broken and you'll get an error. Clean Orders_Central To address the issues you noticed earlier and to see if there are any other issues, you start by adding a cleaning step to the Orders_Central Input step. In the Flow pane, select Orders_Central , do one of the following: Click the  plus icon and add a cleaning step. Depending on your version, this menu option is Add Step , Add Clean Step , or Clean Step . Click on the suggested clean step ( Tableau Prep Builder version 2020.3.3 and later and on the web) When you add a cleaning step to your flow, the workspace changes and you see the details of your data. A. Flow pane, B. Toolbar, C. Profile pane, D. Data grid The workspace is now split into three parts: the Flow pane, the Profile pane with a toolbar, and the Data grid. The Profile pane shows you the structure of your data, summarizing the field values into bins so that you can quickly see related values and spot outliers and null values. The Data grid shows you the row level detail for your fields. Tip : Each field in the Profile pane is shown on a profile card. Use the More options menu (drop-down arrow in prior versions) on each card to see and select the different cleaning options that are available for that field type. You can also sort the field values, change the data type, assign a data role to the field or drag and drop the profile cards and the columns in the Data grid to rearrange them. Clean data with calculated fields This data set is missing a field for Region . Since the other data sets have this field you'll need to add it so that you can combine your data later. You'll need to use a calculated field to do this. In the toolbar, click Create Calculated Field . In the Calculation editor, name the calculated field Region . Then enter ""Central"" (including the quotes) and click Save . You love the flexibility of being able to use calculated fields to shape you data. You are pleased to see that Tableau Prep  uses the same calculation editor language as Tableau Desktop. Tip : When you make changes to your fields and values, Tableau Prep  keeps track of them in the Changes pane on the left. An icon (annotation) representing the change is also added to the cleaning step in the flow and to the field in the Profile pane. We'll look at the Changes pane after making more changes. Next you want to address the separate order date and ship date fields. You want to combine them into two single fields, one for Order Date and one for Ship Date so they align with the same fields in the other data sets. Making sure your tables have the same fields will enable you to combine the tables using a union later. You can use a calculated field again to do this in one easy step. In the toolbar, click Create Calculated Field to  combine the Order Year , Order Month , and Order Day fields into one field with the format ""MM/DD/YYYY"". In the Calculation editor, name the calculated field Order Date . Then enter the following calculation and click Save : MAKEDATE([Order Year],[Order Month],[Order Day]) Now that you have a new field for your order date, you want to remove the existing fields, as you no longer need them. You have a lot of fields in the Profile pane. You notice a Search box in the top right corner on the toolbar. You wonder if you can use that to quickly find the fields that you want to remove. You decide to give it a try. In the Profile pane, in the search box, type Order . Tableau Prep  quickly scrolls all the fields with Order in the name into view. Cool! Ctrl-click or Cmd-click (MacOS) to select the fields for Order Year , Order Month , and Order Day . Then right-click on the selected fields and select Remove ( Remove Field in prior versions) from the menu to remove them. Now repeat steps 4 though 7 above to create a single field for Ship Date . Try it on your own or use the steps below to help you. In the toolbar, click Create Calculated Field to  combine the Ship Year , Ship Month , and Ship Day fields into one field with the format ""MM/DD/YYYY"". Name the calculated field Ship Date and enter the calculation MAKEDATE([Ship Year],[Ship Month],[Ship Day]) . Then click Save . Remove the Ship Year , Ship Month , and Ship Day fields. Search for the fields, select them, and select Remove ( Remove Field in prior versions) from the menu to remove the fields. Tip : Tableau Prep  summarizes the data in the Profile pane into bins to help you quickly see the shape of your data, find outliers, spot relationships between fields, and so on. In this scenario, the order and ship dates can now be summarized by year. Each bin represents a year from January of the starting year to January of the following year and is labeled accordingly. Because there are sales dates and ship dates that fall in the latter part of 2018 and 2019, we get a bin for that data that is labeled with the ending year 2019 and 2020 accordingly. To change this view to the actual dates, click the More options menu (drop-down arrow in prior versions) in the Profile card and select Detail . Interact directly with fields to clean your data Your data is starting to look good. But, as you finish removing the extra fields for the order and ship dates, you notice that the Discounts field has a couple  of issues. It's assigned to a String data type instead of a Number (decimal) data type. There's a field value None instead of a numeric value for no discount. This will cause a problem when you combine the files, so you better fix that too. Clear your search and enter disc in the search box to find the field. Select the Discounts field, double-click the field value None , and change it to the numeric value 0 . To change the data type for the Discount field from String to Number (decimal) , click Abc and select Number (decimal) from the drop-down menu. Finally name your step to help keep track of what you did in this step. In the Flow pane, double-click the step name Clean 1 and type in Fix dates/field names . Review your changes You made a lot of changes to this data set and you start to worry that you won't remember everything you did. As you look over your work, you see a column on the left of the Profile pane called Changes . You click the arrow to open it and are delighted to see a list of every change you just made. As you scroll through the changes in the list, you notice that you can delete or edit your changes or even move them around to change the order that you did them in. You love that you can easily find the changes you made in any step as you build your flow and  experiment with the order of those changes to get the most out of your data. Check your work: Watch ""Clean Orders_Central"" in action. Click the image to replay it Now that you've cleaned one file, you  take a look at the other files to see what other issues you need to fix. You decide to look at the Excel file for Orders_East next. Clean Orders_East As you look over the fields for the Orders_East file, most of the fields look like they align with the other files, except for Sales . To take a closer look and see if there are any other issues to address, you add a cleaning step to the Orders_East Input step. In the Flow pane, select Orders_East and do one of the following: Click the  plus icon and add a clean step. Depending on your version, this menu option is Add Step , Add Clean Step , or Clean Step . Click on the suggested clean step ( Tableau Prep Builder version 2020.3.3 and later and on the web). Looking at the Sales field you quickly see that the USD currency code has been included with the sales numbers, and Tableau Prep interpreted these field values as a string. You'll need to remove the currency code from this field and change the data type if you want to get accurate sales data. Fixing the data type is easy, you already know how to do that. But there are over 2000 unique rows of sales data and fixing every individual row to remove the currency code seems cumbersome. But this is Tableau Prep, and you decide to check out the drop-down menu to see if there is an option to fix this. When you click the More options (drop-down arrow in prior versions) for the Sales field, you see a menu option called Clean and an option under that to remove letters. You decide to give that a try and see what it does. Select the Sales field. Click the More options menu (drop-down arrow in prior versions) and select Clean > Remove Letters . Wow! That cleaning option instantly removed the currency code from every field. Now you just need to change the data type from String to Number (decimal) and this file is looking good. Click the data type for the Sales field and select Number (decimal) from the drop-down list to change the data type. The rest of the file looks pretty good. Name your cleaning step to keep track of your work. For example, Change data type . Next you look at your last file for Orders_West to see if there are any issues there that you need to fix. Clean Orders_West As you look over the fields for the Orders_West file, most of the fields look like they align with the other files, but you remember seeing that the States field used abbreviations for the values instead of spelling out the state name. To  combine this file with the other files, you'll need to fix this. So you add a cleaning step to the Orders_West Input step. In the Flow pane, select Orders_West and do one of the following: Click the  plus icon and add a clean step. Click on the suggested clean step ( Tableau Prep Builder version 2020.3.3 and later and on the web). Scroll or use Search to find the State field. You see that all the state name values use the short abbreviation. There are only 11 unique values for this field. You could manually change each one, but maybe Tableau Prep has another way to do this? You click the More options menu (drop-down arrow in prior releases) for the field and see an option called Group Values (Group and Replace in previous versions). When you select it you see several options: Manual Selection Pronunciation Common Characters Spelling The state names don't sound alike, they aren't spelled incorrectly, and they don't share the same characters, so you decide to try the Manual Selection option. Tip : You can double-click a field name or field value to edit a single value. To edit multiple values you can select all the values and use the right-click menu option Edit Values . But when you want to map one or more values to specific values, use the Group Values option in the drop-down menu. For more information about editing and grouping values, see Edit field values (Link opens in a new window) . Select the State field. Click the drop-down arrow and select Group Values (Group and Replace in previous versions) > Manual Selection . A two column card opens. This is  the Group Values editor . The column on the left shows the current field values and the column on the right shows the fields that are available to map to the fields on the left. You want to map your state abbreviations to the spelled out version of the state name, but you don't have those values in the Orders_West data set. You wonder if you can just edit the name directly and maybe add it there, so you give that a try. In the Group Values editor in the left pane, double-click AZ to highlight the value and type Arizona . Then press Enter to add your change. Tableau Prep  created a mapped value for your new value Arizona and automatically mapped the old value, AZ to it.  Having a mapped relationship set up for these values will save you time if you get more data from this region entered like this. Tip : You can add field values that aren't in your data sample to set up mapping relationships to organize your data. If you refresh your data source and new data is added, you can add the new data to the mapping instead of manually fixing each value. When you manually add a value that isn't in your data sample, the value is marked with a red dot to help you easily identify it. Repeat these steps to map each state to the spelled out version of its name. Abbreviation State Name AZ Arizona CA California CO Colorado ID Idaho MT Montana NM New Mexico NV Nevada OR Oregon UT Utah WA Washington WY Wyoming Then click Done to close the Group Values editor. After all the states are mapped, you look at the Changes pane and see there is only one entry there instead of 11. Tableau Prep  grouped similar actions for a field together. You like that because it will make it easier to find changes you made to your data set later. Fixing the State field values was the only change you needed to make here. Name your cleaning step to keep track of your work. For example Rename states . You've done a lot of clean up in your files, and you can't believe how quick and easy it was. You might make it home for dinner after all! To make sure that you don't lose all of your  work so far, save your flow. Note : If working on the web, your changes are automatically saved as you go, creating a draft flow. Click in the draft title to name your draft. For more information about authoring on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) or Tableau Cloud (Link opens in a new window) help. Click File > Save or File > Save As . Save your file as a flow file (.tfl) and give it a name. For example, My Superstore . Tip : When you save your flow files, you can either save them as a flow file (.tfl) or you can save them as a packaged file (.tflx) and package your local data files with them  to share the flow and files with someone else. For more information about saving and sharing your flows, see Save and Share Your Work (Link opens in a new window) . 4. Combine your data Now that all the files are cleaned up, you are finally ready to combine them all. Because all the files have similar fields after your clean up efforts, to pull all the rows together into a single table, you need to union the tables. You remember that there was a step option called Union , but you wonder if you can simply drag and drop the steps to union them. You decide to try it and see. Union your data Follow the steps for where you are working. Tableau Prep Builder In the Flow pane, drag the  cleaning step Rename states on to the cleaning step Changed data type step and drop it on the Union option. You see that Tableau Prep Builder added a new Union step to your flow. Great! Now you want to add the other files to this union too. Tableau Server or Tableau Cloud In the Flow pane, drag the cleaning step Rename states on to the Union step you created earlier for your South files and drop it on the Add option. You see that Tableau Prep  added your new files to your previous union. Great! Now you want to add the other files to this union too. Drag the next cleaning step in the flow on to the Union step, then drop it on Add to add it to the existing union. Drag the remaining step ( orders_south_2015 Input step if working in Tableau Prep Builder or your cleaning step if working on the web) to the new Union step. Drop it on Add to add it to the existing union. Now all of your files are combined into a single table. In the Flow pane, select the new Union step to see your results. On Tableau Prep Builder: On Tableau Server or Tableau Cloud: You notice that Tableau automatically matched up the fields that had the same names and types. You also see that the colors assigned to the steps in the flow are used in the union profiles to indicate where the field came from and also appear in the colored band across the top of each field to show you if that field exists in that table. You  notice that a new field called Table Names was added that lists  the tables where all the rows in the union come from. A list of mismatched fields also shows in the summary pane  and you can see right away that the fields Product and Discounts only appear in the Orders_Central file. To take a closer look at these fields, in the Union Results pane, select the Show only mismatched fields check box. Looking at the field data, you quickly see that the data is the same, but the field name is different. You could simply rename the field, but you wonder if you could just drag and drop these fields to merge them. You decide to try that and see. Select the Product field and drag and drop it onto the Product Name field to merge the fields. After the fields are merged, they no longer appear in the pane. Repeat this step to merge the Discounts field with the Discount field. The only field that doesn't have a match now is the File Paths field. In Tableau Prep Builder, this field shows the file paths for the wildcard union that you did for your sales orders from the South. You decide to leave this field there as it has good information. Tip : You have several options when fixing mismatched fields after a union. If Tableau Prep detects a possible match, it will highlight it in yellow. To merge the fields hover over the highlighted field and click the plus button that appears. For more ways to merge fields in a union, see Fix fields that don’t match . Clear the Show only mismatched fields check box to show all the fields included in the union. Name your Union step to represent what this union includes work. For example, All orders . Check your work: Watch ""Union your data"" in action. Click the image to replay it You are a cleaning genius! As you are admiring your results, your boss calls. He forgot to mention that he also wants you to include any product returns in your analysis. He hopes that won't be too much trouble. With Tableau Prep  in your toolkit, it's no problem at all! Clean the product returns data You look over the Excel file that your boss sent you for product returns and it looks a little messy. You add the new file return_reasons new to your flow to take a closer look. In the Connections pane, click Add  connection . Select Microsoft Excel and navigate to the sample data files you've been using for this exercise. (See Sample files to download the file.) Select return reasons_new.xlsx , and then click Open to add the file to the flow pane. There are only four fields that you want to include from this file in your flow: Order ID , Product ID , Return Reason and Notes . In the Input pane for returns_new clear the check box at the top of the left-most column to clear all the check boxes. Then select the check box for the Order ID , Product ID , Return Reason and Notes fields. Rename the Input step to better reflect the data that is included in this input. In the Flow pane, double-click the Input step name Returns_new and type in Returns (all) . Looking at the sample field values, you notice that the Notes field seems to have a lot of different data combined together. You have some cleaning to do in this file before you can do any further work with the data, so you add a cleaning step to check it out. In the Flow pane, select the Input step Returns (all) , click the  plus icon or on the suggested clean step to add a clean step. In the Profile pane, re-size the Notes field so you can see the entries better. To do this, click and drag the outer right edge of the field to the right. In the Notes field, use the visual scroll bar to the right of the field values to scan the values. You notice a few things that are problematic: Some of the entries have an extra space in the entry. This can result in the field being read as a null value. It looks like the name of the approver is included in the return notes entry. To better work with this data you'll want  that information in a separate field. To tackle the extra spaces, you remember that there was a cleaning option to remove trailing spaces, so you decide to try that to see if it can fix that  problem. Select the Notes field. Click the More options menu (drop-down arrow in prior releases) and select Clean > Trim Spaces . Yes! It did exactly what you wanted it to do. The extra spaces are gone. Next you want to create a separate field for the approver name. You see a Split Values option in the menu, so you decide to try that. Select the Notes field. Click the More options menu (drop-down arrow in prior releases) and select Split Values > Automatic Split . This option did exactly what you were hoping it would do. It automatically split the return notes and the approver name into separate fields. Just like Tableau Desktop, Tableau Prep  automatically assigned a name to those fie"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.1. Assess data quality (completeness, consistency, accuracy) (part 2)",https://help.tableau.com/current/prep/en-us/prep_get_started.htm,"lds. So you'll need to rename the new fields to something meaningful. Select the field Notes-Split 1 . Double-click in the field name and type Return Notes . Repeat this step for the second field and rename it to Approver . Finally remove the original Notes field, as you no longer need it. Select the Notes field, click the More options menu (drop-down arrow in prior versions), and select Remove ( Remove Field in prior versions) from the menu. Looking at the new Approver field, you notice that the field values lists the same names but they are entered  differently. You want to group them to eliminate multiple variations of the same value. Maybe the Group Values (Group and Replace in prior versions) option can help with that? You remember there was an option for Common Characters . Since these values share the same letters, you decide to try that. Select the Approver field. Click the More options menu (drop-down arrow in prior versions) and select Group Values (Group and Replace in prior versions) > Common Characters . This option grouped all of the variations of each name together for you. That's exactly what you wanted to do. After checking the other names to make sure they are grouped properly, you click Done to close the Group Values editor . This file is looking pretty good. Name your cleaning step to keep track of your work. For example Cleaned notes . Now that the product return data is all cleaned up, you want to add this data to the orders data from your unioned files. But many of these fields don't exist in the unioned files. To add these fields (columns of data) to your unioned data set, you need to use a join. Join your data When you join data, the files must have at least one field in common. Your files share the Order ID and Product ID fields, so you can join on those fields to see all the rows that have those fields in common. You remember an option to create a join when you created your union using drag and drop, so you give that a try. In the Flow pane, drag the Cleaned notes step on to the All orders Union step and drop it on Join . When you join files, Tableau Prep  shows you the results of your join in the Join Profile . Working with joins can be tricky. You often want to have a clear view of the factors that are included in the join, such as the fields used to join the files, the number of rows included in the results and any fields that aren't included or are null values. As you review the results of the join in Tableau Prep, you are delighted to see so much information and interactivity at your fingertips. Tip: The far left pane of the join profile is where you can explore and interact with your join. You can also edit values directly in the Join Clauses panes and perform cleaning operations in the Join Results pane. Click in the Join Type diagram to try different join configurations and see the number of rows included or excluded in your join for each table in the Summary of Join Results section. Select the fields that you want to join on in the Applied Join Clauses section or add suggested join clauses from the Join Clause Recommendations section. For more information about working with joins, see Aggregate, Join, or Union Data (Link opens in a new window) . You see that you have over 13,000 rows excluded from your All Orders files. When you created your join, Tableau Prep  automatically joined on the Product ID field, but you  also wanted to join on the Order ID field. As you scan the left pane of the join profile, you see that Order ID is in the list of recommended join clauses, so you quickly add it from there. In the left pane of the Join profile, in the Join Clause Recommendations section, select Order ID = Order ID and click the plus button to add the  join clause. Because the Join Type is set to an inner join (the default setting for Tableau Prep), the join is only including values that exist in both files. But you want all of the data from your Orders files as well as the return data for those files. So you'll need to change the join type. In the Join Type section, click the side of the diagram to include all orders. In the example below, click the left side of the diagram to change the join type to a Left join and include all data from the All orders union step and any matching data from the Cleaned notes step. Now you have all of the data from the sales order files and any return data that apply to those orders. You review the Join Clauses pane and see the distinct values that don't exist in the other file. For example there are many order rows (shown in red) that have no corresponding return data. You love being able to explore this level of detail about your join. You're anxious to start analyzing this data in Tableau Desktop, but you notice a few results from the join that you want to clean up before you do that. Good thing you know what to do! Tip : Wonder if your data is clean enough? From Tableau Prep Builder, you can preview your data in Tableau Desktop from any step in your flow to check it out. Just right-click on the step in the Flow pane and select Preview in Tableau Desktop from the menu. You can experiment with your data and any changes that you make in Tableau Desktop won't write back to your data source in Tableau Prep Builder. For more information see View flow output in Tableau Desktop (Link opens in a new window) . Before you start cleaning your join results, name your Join step Orders+Returns and save your flow. Clean your join results Note : To clean up the fields in your join, you can perform cleaning operations directly in the Join step. For the purposes of this tutorial we will add a cleaning step so you can clearly see your cleaning operations. If you want to try performing these steps directly in the join step skip steps 1 and 3 below. When you joined the two steps, the common fields Order ID and Product ID were added for both tables. You want to keep the Product ID field from all of your orders and the Order ID field from the returns file and remove the duplicate fields that came from those files. You also don't need the File Paths and Table Names fields in your output file, so you want to remove those fields as well. Tip : When you join tables using fields that exist in both files, Tableau Prep   brings in both fields and renames the duplicate field from the second file by adding a ""-1"" or a ""-2"" to the field name. For example Order ID and Order ID-1. In the Flow pane, select Orders+Returns , click the  plus icon, and add a clean step. In the Profile pane, select and remove the following fields: Table Names Order ID File Paths (Tableau Prep Builder only) Product ID-1 Rename the field Order ID-1 to Order ID . You have quite a few null values where the product was returned but there was no return note or approver indicated. To make this data easier to analyze, you want to add a field with a  value of Yes and No to indicate whether the product was returned. You don't have this field, but you can add it by creating a calculated field. In the toolbar, click Create Calculated Field . Name the field Returned? and then enter the following calculation and click Save . If ISNULL([Return Reason])=FALSE THEN ""Yes"" ELSE ""No"" END For your analysis you would also like to know the number of days it takes to ship an order, but you don't have that field either. You have all the information that you need to create it though, so you add another calculated field to create it. In the toolbar, click Create Calculated Field . Name the field Days to Ship and then enter the following calculation and click Save . DATEDIFF('day',[Order Date],[Ship Date]) Name your step Clean Orders +Returns . Save your flow. 5. Run your flow and generate output Your data is looking good  and you're  ready to generate your output file to start analyzing it in Tableau Desktop. All you need to do is run your flow and generate your extract file. To do this you need to add an Output step. Depending on where you're working, you can output your flow to a file (Tableau Prep Builder only) , to a published data source or to a database. In the Flow pane , select Clean Orders+Returns , click the  plus icon and select Output ( Add Output in prior versions). When you add an Output step, the Output pane opens and shows you a snapshot of your data. Here you can select the type of output that you want to generate, and specify the name and where you want to save the file. The default location is in the My Tableau Prep Builder repository in your data sources folder. In the left pane in the Save output to drop-down, depending on where you are working, do one of the following: Tableau Prep Builder Select File (select Save to file in previous versions). Click the Browse button, then in the Save Extract As dialog, enter a name for the file, for example Orders_Returns_Superstore , and click Accept . In the Output type field, select an output type. Select Tableau Data Extract (.hyper) for Tableau Desktop or Comma Separated Values (.csv) if you want to share the extract with a third party. Tableau Server or Tableau Cloud Select Published data source . Select a project. Enter a name for the file, for example Orders_Returns_Superstore . Tip : You have choices when generating output from your flow. You can generate an extract file (Tableau Prep Builder only),  you can publish your data as a data source to Tableau Server or Tableau Cloud or you can write your data to a database. For more information about generating output files, see Create   data extract files and published data sources (Link opens in a new window) . In the Write Options section,  view the  options  to write the new data to your files. You want to use the default ( Create table ) and replace the table with your flow output, so there is nothing to change here. Tip : Starting in version 2020.2.1, you can choose how you want to write your flow data back to your table. You can choose from two options; Create table or Append table . By default, Tableau Prep  uses the Create table option and overwrites your table data with the new data when you run your flow. If you choose Append table , Tableau Prep  adds the flow data to the existing table so you can track both new and historical data on every flow run. For more information, see Configure write options In the Output pane, click Run Flow or click the Run Flow button in the flow pane to generate your output. Note : If you are working on the web, click Publish to publish your draft flow. Only published flows can be run. When the flow is finished running, a status dialog shows whether the flow ran successfully and the time it took to run. Click Done to close the dialog. If working on the web, navigate to the Explore > All Flows page, and find your flow. You can see the status of your flow run on the Flow Overview page. To keep your data fresh, you can run the flow manually or use the command line. If you have Data Management and have Tableau Prep Conductor enabled, you can also run your flow on a schedule in Tableau Server or Tableau Cloud . Starting in Tableau Prep Builder version 2020.2.1 and on the web, you can also choose to refresh all your data every time the flow is run, or run your flow using incremental refresh and process only your new data each time. For more information about keeping your data fresh, see the following topics: Refresh flow output files from the command line (Link opens in a new window) Publish a Flow to Tableau Server or Tableau Cloud (Link opens in a new window) Refresh Flow Data Using Incremental Refresh (Link opens in a new window) Wrap up and resources You are a data prep rock star! You took dirty data and transformed it with ease! In no time, you cleaned and prepped your data from multiple data sets and turned it into a sleek, clean data set that you can now work with in Tableau Desktop to do your analysis. Want more practice? Try replicating the rest of the sample flow for Superstore using the  data files found here: Orders_South_2015 Orders_South_2016 Orders_South_2017 Orders_South_2018 Orders_Central Orders_East Orders_West returns_reasons_new Quota You can also find the files in the following location on your computer after installing Tableau Prep Builder: (Windows) C:\Program Files\Tableau\Tableau Prep Builder <version>\help\Samples\en_US\Superstore Files (Mac) /Applications/Tableau Prep Builder <version>.app/Contents/help/Samples/en_US/Superstore Files Want more training? Check out these great resources (Link opens in a new window) , or take an in-person training (Link opens in a new window) course. Want more information about the topics we covered? Check out the other topics in the Tableau Prep  online help. Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,1.2.2. Perform cleaning operations (part 1),https://help.tableau.com/current/prep/en-us/prep_clean.htm,"Clean and Shape Data Note : Starting in version 2020.4.1, you can now create and edit flows in Tableau Server and Tableau Cloud . The content in this topic applies to all platforms, unless specifically noted. For more information about authoring flows on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) and Tableau Cloud (Link opens in a new window) help. Tableau Prep offers various cleaning operations that you can use to clean and shape your data. Cleaning up dirty data makes it easier to combine and analyze your data or makes it easier for others to understand your data when sharing your data sets. You can also clean your data using a pivot step or a script step to apply R or Python scripts to your flow. Script steps aren’t supported in Tableau Cloud. For more information, see Pivot Your Data (Link opens in a new window) or Use R and Python scripts in your flow (Link opens in a new window) . About cleaning operations You clean data by applying cleaning operations such as filtering, adding, renaming, splitting, grouping, or removing fields. You can perform cleaning operations in most step types in your flow. You can also perform cleaning operations in the data grid in a cleaning step. You can apply limited cleaning operations in the Input step and can't apply cleaning operations in the output step. For more information about applying cleaning operations in the Input step, see Apply cleaning operations in an input step (Link opens in a new window) . Available cleaning operations The following table shows which cleaning operations are available in each step type: Input Clean Aggregate Pivot Join Union New Rows Output Filter X X X X X X X Group Values X X X X Clean X X X X X Convert Dates X X X X X X Split Values X X X X X Rename Field X X X X X X Rename Fields (in bulk) X Duplicate Field X X X X X Keep Only Field X X X X X X X Remove Field X X X X X X X Create Calculated Field X X X X X Edit Value X X X X X Change Data Type X X X X X X X As you make changes to your data, annotations are added  to the corresponding step  in the Flow pane and an entry is added in the Changes pane to track your actions. If you make changes in the Input step, the annotation shows to the left of the step in the Flow pane and shows in the Input profile in the field list. The order that you apply your changes matters. Changes made in Aggregate, Pivot, Join, and Union step types are performed either before or after those cleaning actions, depending on where the field is  when you make the change. Where the change was made is shown  in the Changes pane for the step. The following example shows changes made to several fields in a Join step. The change is performed before the join action to give  the corrected results. Order of operations The following table shows where the cleaning action is performed in Aggregate, Pivot, Join, and Union step types depending on where the field is in the step. Action Step Type: Aggregate Aggregate Pivot Pivot Join Join Union Union New Rows Field Location: Grouped fields Aggregated fields Not in pivot Created from pivot Included in one table* Included in both tables* Mismatched fields Combined fields Field used to generate rows Filter Before Aggregation After Aggregation Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Group Values NA NA Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Clean NA NA Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Convert Dates Before Aggregation After Aggregation Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Split Values NA NA Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Rename Field NA NA Before Pivot After Pivot Before Join After Join Before Union After Union Before New Rows Duplicate Field NA NA Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Keep Only Field After Aggregation After Aggregation Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Remove Field Removes from Aggregation Removes from  Aggregation Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Create Calculated Field NA NA Before Pivot After Pivot After Join After Join Before Union After Union After New Rows Edit Value NA NA Before Pivot After Pivot Before Join After Join Before Union After Union After New Rows Change Data Type Before Aggregation After Aggregation Before Pivot After Pivot Before Join Before Join Before Union After Union Before New Rows Note : For joins, if the field is a calculated field that was created using a field from one table, the change is applied before the join. If the field is created with fields from both tables, the change is applied after the join. Apply cleaning operations To apply cleaning operations to fields, use the toolbar options or  click More options on the field profile card, data grid, or Results pane to open the menu. In Aggregate, Pivot, Join, and Union step types, the More options menu is available on the profile cards in the Results pane and corresponding data grid. If you perform the same cleaning operations or actions over and over throughout your flow, you can copy and paste your steps, actions, or even fields. For more information see Copy steps, actions and fields . Profile pane toolbar Drop-down menu Select your view You can perform cleaning operations outside of the profile or results pane in the data grid or in the list view. Use the view toolbar ( Tableau Prep Builder version 2019.3.2 and later and on the web) to change your view, then  click More options on a field to open the cleaning menu. Show profile pane : This is the default view. Select this button to go back to the Profile pane or Results pane view. Show data grid : Collapse the profile or results pane to expand and show only the data grid. This view provides a more detailed view of your data and can be useful when you need to work with specific field values. After you select this option, this view state persists across all steps in your flow but you can change it at any time. Note : Not all cleaning operations are available in the data grid. For example if you want to edit a value in-line, you must use the Profile pane. Show list view ( Tableau Prep Builder version 2019.3.2 and later and on the web): Convert the profile pane or results pane into a list. After you select this option, this view state persists across all steps in your flow but you can change it at any time. In this view you can: Select and remove multiple rows using the X option. (version 2021.1.4 and later) Select and hide or unhide multiple rows using the option. (version 2021.2.1 and later) Rename fields in bulk. Use the More options menu to apply operations to selected fields. If you assign a data role to the field, or select Filter , Group Values , Clean , or Split Values , you're returned to the Profile or Results view to complete those actions. All other options can be performed in the list view. Tableau Prep Builder version 2019.3.1 and earlier Use the view toolbar to hide the Profile pane and show only the data grid. Then  click More options on a field in the data grid to open the cleaning menu. This view shows a more detailed view of your data and can be useful when you need to work with specific field values. After you select this option, this view state persists across all steps in your flow but you can change it at any time. Note : Not all cleaning operations are available in the data grid. For example if you want to edit a value in-line, you must use the Profile pane. Pause data updates to boost performance As you perform cleaning operations on your data, Tableau Prep applies your changes as you go to show you the results immediately. To save valuable processing time when you know the changes you need to make and don't need  immediate feedback as you make each change, you can boost performance by pausing data updates. When you pause data updates, you can make all your changes at once, then resume updates to see your results. You can resume data updates and enable all available operations at any time. Note : When you pause data updates, any operations that require you to see your values are disabled. For example if you want to apply a filter to selected values, you need to see the values you want to exclude. In the top menu, click Pause data updates to pause updates. Tableau Prep converts the Profile pane into the List view. In List view,  use the More options menu to apply operations to selected fields. If the operation requires you to see your values, it is disabled. To enable the operation, you must resume data updates. For more information about using List view mode, see Select your view . To see the results of your changes or enable a disabled feature, resume data updates. Click the Resume data updates button, click the Resume button in the menu dialog or in the message banner at the top of the Flow pane. Note : Tableau Prep Builder gives you an option to resume updates directly from the menu. If editing flows on the web, you'll need to resume updates from the top menu. Apply cleaning operations To apply cleaning operations to a field, do the following: Note : You can perform cleaning operations in a list view beginning in Tableau Prep Builder version  2019.3.2 and on Tableau Server and Tableau Cloud starting in version 2020.4. In the Profile pane, data grid,  Results pane, or list view, select the field you want to make changes to. From  either the toolbar or More options menu for the field , select from the following options: Filter or Filter Values : Select from one of the filter options, right-click or Ctrl-click (MacOS) a field value to keep  or exclude values. You can also use the Selected Values filter to pick and choose the values to filter, included values not in your flow sample. For more information about filter options, see Filter Your Data (Link opens in a new window) . Group Values ( Group and Replace in prior versions): Manually select values or use automatic grouping. You can also multi-select values in the Profile card and right-click or Ctrl-click (MacOS) to group or ungroup values or edit the group value. For more information about using Group Values , see Automatically map values to a standard value using fuzzy match . Clean : Select from a list of quick cleaning operations to apply to all values in the field. Convert Dates ( Tableau Prep Builder version 2020.1.4 and later and on the web): For fields assigned to a Date or Date & Time data type, select from a list of DATEPART quick cleaning operations to convert your date field values to an integer value representing year, quarter, month, week, day, or a date and time value. Starting in version 2021.1.4, you can also  select from two DATENAME quick cleaning operations,  day of the week or month name,  to convert your date field values. Custom Fiscal Year ( Tableau Prep Builder version 2020.3.3 and later and on the web): If your fiscal year doesn't start in January, you can set a custom fiscal month to convert the date using that month instead of the default month of January. This setting is on a per field basis, so if you want to apply a custom fiscal year to other fields, repeat this same step. To open the dialog, from the More options menu, select Convert Dates > Custom Fiscal Year . Split Values : Split values automatically based on a common separator or use custom split to specify how you want to split field values. Automatic split and custom split work the same  as they do in Tableau Desktop. For more information, see Split a Field into Multiple Fields (Link opens in a new window) in the Tableau Desktop and Web Authoring Help. Rename Field : Edit the field name. Duplicate Field ( Tableau Prep Builder version 2019.2.3 and later and on the web): Create a copy of your field and values. Keep Only Field ( Tableau Prep Builder version 2019.2.2 and later and on the web): Keep only the selected field and exclude all other fields in the step. Create Calculated Field : Write a custom calculation in the Calculation editor or use the Visual Calculation editor (Tableau Prep Builder version 2020.1.1 and later and on the web) to create level of detail, rank or row number calculations. For more information, see Create Level of Detail, Rank, and Tile Calculations . Publish as Data Role : Create custom data roles that you can then apply to your fields to validate the field values when cleaning data. For more information about this option, see Create custom data roles (Link opens in a new window) . Hide Field : If you have fields you want to keep in your flow but don't need to clean, you can hide them out of the way instead of removing them.  For more information, see Hide fields . Remove ( Remove Field in previous versions): Remove the field from the flow. To edit a value, right-click or Ctrl-click (MacOS) one or more values and select Edit Value then enter a new value. You can also select Replace with Null to replace the values with a Null value or double-click in a single field to edit it directly. For more information about editing field values see Edit field values . Review the results of these operations in the Profile pane, Summary panes or data grid. Rename fields in bulk Supported in Tableau Prep Builder version 2021.2.1 and later. Supported in Tableau Prep on the web in Tableau Server and Tableau Cloud version 2021.2 and later. Use the Rename Fields option to rename multiple fields in bulk. Search for parts of a field name to replace or remove it, or add prefixes or suffixes to all or selected fields in your data set. You can also automatically apply the same change to any fields added in the future that match your criteria by selecting the Automatically rename new fields check box when making your changes. Note : This option is only available in a Clean step type. In a Clean step, from the toolbar, select Rename Fields . Your view is automatically converted to the List view showing all the fields in your flow. You can use the Search option in the toolbar to narrow your results. All fields are selected by default. Clear the top check box to clear the selection for all fields to manually select only the fields you want to change. In the Rename Fields pane, select from the following options: Replace text : In the Find text field, find matching text using the Search options , then  enter the replacement text in the Replace with field. To find blank spaces, press the space bar in the Find text field. Note : Renaming fields can't result in blank or duplicate field names. Add prefix : Add text to the beginning of all selected field names. Add suffix : Add text to the end of all selected field names. As you make your entries, your results display in the List view pane. (optional) Select Automatically rename new fields to automatically apply these same changes to  new fields  that match your replacement criteria  when your data is refreshed. Click Rename to apply your changes and close the pane. The Rename button shows the number of fields that are impacted by your changes. View your changes The different types of cleaning operations are represented by icons over the steps in your flow. If more than four types of operations are applied to a  step, an ellipsis displays over the step. Hover over these icons  to view annotations showing applied operations and the order in which they are performed. Starting in Tableau Prep Builder version 2019.1.3 and later and on the web, you can click on an annotation on the change icon on a step in the Flow pane or on a profile card in the Profile or Results pane and the change and field it impacts will be highlighted in the Changes pane and the Profile or Results pane. You can also select a step and then expand the Changes pane to view the details for each change, edit or remove your changes, drag changes up or down to change the order in which they're applied and  add a description to provide context to other users. For more information about adding descriptions to your changes, see Add  descriptions to flow steps and cleaning actions (Link opens in a new window) . Cleaning annotation Changes pane When viewing changes in an Aggregation, Pivot, Join, or Union step, the order that the change is applied shows either before or after the reshaping action. The order of these changes is applied by the system and cannot be changed. You can edit and remove the change. Merge fields If you have fields that contain the same values but are named differently, you can easily merge them into a single field to combine them  by dragging one field on top of the other. When you merge the fields, the target field becomes the primary field and the field name of the target field persists. The field that you merge to the target field is removed. Example: Input union results in 3 fields with the same values Merge 3 fields into 1 When you merge fields, Tableau Prep keeps all of the fields from the target field and replaces any nulls in that field with values from the source fields that you merge with the target field. The source fields are removed. Example Name Contact_Phone Business_Phone Cell_Phone Home_Phone Bob 123-4567 123-4567 null null Sally null null 456-7890 789-0123 Fred null null null 567-8901 Emma null 234-5678 345-6789 null If you merge the Business _Phone , Cell_Phone and Home_Phone fields with the Contact_phone field, the other fields are removed and results in the following: Name Contact_Phone Bob 123-4567 Sally 456-7890 Fred 567-8901 Emma 234-5678 To merge fields, do one of the following: Drag and drop one field onto another. A Drop to merge fields indicator displays. Select multiple fields and right-click within the selection to open the context menu, and then click Merge Fields . Select multiple fields, and then click Merge Fields on the  toolbar. For information about how to fix mismatched fields as a result of a union, see Fix fields that don’t match . Apply cleaning operations using recommendations Sometimes it can be hard to identify which cleaning operation you need to use to fix problems in your data. Tableau Prep can analyze your data and recommend cleaning operations that you can apply automatically to quickly  fix problems in your data fields or help to identify problems so you can fix them. This feature is available in all step types except Input, Output and Join step types. Note : In Tableau Prep Builder, if you don't want to use this feature, you can turn it off. From the top menu, go to Help > Settings and Performance . Then click on Enable Recommendations to clear the check mark next to the setting. Recommendation types include: Data roles Filter Group values (also applies to fields with data roles starting in Tableau Prep Builder version 2019.2.3 and on the web) Pivot columns to rows (Tableau Prep Builder version 2019.4.2 and later and on the web) Replace values with Null values Remove fields Split ( Tableau Prep Builder version 2019.1.1 and later and on the web) Note : This option works specifically with data in fixed-width type text files. To use the split recommendation with this file type, after you connect to the data source, in the Input step, in the Text Settings tab, select a Field Separator character that is not used in the data so the data loads as a single field. Trim spaces Apply recommendations Do one of the following: Click the light bulb icon in the top right corner of the profile card. From the toolbar, click the Recommendations drop-down arrow to view all recommendations for your data set and select a recommendation from the list. This option only appears when recommended changes are identified by Tableau Prep. To apply the recommendation, hover on the Recommendations card and then click Apply . The change is automatically applied and an entry is added to the Changes pane. To remove the change, click Undo in the top menu or hover over the change in the Changes pane and click the X to remove it. If you apply a recommendation to pivot fields, a Pivot step is automatically created where you can then perform any additional pivot actions like renaming the pivoted fields or pivoting on additional fields. If Tableau Prep identifies further recommendations as a result of the change, the light bulb icon  remains on the Profile card until no further recommendations are found. Repeat the steps above to apply any additional changes or ignore the suggested change and use the other cleaning tools  to address the data problems. Edit field values Multiple variations of the same value can prevent you from accurately summarizing your data. You can quickly and easily correct these variations using the following options. Note : Any edits that you make to the values must be compatible with the field data type. Edit a single value In the Profile card, click the value you want to edit, and enter the new value. A group icon shows next to the value. Alternatively, right-click a value and click Edit Value . The change is recorded in the Changes pane on the left side of the screen. View the results in the Profile pane,  and data grid. Edit multiple values You have several options to edit multiple values at once. For example, use quick cleaning operations to remove punctuation for all values in a field, manually group values using multi-select, automatically group values together using fuzzy-match algorithms that find similar values or select multiple values and replace them with Null. Note : When you map multiple values to a single value, the original field shows a group icon next to the value, showing you which values are grouped together. Edit multiple values using quick cleaning operations This option applies only to text fields. In the Profile pane, Results pane or data grid, select the field you want to edit. Click More options , select Clean , and then select one of the following options: Make Uppercase : Change all values to uppercase text. Make Lowercase : Change all values to lowercase text. Remove Letters : Remove all letters and leave only other characters. Remove Numbers : Remove all numbers and leave letters and other characters. Remove Punctuation : Remove all punctuation. Trim Spaces : Remove leading and trailing spaces. Remove Extra Spaces : Remove  leading and trailing whitespace and replace extra whitespace in-between characters with a single space. Remove All Spaces : Remove all whitespace, including leading and trailing whitespace and any whitespace in between characters. You can stack operations to apply multiple cleaning operations to the fields. For example first select Clean > Remove Numbers and then select Clean > Remove Punctuation to remove all numbers and punctuation from the field values. To undo your changes, click the Undo arrow at the top of the Flow pane, or remove the change from the change list. Group and edit multiple values   inline Use this option to manually select multiple values and group them under a standard value in the profile card. To use other methods to group values, see Manually map multiple values to a standard value and Automatically map values to a standard value using fuzzy match . In the Profile card, select the field you want to edit. Press Ctrl or Shift+click or Command or Shift+click (MacOS), and select the values  that you want to group. Right-click, and select Group from the context menu. The value in the selection that you right-click becomes the default name for the new group but you can edit this in-line. To edit the group name, select the grouped field and edit the value or right-click or Ctrl+click (Mac) on the grouped field and select Edit Value from the context menu. To ungroup the grouped field values, right-click on the grouped field and select Ungroup from the context menu. Replace one or more values with Null If you have data rows that you want to include in your analysis but you want to exclude certain field values you can change them to a Null value. In the Profile card, press Ctrl or Shift+click or Command or Shift+click (on Mac), and select the values  that you want to change Right-click or Ctrl+click (Mac), and select Repace with Null from the  menu. The values are changed  to Null and the  group icon shows next to the value. Manually map multiple values to a standard value Use Group Values ( Group and Replace in previous versions) to map the value of a field from one value to another or manually select multiple values to group them. You can even add new values to set up mapping relationships to organize your data. For example, let’s say you have three values in a field: My Company, My Company Incorporated, and My Company Inc. All these values represent the same company, My Company. You can use Group Values to map the values My Company Incorporated and My Company Inc to My Company, so that all three values appear as My Company in the field. Map multiple values to a single selected field In the Profile pane or Results pane, select the field you want to edit. Click More options and select Group Values ( Group and Replace in previous versions) > Manual Selection from the  menu. In the left pane of the Group Values editor, select the field value that you want to use as the grouping value. This value now shows at the top of the  right pane. In the lower section of the right pane in the Group Values editor, select the values you want to add to the group. To remove values from the group, in the upper section of the right pane in the Group Values editor, clear the check box next to the values. Create a group by selecting multiple values In the Profile pane or Results pane, select the field you want to edit. Click More options and select Group Values ( Group and Replace in previous versions) > Manual Selection from the  menu. In the left pane of the Group Values editor, select multiple values that you want to group. In the right pane of the Group Values editor, click Group Values . A new group is created using the last selected value as the group name. To edit the group name, select the grouped field and edit the value or right-click or Ctrl+click (MacOS) on the grouped field and select Edit Value from the  menu. Add and identify values that aren't   in the data set If you want to map values in your data set to a new value that doesn't exist, you can add it using Group Values ( Group and Replace in previous versions). To easily identify any values that are not in the data set, these values are marked with a red dot  next to the value name in the Group Values editor. For example in the image below, Wyoming and Nevada  aren’t in the data set. Some reasons why a value might not be in the data set include the following: You just added the new value manually. The value is no longer in the data. The value is in the data, but isn’t in the sampled data set. To add a new value: In the Profile pane or Results pane, select the field you want to edit. Click More options and select Group Values ( Group and Replace in previous versions) > Manual Selection from the context menu. In the left pane of the Group Values editor, click the plus to add a new value. Type a new value in the field and press Enter to add it. In the right pane, select the values that you want to map to the new value. (Optional) To add additional new values to your mapped value, click the  plus button in the right pane in the Group Values editor. Automatically map values to a standard value using fuzzy match To search for and automatically group similar values, use one of the fuzzy match algorithms. Field values are grouped under the value that appears most frequently. Review the grouped values and add or remove values in the group as needed. If you use data roles to validate your field values, you can use the Group Values ( Group and Replace in previous versions) option to match invalid values with valid ones. For more information, see Group similar values by data role (Link opens in a new window) Choose one of the following options to group values: Pronunciation : Find and group values that sound alike. This option uses the Metaphone 3 algorithm that indexes words by their pronunciation and is most suitable for English words. This type of algorithm is used by many popular spell checkers. This option isn't available for data roles. Common Characters : Find and group values that have letters or numbers in common. This option uses the ngram fingerprint algorithm that indexes words by their unique characters after removing punctuation, duplicates, and whitespace. This algorithm works for any supported language. This option isn't available for data roles. For example, this algorithm would match names that are represented as ""John Smith"" and ""Smith, John"" because they both generate the key ""hijmnost"". Since this algorithm doesn't consider pronunciation, the value ""Tom Jhinois"" would have the same key ""hijmnost"" and would also be included in the group. Spelling : Find and group text values that are spelled alike. This option uses the Levenshtein distance algorithm to compute an edit distance between two text values using a fixed default threshold. It then groups them together when the edit distance is less than the threshold value. This algorithm works for any supported language. Starting in Tableau Prep Builder version 2019.2.3 and on the web, this option is available to use after a data role is applied. In that case, it matches the invalid values to the closest valid value using the edit distance. If the standard value isn't in your data set sample, Tableau Prep adds it automatically and marks the value as not in the original data set. Pronunciation +Spelling : ( Tableau Prep Builder version 2019.1.4 and later and on the web) If you assign a data role to your fields, you can  use that data role to match and group  values with the standard value defined by your data role. This option then matches invalid values to the most similar valid value based on spelling and pronunciation. If the standard value isn't in your data set sample, Tableau Prep adds it automatically and marks the value as not in the original data set. This option is most suitable for English words. For more information see Clean and Shape Data . Want to read more about these fuzzy match algorithms? See Automated Grouping in Tableau Prep Builder (Link opens in a new window) on Tableau.com Note : In Tableau Prep Builder version 2019.1.4 and 2019.2.1 this option was labeled Data Role Matches . Group similar values using fuzzy match In the Profile pane or Results pane, select the field you want to edit. Click More options and select Group Values then select one of these options: Pronunciation Common Characters Spelling Tableau Prep Builder finds and groups  values that match and replaces them with the value that occurs most frequently in the group. Review the groupings and manually add or remove values or edit them as needed. Then click Done . Adjust your results when grouping field values If you group similar values by Spelling or Pronunciation , you can change your results by using the slider on the field to adjust how strict the grouping parameters are. Depending on how you set the slider, you can have more control over the number of values included in a group and the number of groups that get created. By default, Tableau Prep detects the optimal grouping setting and shows the slider in that position. When you change the threshold, Tableau Prep analyzes a sample of the values to determine the new grouping. The groups generated from the setting are saved and recorded in the Changes pane, but the threshold setting isn't saved. The next time the Group Values editor is opened, either from editing your existing change or making a new change, the threshold slider is shown in the default position, enabling you to make any adjustments based on your current data set. In the Profile pane or Results pane, select the field you want to edit. Click More options and select Group Values ( Group and Replace in previous versions) then select one of these options: Pronunciation Spelling Tableau Prep finds and groups  values that match and replaces them with the value that occurs most frequently in the group. In the left pane of the Group Values editor, drag the slider to one of the 5 threshold levels to change your results. To set a stricter threshold, move the slider to t"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,1.2.2. Perform cleaning operations (part 2),https://help.tableau.com/current/prep/en-us/prep_clean.htm,"he left. This results in fewer matches and creates less groups. To set a looser threshold, move the slider to the right. This results in more matches and creates more groups. Click Done to save your changes. Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,1.2.3. Organize data into folders,https://help.tableau.com/current/pro/desktop/en-us/datafields_dwfeatures.htm,"Organize and Customize Fields in the Data Pane Applies to: Tableau Desktop The Data pane has many features to help you organize and customize your fields. Group and sort options  are only available for relational data sources—not for cubes (multidimensional data sources). Organize the Data Pane Single table data sources default to grouping by folder. Multi-table data sources default to grouping fields by the table they came from. Grouping by folder lets you manually decide how to organize fields. Grouping by table puts dimensions and measures together under their table. This structure is useful when fields with similar names appear in multiple tables. Regardless of the default, you can switch between grouping by data source table and grouping by folder. Tip : You can change between grouping by folder or grouping by table at any time. All folder information is preserved. Group by folder Items in the Data pane like fields, parameters, and sets can be manually grouped into folders. Open the Data Pane menu (under the data sources) and select Group by Folder . Or right-click on a field in the Data pane and select Group by > Folder . Note : Many of the context menus in the Data pane change depending on how you access them. If the menu doesn't have what you're looking for, try opening the menu from another place. It's accessible from right-clicking on a field, right-clicking on white space in the Data pane, or using the drop-down menu by the search bar. Some options only appear or are grayed out based on other settings (such as Create folder). Before folders are set up, all fields are listed together with dimensions at the top and measures at the bottom. Create folders After you set the Group by option to Folder, you must create your folders. In the Data pane, select the fields you want to group together and right-click (or right-click  an empty area in the Data pane). Select Folders > Create Folder . When prompted, name the new folder. Folders are sorted alphabetically in the Data pane. You can start the folder name with a number to force them to appear in a specific order. Add fields to  folders After you create the folder structure, it's time to put fields in the folders. Drag a field on top of the folder name. If the folder is expanded, you can drag the field into the general area of the folder. Or you can right click on a field and select Folder > Add to Folder > then choose the desired folder. Fields can only appear in one folder, but you can duplicate (right-click > Duplicate) a field you want to have available in more than one folder. Sort fields in the Data pane Whether they're grouped by table or by folder, you can configure how fields are sorted. These Sort by options are also in the Data pane menu. You can sort by one of the following options: Sort by Name . Lists the dimensions and measures in alphabetical order according to their field aliases. Sort by Data Source Order . Lists the dimensions and measures in the order they’re listed in the underlying data source. Find fields You can filter the Data pane to only show certain types of fields. Select the Filter by icon next to the search box to show the clickable list of options: dimensions, measures, calculations, or fields with comments. Clear the filter using the X in the search box. Search for a field You can search the Data pane for items like fields, folders, or hierarchies. Click into the search bar at the top of the Data pane under the data sources. As you type in the search box, the contents of the Data pane are filtered to show items that contain the typed string. Use the Filter by prefixes to limit your search to specific types of fields, such as typing ""D:"" before searching ""name"" to return only dimensions that contain the string ""name"". C: for calculations D: for dimensions M: for measures F: for fields with comments Rename Fields You can rename  fields in the Data pane. For example, you could rename a  field named Customer Segment in the data source to be Business Segment in Tableau. You can also rename user-created fields.  Renaming a field doesn't change the name of the field in the underlying data source, rather it’s given a special name that appears only  in Tableau workbooks. The changed field name is saved with the workbook and when you export the data source . You can rename any type of field: dimensions, measures, sets, or parameters. Rename a field Click field name in the Data pane and hold the mouse button down until the field name is shown in an edit box: You can also press F2 or Ctrl + Enter to make the field name editable. Type the new name for the field and press Enter. The field displays with the new name in the Data pane. Revert to the Default Field Name To revert a field's name, click the field name in the Data pane and hold the mouse button down until the name is shown in the box. At the right of the edit field is a small circular arrow that you can click to restore the original data source field name: To revert the names of multiple fields that were in the original data source, select them all, right-click, and then choose Reset Names . Combine Fields Combine fields to create a cross product of members from different dimensions. You can combine dimensions if you want to encode a data view using multiple dimensions. To combine the fields, select multiple dimensions in the Data pane and then right-click (control-click on a Mac) the fields and select Create > Combined Field . Note: For cube (multidimensional) data sources, you must select levels from different hierarchies. In Tableau, cube data sources are supported only in Windows. For example, the selections in the example produce a new field that consists of the Category and Sub-Category dimensions. The two dimensions are combined into a new dimension. The name of the field is automatically created from the names of the original fields. Right-click (control-click on a Mac) the new field and select Rename to change the name. When you use the new field in a view, a header is created for each combination of the two original dimensions. For example, the following view shows the members of the combined Category and Sub-Category fields. Note: For cube data sources, to choose to display the fully qualified name, right-click (control-click on a Mac) the combined field in the Data pane and select Qualify Member Names . Hide or Unhide Fields You can selectively hide or show fields in the Data pane. To hide a field, right-click (control-click on a Mac) the field and select Hide . When you want to change your fields from hidden to visible, select Show Hidden Fields on the Data pane menu. The hidden fields are then shown in gray in the Data pane. You can then select one or more hidden fields, right-click (control-click on a Mac) and select Unhide . Select Hide All Unused Fields on the Data pane menu to quickly hide all the fields that aren’t being used in the workbook. Note: Hiding fields can be a good way to decrease the size of a data extract file because hidden fields are automatically excluded from the extract. Add Calculated Fields to the Data Pane You can create calculated fields that appear in the Data pane. These new computed fields can be used like any other field. Select Create Calculated Field on the Data pane menu. Alternatively, select Analysis > Create Calculated Field . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.4. Use multiple data sources (establish relationships, create joins, union tables, blend data)",https://help.tableau.com/current/server/en-us/datasource_multitable_normalized.htm,"Use Relationships for Multi-table Data Analysis Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Tables that you drag into this canvas use relationships. Relationships are a flexible way to combine data for multi-table analysis in Tableau. Think of a relationship as a contract between two tables. When you are building a viz with fields from these tables, Tableau brings in data from these tables using that contract to build a query with the appropriate joins. We recommend using relationships as your first approach to combining your data because it makes data preparation and analysis easier and more intuitive. Use joins only when you absolutely need to (Link opens in a new window) . Learn more about the basics of creating relationships in this 5-minute video. Note : The interface for editing relationships shown in this video differs slightly from the current release but has the same functionality. Learn more about how relationships work in these Tableau blog posts: Relationships, part 1: Introducing new data modeling in Tableau (Link opens in a new window) Relationships, part 2: Tips and tricks (Link opens in a new window) Relationships, part 3: Asking questions across multiple related tables (Link opens in a new window) Also see video podcasts on relationships from Action Analytics (Link opens in a new window) , such as Why did Tableau Invent Relationships? (Link opens in a new window) Click ""Video Podcast"" in the Library (Link opens in a new window) to see more. Are you building a new data source and workbook? Drag a table to the Data Source page canvas to start building your data source. A data source can be made of a single table that contains all of the dimension and measure fields you need for analysis... Or, you can create a multi-table data source by dragging out more tables and defining their relationships... Watch this 1-minute video about getting started with using relationships. Note : The interface for editing relationships shown in this video differs slightly from the current release but has the same functionality. For more information about using relationships, see Relate Your Data , How Relationships Differ from Joins , The Tableau Data Model , and Create and define relationships . For more information on changes to data sources and analysis in Tableau 2020.2, see What's Changed with Data Sources and Analysis in 2020.2 (Link opens in a new window) and Questions about Relationships, the Data Model, and Data Sources in 2020.2 (Link opens in a new window) . Are you opening an older workbook or data source? When you open a pre-2020.2 workbook or data source in 2020.2, your data source will appear as a single logical table in the canvas, with the name ""Migrated Data"" or the original table name. Your data is preserved and you can continue to use the workbook as you did before. To see the physical tables that make up the single logical table, double-click that logical table to open it in the physical layer. You will see its underlying physical tables, including joins and unions. For more information on changes to data sources and analysis in Tableau 2020.2, see What's Changed with Data Sources and Analysis in 2020.2 (Link opens in a new window) and Questions about Relationships, the Data Model, and Data Sources in 2020.2 (Link opens in a new window) . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.4. Use multiple data sources (establish relationships, create joins, union tables, blend data)",https://help.tableau.com/current/pro/desktop/en-us/joining_tables.htm,"Join Your Data Applies to: Tableau Cloud, Tableau Desktop, Tableau Server It is often necessary to combine data from multiple places—different tables or even data sources—to perform a desired analysis. Depending on the structure of the data and the needs of the analysis, there are several ways to combine the tables. Relationships vs Joins The default method in Tableau Desktop is to use relationships. Relationships preserve the original tables’ level of detail when combining information. Relationships also allow for context-based joins to be performed on a sheet-by-sheet basis, making each data source more flexible. Relationships are the recommended method of combining data in most instances. For more information, see How Relationships Differ from Joins . However, there may be times when you want to directly establish a join, either for control or for desired aspects of a join compared to a relationship, such as deliberate filtering or duplication. Note : Relationships eventually leverage joins (just behind the scenes). For example, a relationship across data sources will produce a cross-database join when the viz uses fields from tables in different data sources. As such, Improve Performance for Cross-Database Joins may be relevant. Common issues To view, edit, or create joins, you must open a logical table in the relationship canvas—the area you see when you first open or create a data source—and access the join canvas. Published Tableau data sources cannot be used in joins. To combine published data sources, you must edit the original data sources to natively contain the join or use a data blend. When joining tables, the fields that you join on must be the same data type. If you change the data type after you join the tables, the join will break. Fields used in the join clause cannot be removed without breaking the join. To join data and be able to clean up duplicate fields, use Tableau Prep Builder instead of Desktop Tip : While Tableau Desktop has the capability to create joins and do some basic data shaping, Tableau Prep Builder is designed for data preparation. If you need to do multiple joins, clean up field names, change data types, perform multiple pivots, or other sorts of involved data prep, consider using Tableau Prep Builder (Link opens in a new window) . Create a join To create a join, connect to the relevant data source or sources. See Connect to Your Data . These can be in the same data source (such as tables in a database or sheets in an Excel spreadsheet) or different data sources (this is known as a cross-database join). If you combined tables using a cross-database join, Tableau colors the tables in the canvas and the columns in the data grid  to show you which connection the data comes from. Note : Not all data sources support cross-database joins, including published Tableau data sources. To combine published data sources, edit the original data sources to natively contain the join or use a data blend. Drag the first table to the canvas. Note that if you drag out a second table at this point a relationship will form. Select Open from the menu or double-click the first table to open the join canvas (physical layer). Double-clicking a table on the relationship canvas opens the join canvas Double-click or drag another table to the join canvas. If your next table is from another data source entirely, in the left pane, under Connections , click the Add button ( in web authoring) to add a new connection to the Tableau data source. With that connection selected, drag the desired table to the join canvas. Click the join icon to configure the join. Add one or more join clauses by selecting a field from one of the available tables used in the data source, choosing a join operator, and a field from the added table. Note: You can delete an unwanted join clauses by clicking the ""x"" that displays when you hover over the right side of the join clause. When finished, close the join dialog and join canvas. After you've created a join, Join Your Data . To troubleshoot your join, see Join Your Data . Anatomy of a join Joins are defined by their type as well as the join clause. Join types In general, there are four types of joins that you can use in Tableau: inner, left, right, and full outer. If you aren't sure what join type you want to use to combine data from multiple tables, you should use relationships. Join Type Result Inner When you use an inner join to combine tables, the result is a table that contains values that have matches in both tables. When a value doesn't match across both tables, it is dropped entirely. Left When you use a left join to combine tables, the result is a table that contains all values from the left table and corresponding matches from the right table. When a value in the left table doesn't have a corresponding match in the right table, you see a null value in the data grid. Right When you use a right join to combine tables, the result is a table that contains all values from the right table and corresponding matches from the left table. When a value in the right table doesn't have a corresponding match in the left table, you see a null value in the data grid. Full outer When you use a full outer join to combine tables, the result is a table that contains all values from both tables. When a value from either table doesn't have a match with the other table, you see a null value in the data grid. Union Though union is not a type of join, union is another method for combining two or more tables by appending rows of data from one table to another. Ideally, the tables that you union have the same number of fields, and those fields have matching names and data types. For more information about union, see Union Your Data . Not all databases support all join types. If an option is unavailable in the join dialog, it is likely due to a constraint from your data source. Join Clauses A join is performed by setting up one or more join clauses. The join clause tells Tableau which fields are shared between the tables and how to match the corresponding rows. For example, rows with the same ID are aligned in the results table. Join clauses most often use the equality operator (=) which matches rows with the same values. It is also possible to perform non-equi joins, such as less than (<) and not equal (<>). A join can also have multiple join clauses. For example, if First name and Last name are stored in separate columns, it may be beneficial to join only if “First name = First name” and “Last name = Last name”. Both conditions will have to be true for rows to be joined. Alternatively, if the goal was to return results when the last name is shared but the first name is not, the join clauses could be “First name <> First name” and “Last name = Last name”. Join clauses can also contain calculations. For example, the join clause could be the concatenation of the name fields “[First name] + [Last name] = [First name] + [Last name]”. Note that not all data source connections support calculations in join clauses. About null values in join keys In general, joins are performed at the database level. If the fields used to join tables contain null values, most databases return data without the rows that contain the null values. However, for certain single-connection data sources, Tableau provides an additional option to allow you to join fields  that contain null values with other fields that contain null values. After you've set up your data source, on the data source page, select Data > Join null values to null values . If the option is greyed out, it is not available for your data source. Note that if you add a second connection to a data source that uses this option, the join reverts back to the default behavior of excluding rows with null values. Cross-database joins Tableau allows joins from tables in different data sources, albeit with some limitations from the database side on which platforms are compatible. Cross-database joins require a multi-connection data source—that is, you create a new connection to each database before you join the tables. Once you've connected to the first source of data, use the Add option in the data pane to add another connection. Note: If the connector you want is not available from the Connect list when you're trying to add another connection, cross-database joins are not supported for the combination of sources that you want to join. This includes connections to cube data (e.g., Microsoft Analysis Services), most extract-only data (e.g., Google Analytics and OData), and published Tableau Server data sources. This creates a second connection rather than an entirely different data source. You can switch between the two (or more) connections while on the data source tab. Once you move to a worksheet and begin analysis, the data source functions as a single, combined data source. This is in contrast to  two independent data sources that can be toggled between on a worksheet. The Book+ data source contains two connections with a cross-database join. It functions as a single data source. The Movie adaptations data source is an independent data source. Note : Typically, joining tables from the same database yields better performance. This is because querying data that is stored on the same database takes less time and leverages the native capabilities of the database to perform the join. For more information on cross-database join performance, see Improve Performance for Cross-Database Joins . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.4. Use multiple data sources (establish relationships, create joins, union tables, blend data)",https://help.tableau.com/current/pro/desktop/en-us/union.htm,"Union Your Data Applies to: Tableau Cloud, Tableau Desktop, Tableau Server You can union your data to combine two or more tables by appending values (rows) from one table to another. To union your data in Tableau data source, the tables must come from the same connection. Supported connectors If your data source supports union, the New Union option displays in the left pane of the data source page after you connect to your data. Supported connectors may vary between Tableau Desktop and Tableau Server and Tableau Cloud . For best results, the tables that you combine using a union must have the same structure. That is, each table must have the same number of fields, and related fields must have matching field names and data types. For example, suppose you have the following customer purchase information stored in three tables, separated by month. The table names are ""May2016,"" ""June2016,"" and ""July2016."" May2016 Day Customer Purchases Type 4 Lane 5 Credit 10 Chris 6 Credit 28 Juan 1 Credit June2016 Day Customer Purchases Type 1 Lisa 3 Credit 28 Isaac 4 Cash 28 Sam 2 Credit July2016 Day Customer Purchases Type 2 Mario 2 Credit 15 Wei 1 Cash 21 Jim 7 Cash A union of these tables creates the following single table that contains all rows from all tables. Union Day Customer Purchases Type 4 Lane 5 Credit 10 Chris 6 Credit 28 Juan 1 Credit 1 Lisa 3 Credit 28 Isaac 4 Cash 28 Sam 2 Credit 2 Mario 2 Credit 15 Wei 1 Cash 21 Jim 7 Cash Union tables manually Use this method to manually union distinct tables. This method allows you to drag individual tables from the left pane of the Data Source page and into the Union dialog box. To union tables manually On the data source page, double-click New Union to set up the union. Drag a table from the left pane to the Union dialog box. Select another table from the left pane and drag it directly below the first table. Tip: To add multiple tables to a union at the same time, press Shift or Ctrl ( Shift or Command on a Mac), select the tables you want to union in the left pane, and then drag them directly below the first table. Click Apply or OK to union. Union tables using wildcard search (Tableau Desktop) Use this method to set up search criteria to automatically include tables in your union. Use the wildcard character, which is an asterisk (*), to match a sequence or pattern of characters in the  Excel workbook and worksheet names, Google Sheets workbook and worksheet names, text file names, JSON file names, .pdf file names, and database table names. When working with Excel, text file data, JSON file, .pdf file data, you can also use this method to union files across folders, and worksheets across workbooks. Search is scoped to the selected connection. The connection and the tables available in a connection are shown on the left pane of the Data source page. To union tables using wildcard search On the data source page, double-click New Union to set up the union. Click Wildcard (automatic) in the Union dialog box. Enter the search criteria that you want Tableau to use to find tables to include in the union. For example, you can enter *2016 in the Include text box to union tables in Excel worksheets that end with ""2016"" in their names. Search criteria like this will result in the union of May2016, June2016, and July2016 tables (Excel worksheets), from the selected connection. In this case, the connection is called Sales, and the connection made to the Excel workbook containing the worksheets you wanted was in the quarter_3 folder in the sales directory (e.g., Z:\sales\quarter_3). Click Apply or OK to union. Expand search to find more Excel, text, JSON, .pdf data The tables initially available to union are scoped to the connection you've selected. If you want to union more tables that are located outside of the current folder (for Excel, text, JSON, .pdf files) or in a different workbook (for Excel worksheets), select one or both check boxes in the Union dialog box to expand your search. For example, suppose you want to union all Excel worksheets that end with ""2016"" in its name outside of the current folder. The initial connection is made to an Excel workbook located in the same directory in the above example, Z:\sales\quarter_3. Include: If you enter *2016 in the Include text box and leave the remaining search criteria of the dialog as is, Tableau looks for all Excel worksheets that end with ""2016"" in its name inside the current folder. In the diagram below, the yellow highlighted item represents the current location, that is, the Excel workbook that you created a connection to in the ""quarter_3"". The green box represents the tables belonging to workbooks and sheets that are unioned as result of this search criteria. Include + Expand search to subfolders: If you enter *2016 in the Include text box and select the Expand search to subfolders check box, Tableau does the following: Looks for all Excel worksheets that end with ""2016"" in their names inside the current folder. Looks for additional Excel worksheets that end with ""2016"" in their names that are located in Excel workbooks in subfolders of the ""quarter_3"" folder. In the diagram below, the yellow highlighted item represents the current location, that is, the Excel workbook that you created a connection to in the ""quarter_3"" folder. The green box represents the tables belonging to workbooks and worksheets  that are unioned as a result of this search criteria. Include + Expand search to parent folder: If you enter *2016 in the Include text box and select the Expand search to parent folder check box, Tableau does the following: Looks for all Excel worksheets that end with ""2016"" in their names inside the current folder, ""quarter_3."" Looks for additional Excel worksheets that end with ""2016"" in their names that are located in parallel folders of the ""quarter_3"" folder. In this example, ""quarter_4"" is the parallel folder. In the diagram below, the yellow highlighted item represents current location, that is, the Excel workbook that you created a connection to in the ""quarter_3"" folder. The green boxes represent the tables belonging to the workbook and worksheets that are unioned as a result of this search criteria. Include + Expand search to subfolders + Expand search to parent folder: If you enter *2016 in the Include text box and select both the Expand search to subfolders and Expand search to parent folder check boxes, Tableau does the following: Looks for all Excel worksheets that end with ""2016"" in their namesinside the current folder, ""quarter_3."" Looks for additional Excel workbooks that are located in the subfolders of the current folder, ""quarter_3."" Looks for additional Excel workbooks that are located in parallel folders and subfolders of the ""quarter_3"" folder. In this example, ""quarter_4"" is the parallel folder. In the diagram below, the yellow highlighted item represents the current location, that is, the Excel workbook that you created a connection to. The green box represents the tables belonging to the workbook and worksheets that are unioned as a result of this search criteria. Note: When working with Excel data, wildcard search includes named ranges but excludes tables found by Data Interpreter. Rename, modify, or remove unions Perform basic union tasks directly in the canvas of the Data Source page. To rename a union Double-click the logical table that contains unioned physical tables. Double-click the union table on the physical layer canvas. Enter a new name for the union. To add or remove tables in the union Double-click the logical table that contains unioned physical tables. Click the union drop-down arrow and then select Edit Union . You can drag additional tables that you want to union from the left pane, or hover over a table until the remove icon displays and then click the icon to remove the table. Click Apply or OK to complete the task. To remove a union Double-click the logical table that contains unioned physical tables, and then click the union drop-down arrow and select Remove . Matching field names or field ordering Tables in a union are combined by matching field names. When working with Excel, Google Sheets, text file, JSON file or .pdf file data, if there are no matching field names (or your tables do not contain column headers), you can tell Tableau to combine tables based on the order of the fields in the underlying data by creating the union and then selecting Generate field names automatically option from the union drop-down menu. Metadata about unions After you create a union, additional fields about the union are generated and added to the grid. The new fields provide information about where the original values in the union come from, including the sheet and table names. These fields are useful when unique information that is critical to your analysis is embedded in the sheet or table name. For example, the tables used in the example above have unique month and year information stored in the table name instead of in the data itself. In this case, you can use the Table Name field that is generated by the union to access this information and use it in your analysis. If a named range is used in a union, null values display under the Sheet field. Note: You can use the fields generated by a union, such as Sheet or Table Name , as join keys. You can use a unioned table in a join with another table or unioned table. Merge mismatched fields in the union When field names in the union do not match,   fields in the union contain null values. You can merge the non-matching fields into a single field using the merge option to remove the null values. When you use the merge option, the original fields are replaced by a new field that displays the first non-null value for each row in the non-matching fields. You can also create your own calculation or, if possible, modify the underlying data to combine the non-matching fields. For example, suppose a fourth table, ""August2016"", is added to the underlying data. Instead of the standard ""Customer"" field name, it contains an abbreviated version called ""Cust."" August2016 Day Cust. Purchases Type 7 Maria 2 Credit 9 Kathy 1 Credit 18 Vijay 7 Cash A union of these tables creates a single table that contains all rows from tables, with several null values. You can use the merge option to combine the related customer fields into a single field. Union (with null values) Day Customer Purchases Type Cust. 4 Lane 5 Credit null 10 Chris 6 Credit null 28 Juan 1 Credit null 1 Lisa 3 Credit null 28 Isaac 4 Cash null 28 Sam 2 Credit null 2 Mario 2 Credit null 15 Wei 1 Cash null 21 Jim 7 Cash null 7 null 2 Credit Maria 9 null 1 Credit Kathy 18 null 7 Cash Vijay Union (with columns that have been merged) Day Purchases Type Customer, Cust. 4 5 Credit Lane 10 6 Credit Chris 28 1 Credit Juan 1 3 Credit Lisa 28 4 Cash Isaac 28 2 Credit Sam 2 2 Credit Mario 15 1 Cash Wei 21 7 Cash Jim 7 2 Credit Maria 9 1 Credit Kathy 18 7 Cash Vijay After you merge fields, you can use the field generated from the merge in a pivot or split, or use the field as a join key. You can also change the data type of the field generated from a merge. To merge mismatched fields Select two or more columns in the grid. Click the column drop-down arrow, and then select Merge mismatched fields . To remove a merge Click the column drop-down arrow of the merged field and select Remove merge . At a glance: Working with unions Tableau Desktop and web authoring (Tableau Cloud and Tableau Server) A unioned table can be used in a join. A unioned table can be used in a join with another unioned table. The fields generated by a union, Sheet and Table name , can be used as the join key. If a named range is used in union, null values display under the Sheet field. The field generated from a merge can be used in a pivot. The field generated from a merge can be used as a join key. The data type of the field generated from a merge can be changed. Union tables from within the same connection. That is, you cannot union tables from different databases. Tableau Desktop only When working with Excel data, wildcard search includes named ranges but excludes tables found by Data Interpreter. The field generated from a merge can be used in a pivot or split. To union a JSON file, it must have a .json, .txt, or .log extension.  For more information about working with JSON data, see JSON File . When using wildcard search to union tables in a .pdf file, the result of the union is scoped to the pages that were scanned in the initial .pdf file you connected to. For more information about working with data in .pdf files, see PDF File . Stored procedures cannot be unioned. When working with database data, you can convert your union into custom SQL. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.4. Use multiple data sources (establish relationships, create joins, union tables, blend data)",https://help.tableau.com/current/pro/desktop/en-us/multiple_connections.htm,"Blend Your Data Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Data blending is a method for combining data from multiple sources. Data blending brings in additional information from a secondary data source  and displays it with data from the primary data source directly in the view. Data blending is particularly useful when the blend relationship—the linking fields—need to vary on a sheet-by-sheet basis, or when combining published data sources. Options to combine data There are several ways to combine data, each with their own strengths and weaknesses. Relationships are the default method and can be used in most instances, including across tables with different levels of detail. Relationships are flexible and adapt to the structure of the analysis on a sheet by sheet basis. However, you can't create relationships between tables from published data sources. Joins combine tables by adding more columns of data across similar row structures. This can cause data loss or duplication if tables are at different levels of detail, and joins must be established before analysis can begin. You can't use a published data source in a join. Blends , unlike relationships or joins, never combine the data directly. Instead, blends query each data source independently, aggregate the results to the appropriate level, then present the results together visually in the view. Because of this, blends can handle different levels of detail and also work with published data sources.  Blends don't create a new, blended data source (and therefore can't be published as a ""blended data source""). Instead, they are simply blended results visualized per sheet. Steps for blending data Data blending is performed on a sheet-by-sheet basis and is established when a field from a second data source is used in the view. To create a blend in a workbook, you need to connect to at least two data sources. Then bring a field from one data source to the sheet—it becomes the primary data source. Switch to the other data source and use a field on the same sheet—it becomes a secondary data source. A linking icon will appear in the data pane, indicating which field(s) are being used to blend the data sources. Ensure that the workbook has multiple data sources. The second data source should be added by going to Data > New data source . Tip : Blending requires two or more distinct data sources, listed independently in the Data pane. Adding another connection to the first data source enables relationships and joins on the Data Source page. Drag a field to the view. This data source will be the primary data source. Switch to another data source and verify there is a blend relationship to the primary data source. If there is a linking field icon ( ), the data sources are automatically linked. As long as there is at least one active link, the data can be blended. If there are broken link icons ( ), click the icon next to the field that should link the two data sources. The slash will go away, representing an active link. If a link icon does not appear next to the desired field, see Define blend relationships for blending . Drag a field into the view from the secondary data source. As soon as this second data source is used in the same view, a blend is established. In the example below, our primary data source is Movie Adaptations and the secondary data source is Bookshop . The primary data source is indicated with a blue check mark on the data source. Fields from the primary data source used in the view have no indication. The secondary data source is indicated with an orange check mark on the data source and an orange bar down the side of the Data pane. Fields from the secondary data source used in the view have an orange check mark. Understand primary and secondary data sources Data blending requires a primary data source and at least one secondary data source. The first data source used in the view becomes the primary data source and defines the view.  This can restrict values from the secondary data source—only values that have corresponding matches in the primary data source appear in the view. This is comparable to a left join. For example, if the primary data source has a Month field that only contains April, May, and June, any view built around months will only display April, May, and June, even if the secondary data source has values for twelve months. If the desired analysis involves all twelve months, try switching which data source is primary by rebuilding the sheet and using the other data source first. Learn more: the effects of data source order The following examples below use the same data sources linked on the same field, and the viz is built the same way both times. The difference between the results is due to which data source is designated as the primary. Here, the Month field from the Rainfall data source is brought into the view first. Because Rainfall only contains three months, when the Pollen data set is added as a secondary, only three months are brought into the view. On another sheet, the Month field from the Pollen data set is brought into the view first. All twelve months are displayed. When the Rainfall data set is added as a secondary, Rainfall is only available for the three months in that data set. Work across blended data sources Due to the nature of a data blend, there are some things to keep in mind when working across blended data sources. Performing calculations with fields from more than one data source can be slightly different than an ordinary calculation. A calculation must be created in a single data source; the top of the calculation editor indicates which data source the calculation is in. Aggregation . Any fields used from another data source will come in with an aggregation—by default, SUM, but this can be changed. Because calculations cannot mix aggregate and non-aggregate arguments, fields from the  calculation's host data source must also be aggregated. (In the images below, the SUM aggregation was added automatically and the sum aggregation was added manually.) Dot notation . Any field referenced in the calculation that belong to another data source refers to its data source using dot notation.  (In the images below, for the calculation built in Sample - Superstore , the Sales Target field becomes [Sales.Targets].[Sales Target] . When the calculation is built in Sales Targets , the Sales field becomes [Sample - Superstore].[Sales] .) These are equivalent versions of the same calculation built in each data source. In both cases, this is SUM(Sales) / SUM(Sales Target). In addition to handling calculations slightly differently, there are some limitations on secondary data sources. You may not be able to sort by a field from a secondary data source, and action filters may not work as expected with blended data. For more information, see Other data blending issues . Define blend relationships for blending In order for Tableau to know how to combine the data from multiple sources, there must be a common dimension or dimensions between the data sources. This common dimension is called the linking field. Active linking fields are identified in the Data pane for the secondary data source with an active link icon ( ) and potential linking fields are identified with a broken link icon ( ). Linking fields are not indicated on the primary data source. For example, in a blend of transactional and quota data, a geographic field might be the desired the linking field  so you can analyze both quota and performance towards that quota for the same region. Note : In order for the blend to function, the linking fields must also share values or members. Tableau builds the view of blended data based on the shared values.  For example, if Color is the linking field in both data sources, Tableau will match data on ""Purple"" from the primary and ""Purple"" from the secondary. But ""Lt. Blue"" will not map correctly to ""Light Blue"", so one of them would need to be realiased. Like renaming fields to help Tableau identify linking fields, you can edit aliases for members in those fields. For more information, see Create Aliases to Rename Members in the View . Establish a link If the linking field in the primary and secondary data sources have the same name, Tableau automatically creates the relationship. When a primary data source is established (that is, a field is in use in the view) and the secondary data source is selected in the Data pane, any fields with the same name between the two data sources will display a link icon ( or ) in the secondary data source. If the related field from the primary data source is used in the view, the link becomes active automatically. If there are no link icons on the secondary data source, you may need to help Tableau establish the link in one of two ways: If common dimensions don’t have the same name (such as ""Title"" and ""Book Title""), renaming one will let Tableau identify them as common dimensions and establish the link. Alternatively, you can manually define a relationship between the fields in the primary and secondary data sources. See below for more information on creating manual link relationship There can be as many active or potential linking fields as necessary. Click the broken link icon ( ) in the data pane to make the relationship active. Manually define a link relationship If your common dimensions do not share the same name, you can map the relationship between them manually. Select Data > Edit Blend Relationships... . In the Blend Relationships dialog box, verify that the primary data source is selected from the Primary data source drop-down list. Select the secondary data source in the Secondary data source pane. Any existing, automatic blend relationships are visible (and can be deleted by hovering over the row and clicking the x). Select Custom in the relationships list, and then click Add . In the Add/Edit Field Mapping dialog box, do the following: Select a field from the primary data source. Select the comparable field from the secondary data source. Click OK . In this example, Segment is mapped to Cust Segment . Tip : For dates, the relationship can be specified precisely. Expand the date field and select the desired aspect of the date, such as exact date, month, year, etc. Create as many field mappings as desired, then click OK . Multiple links As with relationships or joins, there are times when the links between the data sources are defined by more than one field. For example, if regional sales quotas are monthly, a blend between transactional sales data and quota data needs to be established on both region and month for the correct data to be brought together in the view. Multiple links can be active at the same time. Learn more: the impact of multiple linking fields When data is blended based on multiple fields, values are included in the view only  where the combination of data from those fields matches across both data sets. Let's look at an example to understand this. We have two tables, one for birds that were actually seen by birdwatchers, and one for birds that were reported as seen. and If we set up a blended view with the fields Birdwatchers and Number of birds from the primary data source ( Birds seen ) and bring in the field Number of reports from the secondary data source ( Birds reported ), Tableau automatically blends on Birdwatcher . We see that birdwatcher A saw three birds and made two reports, B saw four birds and made one report, and C saw 8 birds and made two reports. But there's another possible linking field, Species seen . Why not blend on this, too? Will it make a difference? It makes quite a dramatic difference. Now we see that there is only one report each for birdwatchers A and C, and B has a null. What's going on? It turns out that these birdwatchers aren't very honest. When they only reported their sightings based on a journal entry (blue bars in the image above), the species they reported seeing didn't match what they actually saw (note the nulls in the second column, from the Birds seen secondary data source). When they backed up the report with a photograph (orange bars), they were honest (both columns of Species seen match). Because three reports didn't match on species, those rows of data were dropped when Species seen was used as a linking field. The view only shows data where values for both linking fields match. Takeaway Be careful when linking on multiple fields. Although it can be very easy to click the icon and establish an active link, over-linking or linking on undesired fields can have a serious impact on the analysis. Differences between joins and data blending Data blending simulates a traditional left join. The main difference between the two is when the aggregation is performed. A join combines the data and then aggregates. A blend aggregates and then combines the data. Left join When you use a left join to combine data, a query is sent to the database where the join is performed. A left join returns all rows from the left table and any corresponding rows from the right table. The results of the join are then sent back to  Tableau and aggregated for display in the visualization. A left join takes all rows from the left table. The common columns are User ID and Patron ID ; where there is corresponding information from the right table, that data is returned. Otherwise, there is a null. Suppose you have the same tables, but flip the order. This new left join produces different results. Again, a left join takes all the data from the new left table, but essentially ignores a row from the right table. The row of data for User ID = 4 is not included because there is no row for Patron ID = 4 in the left table. Data blending When you use data blending to combine data, a query is sent to the database for each data source that is used on the sheet. The  results of the queries are sent back to  Tableau as aggregated data and presented together in the visualization. Note : Aggregating measures is straightforward—we can take the sum, average, maximum, or other aggregation of a number with ease. Measure values are aggregated based on how the field is aggregated in the view. However, all fields from a secondary data source must be aggregated. How does that work for dimensions? Dimension values are aggregated using the ATTR aggregate function, which returns a single value for all rows in the secondary data source. If there are multiple values contained in those rows, an asterisk (*) is shown. This can be interpreted as ""there are multiple values in the secondary data source for this mark in the view"". The view uses all values from the primary data source (functioning as the left table) and the corresponding rows from the secondary data source (the right table) based on the linking field(s). Suppose you have the following tables.  If the linking fields are User ID and Patron ID , not all values can be a part of the resulting table because of the following: A row in the left table does not have a corresponding row match in the right table, as indicated by the null value in the results. There are multiple corresponding values in the rows in the right table, as indicated by the asterisk (*) in the results. When measures are involved, they are also aggregated, as seen below: Important: an asterisk (*) in a view with blended data indicates multiple values. This can be resolved by ensuring there is only one matching value in the secondary data source for each mark in the primary data source, potentially by swapping the primary and secondary data sources. For more information, see Troubleshoot Data Blending . Data blending at a glance Data blending occurs on a sheet-by sheet basis. The order in which fields are used determines which data source is the primary versus the secondary data source. The primary data source is indicated with a blue check mark, any secondary data sources and fields from secondary data sources have an orange check mark. Linking fields can be automatically determined based on shared field names or the blend relationship can be manually created. Data blending behaves similarly to a left join, which may result in missing data from the secondary data source. Asterisks (*) may appear. This indicates multiple dimension values in a single mark, because data blending takes aggregated results and combines them in the view. A secondary data source can be used to re-alias the field values in a primary data source. For more information, see Alias Field Values Using Data Blending . Data blending limitations There are some data blending limitations around non-additive aggregates, such as COUNTD, MEDIAN, and RAWSQLAGG. For more information, see Troubleshoot Data Blending Blended data sources cannot be published as a unit. Instead, publish each data source separately (to the same server) and then blend the published data sources. Data from secondary data sources must always be aggregated in calculations. If you are blending a cube data source, it must be the primary data source. Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.5. Prepare data by using Data Interpreter, pivot, and split",https://help.tableau.com/current/pro/desktop/en-us/data_interpreter.htm,"Clean Data from Excel, CSV, PDF, and Google Sheets with Data Interpreter Applies to: Tableau Cloud, Tableau Desktop, Tableau Server When you track data in Excel spreadsheets, you create them with the human interface in mind. To make your spreadsheets easy to read, you might include things like titles, stacked headers, notes, maybe empty rows and columns to add white space, and you probably have multiple tabs of data too. When you want to  analyze this data in Tableau, these aesthetically pleasing attributes  make it very difficult for Tableau to interpret your data. That’s where Data Interpreter can help. Tip: Though Tableau's Excel add-in is no longer supported,  Data Interpreter can help you reshape your data for analysis in Tableau. What does Data Interpreter do? Data Interpreter can give you a head start when cleaning your data. It can detect things like titles, notes, footers, empty cells, and so on and bypass them to identify the actual fields and values in your data set. It can even detect additional tables and sub-tables so that you can work with a subset of your data independently of the other data. After Data Interpreter has done its magic, you can check its work to make sure it captured the data that you wanted and identified it correctly. Then, you can make any necessary adjustments. After you select the data that you want to work with, you might also need to do some additional cleaning steps like pivoting your data, splitting fields, or adding filters to get the data in the shape you want before starting your analysis. Note : If your data needs more cleaning than what Data Interpreter can help you with, try Tableau Prep (Link opens in a new window) . Turn on Data Interpreter and review results From the Connect pane, connect to an Excel  spreadsheet or other connector that supports Data Interpreter such as Text (.csv) files, PDF files or Google sheets. Drag a table to the canvas (if needed), then on the Data Source page, in the left pane, select  the Use Data Interpreter check box to see if Data Interpreter can help clean up your data. Note: When you clean your data with Data Interpreter, Data Interpreter cleans all the data associated with a connection in the data source. Data Interpreter does not change the underlying data. In the Data pane, click the Review the results link to review the results of the Data Interpreter. A copy of your data source opens in Excel on the Key for the Data Interpreter tab. Review the key to find out how to read the results. Click each tab to review how Data Interpreter interpreted the data source. If Data Interpreter found additional tables, also called found tables or sub-tables, they are identified in the <sheet name>_subtables tab by outlining their cell ranges. A separate tab is also included for each sub-table, color coded to identify the header and data rows. If Data Interpreter does not provide the expected results, clear the Cleaned with Data Interpreter check box to use the original data source. To replace the current table with any of the found tables, drag the current table off the canvas and then drag the found table that you want to use to the canvas. If Data interpreter has misidentified the range of the found table, after you drag the found table to the canvas, click the  drop-down arrow on that table, and then select Edit Found Table to adjust the corners of the found table (the top-left cell and bottom-right cell of the table). After you have the data  that you want to work with,  you can apply any additional cleaning operations to your data so that you can analyze it. Data Interpreter Example In this example we are connecting to an Excel spreadsheet with violent crime data by city and state for the year 2016. This spreadsheet includes multiple tables on one sheet and some extra formatting. Title Merged header cells Extra white space Sub-tables The extra formatting in this spreadsheet makes it  difficult for Tableau to determine what the field headers and values are. Instead, it reads the data vertically and assigns each column the default value F1, F2, F3 (Field 1, Field 2, Field 3) and so on. Blank cells are read as null values. To see if Data Interpreter can help clean this data set,  we select Use Data Interpreter . Data Interpreter detected the proper headings for the fields, removed the extra formatting and found several sub-tables. The sub-tables are listed in the Sheets section in the Data pane and are named using the original sheet name and the cell ranges for each sub-table. In this example there are three sub-tables: Crimes 2016 A4:H84 , Crimes 2016 K5:L40 , and Crimes 2016 O5:P56 . To examine the results of the Data Interpreter more closely, we  click the Review the results link in the Data pane to view an annotated copy of the spreadsheet. Here we see a copy of the original data, color coded to identify which data was identified as header data and which data was identified as field values. The next tab shows us the sub-tables that Data Interpreter found, outlined by the cell ranges. In this example the first sub-table, Crimes 2016 A4:H84 , has the main data that we want to work with. To use this table as our data table, we can simply drag the original table off the canvas and then drag the new table to the canvas. Once we have the data that we want to work with in the canvas, we can do some additional clean up on the data. For example we can: Change the field names so that they represent city, state, and month names. Pivot the months fields. Drag in the  third sub-table Crimes 2016 o5:P56 and join it to our first sub-table on the State field to include state populations for our analysis. Hide any duplicate fields that were added as a result of the join. The results might look something like this: Now we are ready to start analyzing our data in Tableau. When Data Interpreter is not available The Data Interpreter option might not be available for the following reasons: The data source is already in a format that Tableau can interpret: If  Tableau Desktop doesn't need extra help from Data Interpreter to handle unique formatting or extraneous information, the Data Interpreter option is not available. Many rows or many columns: The Data Interpreter option is not be available when your data has the following attributes: Data contains more than 2000 columns. Data contains more than 3000 rows and more than 150 columns. The data source is not supported: Data Interpreter is only available for Microsoft Excel, Text (.csv) files, PDF files and Google Sheets. For Excel, your data must be in the .xls or .xlsx format. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.5. Prepare data by using Data Interpreter, pivot, and split",https://help.tableau.com/current/pro/desktop/en-us/pivot.htm,"Pivot Data from Columns to Rows Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Sometimes, analyzing data that is stored in a crosstab format can be difficult in Tableau. When working with Microsoft Excel, text file, Google Sheets, and .pdf data sources, you can pivot your data from crosstab format into columnar format. If you are working with other data sources, you can Pivot using custom SQL (Tableau Desktop) . For example, suppose you have the number of devices sold by quarter for three vendors in three separate fields. You can pivot your data so that the vendor is in one field and the number of devices sold is in another field. Pivot the data After you have set up the data source, in the grid, select two or more columns. Click the drop-down arrow next to the column name, and then select Pivot . New columns called ""Pivot field names"" and ""Pivot field values"" are created and added to the data source. The new columns replace the original columns that you selected to create the pivot. Add to the pivot To add more data to the pivot, select another column, click the drop-down arrow next to the column name, and then select Add Data to Pivot . Make sure that the pivot columns and values look as expected before you begin your analysis. To remove a pivot, click the drop-down arrow next to the name of a pivot column, and then select Remove Pivot . Troubleshooting pivots Red fields in the view and fields with exclamation points in the Data pane : Because the original fields are replaced with new pivot fields, any references to the original fields in the view will no longer work. They cause fields to become red in the view or show a red exclamation point next to the field in the Data pane. Null values in the grid: If all of the original fields used in the pivot are removed, for example in an extract refresh, null values display in the pivot fields. No pivot option : Pivot appears when you select two or more columns in a single Microsoft Excel, text file, Google Sheets, and .pdf data source. If using a different data source in Tableau Desktop, you can use custom SQL to pivot. Pivot using custom SQL (Tableau Desktop) You can also use custom SQL to pivot your data, even if you aren't working Excel, text file, Google Sheets, and .pdf data sources. When you use the UNION ALL operator in a custom SQL query, you can take values from distinct columns and put them into a new column. For example, suppose you have a table called Contest . Contest Runner Start Time End Time Amanda 9/3/2016 3:04 PM 9/3/2016 3:25 PM Oscar 9/3/2016 3:04 PM 9/3/2016 3:21 PM William 9/3/2016 3:04 PM 9/3/2016 3:16 PM To optimize your analysis of this data in Tableau, you can use the following custom SQL query to pivot the ""Start Time"" and ""End Time"" columns so that their values are in a single column. Select [Runner] , 'Start' as [Action] , [Start Time] as [Time] From [Contest] Union ALL Select [Runner] , 'End' as [Action] , [End Time] as [Time] From [Contest] The above custom SQL query does the following: Pivots the Start Time column header into a string value called Start and adds that value to a new column called Action . Pivots the End Time column header into a string value called End and adds that value to a new column called Action . Pivots the Start Time and End Time columns so that their values are in a new column called Time . The following table shows the results of  this custom SQL query. Runner Action Time Amanda Start 9/3/2016 3:04 PM Oscar Start 9/3/2016 3:04 PM William Start 9/3/2016 3:04 PM Amanda End 9/3/2016 3:25 PM Oscar End 9/3/2016 3:21 PM William End 9/3/2016 3:16 PM To pivot data using custom SQL Connect to your data. Double-click the New Custom SQL option in the left pane. For more information, see Connect to a Custom SQL Query . In the Edit Custom SQL dialog box, copy and paste the following custom SQL query and replace the contents with information about your table: Select [ Static Column ] , ' New Value (from Column Header 1) ' as [ New Column Header ] , [ Pivot Column Values 1 ] as [ New Values ] From [ Table ] Union ALL Select [ Static Column ] , ' New Value (from Column Header 2 ' as [ New Column Header ] , [ Pivot Column Values 2 ] as [ New Values ] From [ Table ] Union ALL Select [ Static Column ] , ' New Value (from Column Header 3 ' as [ New Column Header ] , [ Pivot Column Values 3 ] as [ New Values ] From [ Table ] Where the following is true: Static Column : A comma-delimited list of the columns from Table , both dimensions and measures, which should not be included in the pivot. New Value (from Column Header 1-3) : New names that you give to the original column headers, which are used as row values in the pivot. Pivot Column Values 1-3 : The columns whose values need to be pivoted into a single column. New Column Header : The name you give the new column that contains the new row values from New Value (from Column Header 1-3) . New Values :  The name give the new column that contains the original values from Pivot Column Values 1-3 . Table : The table that you connected to. Click OK . Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,"1.2.5. Prepare data by using Data Interpreter, pivot, and split",https://help.tableau.com/current/pro/desktop/en-us/split.htm,"Split a Field into Multiple Fields Applies to: Tableau Desktop If you have string fields in your data that contain multiple distinct pieces of information (for example, the first and last name of a customer) you may be able to split the values into separate fields. You can use split options in Tableau Desktop to separate the values based on a separator (delimiter) or a repeated pattern of values present in each row. In the example of Customer Name, the common separator is a space ("" "") between first and last name. Find the Split option Tableau Desktop —but not web editing in the browser—has a menu option for automatic or custom splits. These are based on the SPLIT string function, which can also be used manually in a calculation for complete control over the split. Not all data sources support SPLIT. You can tell if your data supports the SPLIT function by checking for the Split and Custom Split menu options: On the Data Source page, check the menu for Split and Custom Split . From the Data pane on a sheet, check the menu for Transform > Split and Custom Split . Split on the web Web authoring doesn't support splitting from a menu. To split data while working in the browser,  you can manually create a SPLIT calculation. See Alternatives to splitting from the menu . Split fields A string field can be split automatically based on a common separator that Tableau detects in the field. You can also manually define the split Depending on the connection type, a split can automatically separate a field's values in up to ten new fields. Split a field automatically On the Data Source page , in the grid, click the drop-down arrow next to the field name, then select Split . In the Data pane , right-click the field you want to split, and then select Transform > Split . The results of the split are standard calculated fields that can be edited or deleted like any other calculated field. The data type of the new fields generated by the split can vary depending on the pattern combination that Tableau detects. Split a field with custom split Use the custom split option for more control over the split. You can specify the separator and choose to split the values at the first N occurrences of the separator, the last N occurrences, or at all occurrences. On the Data Source page , in the grid, click the drop-down arrow next to the field name. Select Custom Split . From the Data pane , in the Data pane, right-click the field you want to split, and then select Transform > Custom Split . The new fields generated by the custom split always result in a string data type. Note: In some cases, if the automatic split takes too long to generate new fields or Tableau can't find a common separator, the custom split dialog box displays. Custom split is useful when the number of separators varies from value to value. Automatic split can't be used in these cases. For example, suppose a field Employee Info has the following values: jsmith| accounting | north dnguyen | humanresources lscott | recruiting| west karnold |recruiting |west The custom split could be configured to split on the pipe character (""|"") and split off all columns. For the value without a region, the third result field will be null for that row. Alternatives to splitting from the menu Split manually using the SPLIT function The SPLIT function works similarly to a custom split, but only one result field is returned per calculation. You define the separator and specify which value to return by providing a token number. For example, to split Customer Name into First Name and Last Name, create two calculated fields: First Name: SPLIT([Customer Name], "" "", 1) Last Name: SPLIT([Customer Name], "" "", 2) The Employee Info example (such as ""jsmith| accounting | north"") would use three calculated fields: Username: SPLIT([Employee Info], |, 1) Department: SPLIT([Employee Info], |, 2) Region: SPLIT([Employee Info], |, 3) For more information, see the SPLIT function . Split manually using LEFT and RIGHT functions If your use case is more to extract a specific part of a string than to split it based on a separator, you can use the LEFT and RIGHT functions. These return only a portion of the string based on a specified number of characters. For example, if the value of a row is IGW8892: Calculation Result RIGHT([Value], 4) 8892 LEFT([Value], 4) IGW8 LEFT(RIGHT([Value], 2) , 1) 9 For more information, see LEFT and RIGHT in String Functions . Use regular expressions for fields contain mixed separators Fields can’t be split automatically if the separator types are different. For example, suppose a field includes the following values: smith.accounting dnguyen-humanresources lscott_recruiting karnold_recruiting In cases like this, consider using regular expressions to extract the desired information. For more information, see Additional Functions . Working with splits and custom splits Things to keep in mind when working with splits and custom splits. New fields can’t be used as keys to join tables, but can be used to blend data sources. New fields can’t be used in a pivot. Split and custom split options aren’t supported for sets, groups, parameters, and bins. Microsoft SQL Server only allows up to four split fields. To generate more than ten new fields, consider splitting multiple times. You can use split again on a field from the first split that still includes multiple pieces of information. Troubleshooting splits and custom splits Known issues you might experience when using splits and custom splits: Split and custom split options missing for a supported data source type: Split and custom split options are available only for fields that are a string data type. Null values: After creating a split or a custom split, new fields might contain null values or no values at all. Null values or empty cells happen when there are no values for the expected new fields. Data has been removed: Tableau might use portions of the field’s values as a separator. If a portion of a field's value is used as a separator, those values no longer appear in the new fields. For example: Original value Split field values Zip-98102 98102 Zip-98109 98109 Zip-98119 98199 Zip-98195 98195 The split doesn't create a separate field for ""Zip-"" because that entire string is used as the separator. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.2. Prepare data for analysis,1.2.6. Create extract filters,https://help.tableau.com/current/pro/desktop/en-us/extracting_data.htm,"Extract Your Data Applies to: Tableau Desktop Extracts are saved subsets of data that you can use to improve performance or to take advantage of Tableau functionality not available or supported in your original data. When you create an extract of your data, you can reduce the total amount of data by using filters and configuring other limits. After you create an extract, you can refresh it with data from the original data. When refreshing the data, you have the option to either do a full refresh, which replaces all of the contents in the extract, or you can do an incremental refresh, which only adds rows that are new since the previous refresh. Extracts are advantageous for several reasons: Supports large data sets: You can create extracts that contain billions of rows of data. Help improve performance: When you interact with views that use extract data sources, you generally experience better performance than when interacting with views based on connections to the original data. Support additional functionality: Extracts allow you to take advantage of Tableau functionality that's not available or supported by the original data, such as the ability to compute Count Distinct. Provide offline access to your data: If you are using Tableau Desktop, extracts allow you to save and work with the data locally when the original data is not available. For example, when you are traveling. Latest changes to extracts Extracts in the web Beginning with version 2020.4, extracts are available in web authoring and content server. Now, you no longer have to use Tableau Desktop to extract your data sources. For more information, see Create Extracts on the Web . Logical and physical table extracts With the introduction of logical tables and physical tables in the Tableau data model in version 2020.2, extract storage options have changed from Single Table and Multiple Tables, to Logical Tables and Physical Tables. These options better describe how extracts will be stored. For more information, see Decide how the extract data should be stored . Deprecation of .tde format Note: Beginning in March 2023, extracts using the .tde format are deprecated in Tableau Cloud, Tableau Public, and Tableau Server (version 2023.1.0). For more information, see Extract Upgrade to .hyper Format . Beginning with version 10.5, when you create a new extract it uses the .hyper format. Extracts in the .hyper format take advantage of the improved data engine, which supports faster analytical and query performance for larger data sets. Similarly, when an extract-related task is performed on a .tde extract using version 10.5 and later, the extract is upgraded to a .hyper extract. After a .tde extract is upgraded to a .hyper extract, it can't be reverted back to .tde extract. For more information, see Extract Upgrade to .hyper Format . Changes to  values and marks in the view To improve extract efficiency and scalability, values in extracts  can be computed differently in versions 10.5 and later compared to versions 10.4 and earlier. Changes to how the values are computed can affect the way marks in your view are populated. In some rare cases, the changes can cause your view to change shape or become blank.  These changes can also apply to multi-connection data sources, data sources that use live connections to filed-based data, data sources that connect to Google Sheets data, cloud-based data sources, extract-only data sources, and WDC data sources. To get an idea of some of the differences you might see in your view using version 2022.4 , see the sections below. Format of date and date time values In versions 10.5 and later, extracts are subject to more consistent and stricter rules around how date strings are interpreted through the DATE, DATETIME, and DATEPARSE functions. This affects how dates are parsed, or the date formats and patterns that are allowed for these functions. More specifically, the rules can be generalized as the following: Dates are evaluated and then parsed  by column, not by row. Dates are evaluated and then parsed based on the locale of where the workbook was created, not on locale of the computer where the workbook is opened. These new rules allow extracts to be more efficient and to produce results that are consistent with commercial databases. However, because of these rules, particularly in international scenarios where the workbook is created in a locale different from the locale that the workbook is opened in or the server that the workbook is published to, you might see that 1.) date and datetime values change to different date and datetime values or 2.) date and datetime values change to Null . When your date and datetime values change to different date and datetime values or become Null , it's often an indication that there are issues with the underlying data. Here are some common reasons why you might see changes to your date and datetime values in your extract data source using version 10.5 and later. Common causes of changes to date/datetime values Common causes of null values When a function has to parse multiple date formats in a single column. Where the date is ambiguous and can be interpreted in several different ways, the date will be interpreted based on the format Tableau has determined for that column. For some examples, see Date scenario 1 and Date scenario 2 below. When a function has to parse a YYYY-MM-DD (ISO) format. For an example, see Date scenario 3 . When a function doesn't have enough information to derive the time, it can interpret a value as ""00:00:00.0"", using ""0"" for hour, minute, second, and millisecond. When a function doesn't have enough information to derive the day, it can interpret a value as ""1"" or  ""January"" for month. When a function parses years, it is interpreted as the following: Year ""07"" is interpreted as ""2007"" Year ""17"" is interpreted as ""2017."" Year ""30"" is interpreted as ""2030."" Year ""69"" interpreted as ""2069."" Year ""70"" is interpreted as ""1970."" When a function has to parse multiple date formats in a single column. After Tableau determines the date format, all other dates in the column that deviate from the  format become null values. For some examples, see Date scenario 1 and Date scenario 2 below. When a function has to parse a YYYY-MM-DD (ISO) format. Values that exceed what is allowed for ""YYYY,"" or ""MM,"" or ""DD"" cause null values. For an example, see Date scenario 3 . When a function has to parse date values that contain trailing characters.  For example, time zone and daylight savings suffixes and keywords, such as ""midnight""  cause null values. When a function has to parse an invalid date or time. For example, 32/3/2012 causes a null value. In another example, 25:01:61 causes a null value. When a function has to parse contradicting inputs. For example, suppose the pattern is 'dd.MM (MMMM) y' and the input string is '1.09 (August) 2017', where both ""9"" and ""August"" are months. The result is a null value because the month values are not the same. When a function has to parse contradicting patterns. For example, a pattern that specifies a mix of Gregorian year (y) and ISO week (ww) causes null values. Date scenario 1 Suppose you have a workbook created in an English locale that uses .tde extract data source. The table below shows a column of string data contained in the extract data source. 10/31/2018 31/10/2018 12/10/2018 Based on the particular English locale, the format of the date column was determined to follow the MDY (month, day, and year) format. The following tables show what Tableau displays based on this locale when the DATE function is used to convert string values into date values. October 31, 2018 October 31, 2018 December 10, 2018 If the extract is opened in a German locale, you see the following: 31 Oktober 2018 31 Oktober 2018 12 Oktober 2018 However, after the extract is opened in a German locale using version 10.5 and later, the  DMY (day, month, and year) format of the German locale is strictly enforced and causes a Null value because one of the values doesn't follow DMY format. Null October 31, 2018 October 12, 2018 Date scenario 2 Suppose you have another workbook created in an English locale that uses a .tde extract data source. The table below shows a column of numeric date data contained in the extract data source. 1112018 1212018 1312018 1412018 Based on the particular English locale, the format of the date column was determined to follow the MDY (month, day, and year) format. The following tables show what Tableau displays based on this locale when the DATE function is used to convert the numeric values into date values. 11/1/2018 12/1/2018 Null Null Date scenario 3 Suppose you have a workbook  that uses a .tde extract data source. The table below shows a column of string data contained in the extract data source. 2018-10-31 2018-31-10 2018-12-10 2018-10-12 Because the date uses the ISO format, the date column always follows the YYYY-MM-DD format. The following tables show what Tableau displays when the DATE function is used to convert string values into date values. October 10, 2018 Null December 10, 2018 October 12, 2018 Note: In versions 10.4 (and earlier), ISO format and other date formats could have produced differing results depending on the locale of where the workbook was created. In an English locale for example, both 2018-12-10 and 2018/12/10 could produce December 12, 2o18. However, in a German locale 2018-12-10 could produce December 12, 2018 and 2018/12/10 could produce October 12, 2018. Sort order and case sensitivity Extracts have collation support and therefore can more appropriately sort string values that have accents or are cased differently. For example, suppose you have a table of string values. In terms of sort order, this means that a string value like Égypte is now appropriately listed after Estonie and before Fidji. About Excel data: With regard to casing, this means that how Tableau stores values have changed between version 10.4 (and earlier) and version 10.5 (and later). However, the rules for sorting and comparing values haven't. In version 10.4 (and earlier), string values like ""House,"" ""HOUSE,"" and ""houSe"" are treated the same and stored with one representative value. In version 10.5 (and later), the same string values are considered unique and therefore stored as individual values. For more information, see Changes to the way values are computed . Breaking ties in Top N queries When a Top N query in your extract produces duplicate values for a specific position in a rank, the position that breaks the tie can be different when using version 10.5 and later. For example, suppose you create a top 3 filter. Positions 3, 4, and 5 have the same values. When using version 10.4 and earlier, the top filter can return 1, 2, and 3 positions. However, when using version 10.5 and later, the top filter can return 1, 2, and 5 positions. Precision of floating-point values Extracts are better at taking advantage of the available hardware resources on a computer and therefore able to perform mathematical operations in a highly parallel way. Because of this, real numbers can be aggregated by .hyper extracts in different order. When numbers are aggregated in different order, you might see different values in your view after the decimal point each time the aggregation is computed. This is because floating-point addition and multiplication is not necessarily associative. That is, (a + b) + c is not necessarily the same as a + (b + c). Also, real numbers can be aggregated in different order because floating-point multiplication is not necessarily distributive. That is, (a x b) x c is not necessarily the same as a x b x c. This type of floating-point rounding behavior in .hyper extracts resemble that of floating-point rounding behavior in commercial databases. For example, suppose your workbook contains a slider filter on an aggregated field comprised of floating point values. Because the precision of floating-point values have changed, the filter might now exclude a mark that defines the upper or lower bound of the filter range. The absence of these numbers could cause a blank view. To resolve this issue, move the slider on the filter or remove and add the filter again. Accuracy of aggregations Extracts optimize for large data sets by taking better advantage of the available hardware resources on a computer and therefore able to compute aggregations in a highly parallel way. Because of this, aggregations performed by .hyper extracts can resemble the results from commercial databases more than the results from software that specializes in statistical computations. If you’re working with a small data set or need a higher level of accuracy, consider performing aggregations through reference lines, summary card statistics, or table calculation functions like variance, standard deviation, correlation, or covariance. About the Compute Calculations Now option for extracts If the Compute Calculations Now option was used in a .tde extract  using an earlier version of Tableau Desktop, certain calculated fields were materialized and therefore computed in advance and stored in the extract.  If you upgrade the extract from a .tde extract to a .hyper extract, the previously materialized calculations in your extract are not included. You must use the Compute Calculations Now option again to ensure that materialized calculations are a part of the extract after the extract upgrade. For more information, see Materialize Calculations in Your Extracts . New Extract API You can use the Extract API 2.0 to create .hyper extracts. For tasks that you previously performed using the Tableau SDK, such as publishing extracts, you can use the Tableau Server REST API or the Tableau Server Client (Python) library. For refresh tasks, you can use the Tableau Server REST API as well. For more information, see Tableau Hyper API . Create an extract Though there are several options in your Tableau workflow for creating an extract, the primary method is described below. After you connect to your data and set up the data source on the Data Source page, in the upper-right corner, select Extract , and then click the Edit link to open the Extract Data dialog box. (Optional) Configure one or more of the following options to tell Tableau how to store, define filters for, and limit the amount of data in your extract: Decide how the extract data should be stored You can choose to have Tableau store the data in your extract using one of two structures (schemas): logical tables (normalized schema) or physical tables (normalized schema). For more information about logical and physical tables, see The Tableau Data Model . The option you choose depends on what you need. Logical Tables Stores data using one extract table for each logical table in the data source. Physical tables that define a logical table are merged and stored with that logical table. For example, if a data source was made of a single logical table, the data would be stored in a single table. If a data source was made of three logical tables (each containing multiple physical tables), the extract data would be stored in three tables—one for each logical table. Select Logical Tables when you want to limit the amount of data in your extract with additional extract properties like extract filters, aggregation, Top N, or other features that require denormalized data. Also use when your data uses pass-through functions (RAWSQL). This is the default structure Tableau uses to store extract data. If you use this option when your extract contains joins, the joins are applied when the extract is created. Physical Tables Stores data using one extract table for each physical table in the data source. Select Physical Tables if your extract is comprised of tables combined with one or more equality joins and meets the Conditions for using the Physical Tables option listed below. If you use this option, joins are performed at query time. This option can potentially  improve performance and help reduce the size of the extract file. For more information about how Tableau recommends you use the Physical Tables option, see Tips for using the Physical Tables option . In some cases, you can also use this option as a workaround for row-level security. For more information about row-level security using Tableau, see Restrict Access at the Data Row Level . Conditions for using the Physical Tables option To store your extract using the Physical Tables option, the data in your extract must meet all of the conditions listed below. All joins between physical tables are equality (=) joins Data types of the columns used for relationships or joins are identical No pass-through functions (RAWSQL) used No incremental refresh configured No extract filters configured No Top N or sampling configured When the extract is stored as physical tables, you cannot append data to it. For logical tables, you can't append data to extracts that have more than one logical table. Note: Both the Logical Tables and Physical Tables options only affect how the data in your extract is stored. The options do not affect how tables in your extract are displayed on the Data Source page. For example, suppose your extract is comprised of one logical table that contains three physical tables. If you directly open the extract (.hyper) file that has been configured to use the default option, Logical Tables, you see one table listed on the Data Source page. However, if you open the extract using the packaged data source (.tdsx) file or the data source (.tdsx) file with its corresponding extract (.hyper) file, you see all three tables that comprise the extract on the Data Source page. Determine how much data to extract Click Add to define one or more filters to limit how much data gets extracted based on fields and their values. Aggregate the data in the extract Select Aggregate data for visible dimensions to aggregate the measures using their default aggregation. Aggregating the data consolidates rows, can minimize the size of the extract file, and increase performance. When you choose to aggregate the data, you can also select Roll up dates to a specified date level such as Year, Month, etc. The examples below show how the data will be extracted for each aggregation option you can choose. Original data Each record is shown as a separate row. There are seven rows in your data. Aggregate data for visible dimensions (no roll up) Records with the same date and region have been aggregated into a single row. There are five rows in the extract. Aggregate data for visible dimensions (roll up dates to Month) Dates have been rolled up to the Month level and records with the same region have been aggregated into a single row. There are three rows in the extract. Choose the rows to extract Select the number of rows you want to extract. You can extract All rows or the Top N rows. Tableau first applies any filters and aggregation and then extracts the number of rows from the filtered and aggregated results. The number of rows options depend on the type of data source you are extracting from. Notes: Not all data sources support sampling. Therefore, you might not see the Sampling option in the Extract Data dialog box. Any fields that you hide first in the Data Source page or on the sheet tab will be excluded from the extract. Click the Hide All Unused Fields button to remove these hidden fields from the extract. When finished, click OK . Click the sheet tab. Clicking the sheet tab initiates the creating of the extract. In the subsequent dialog box, select a location to save the extract, give the extract file a name, and then click Save . If the Save dialog box does not display, see the Troubleshoot extracts section, below. General tips for working with extracts Save your workbook to preserve the connection to the extract After you create an extract, the workbook begins to use the extract version of your data. However, the connection to the extract version of your data is not preserved  until you save the workbook. This means if you close the workbook without saving the workbook first, the workbook will connect to the original data source the next time you open it. Toggle between sampled data and entire extract When you're working with a large extract, you might want to create an extract with a sample of the data so you can set up the view while avoiding long queries every time you place a field on a shelf on the sheet tab.  You can then toggle between using the extract (with sample data) and using the entire data source by selecting a data source on the Data menu and then selecting Use Extract . Don't connect directly to the extract Because extracts are saved to your file system, it is possible to connect directly to them with a new Tableau Desktop instance. This is not recommended for a few reasons: The table names will be different . Tables stored in your extract use special naming to guarantee name uniqueness, and it may not be human-readable. You cannot refresh the extract . When connecting directly to an extract, Tableau treats that file as the true source, as opposed to a clone of underlying data. So, it's not possible to relate it back to your source data. The data model and relationships will be lost . The data model and relationships between the tables is stored in the .tds file and not in the .hyper file, so this information is lost when connecting directly to the .hyper file. Additionally, if you extract using logical tables storage, you will not see any references to the original underlying physical tables. Remove the extract from the workbook You can remove an extract at anytime by selecting the extract data source on the Data menu and then selecting Extract > Remove . When you remove an extract, you can choose to Remove the extract from the workbook only or Remove and delete the extract file . The latter option will delete the extract from your hard drive. See extract history You can see when the extract was last updated and other details by selecting a data source on the Data menu and then selecting Extract > History . If you open a workbook that is saved with an extract and Tableau cannot locate the extract, select one of the following options in the Extract Not Found dialog box when prompted: Locate the extract: Select this option if the extract exists but not in the location where Tableau originally saved it. Click OK to open an Open File dialog box where you can specify the new location for the extract file. Remove the extract: Select this option if you have no further need for the extract. This is equivalent to closing the data source. All open worksheets that reference the data source are deleted. Deactivate the extract: Use the original data source from which the extract was created, instead of the extract. Regenerate the extract: Recreates the extract. All filters and other customizations you specified when you originally created the extract are automatically applied. Tips for using the Physical Tables option Tableau generally recommends that you use the default data storage option, Logical Tables, when setting up and working with extracts. In many cases, some of the features you need for your extract, like extract filters, are only available to you if you use the Logical Tables option. Physical Tables option for extracts that are larger than expected The Physical Tables option should be used sparingly to help with specific situations such as when your data source meets the Conditions for using the Physical Tables option and the size of your extract is larger than expected. To determine if the extract is larger than it should be, the sum of rows in the extract using the Logical Tables option must be higher than the sum of rows of all the combined tables before the extract has been created. If you encounter this scenario, try using the Physical Tables option instead. Alternative filtering suggestions when using the Physical Tables option When using the Physical Tables option, other options to help reduce the data in your extract, like extract filters, aggregation, Top N and Sampling are disabled. If you need to reduce the data in an extract that uses the Physical Tables option, consider filtering the data before it is brought into Tableau Desktop using one of the following suggestions: Connect to your data and define filters using custom SQL: Instead of connecting to a database table, connect to your data using custom SQL instead. When creating your custom SQL query, make sure that it contains the appropriate level of filtering that you need to reduce the data in your extract. For more information about custom SQL in Tableau Desktop, see Connect to a Custom SQL Query . Define a view in the database: If you have write access to your database, consider defining a database view that contains just the data you need for your extract and then connect to the database view from Tableau Desktop. Row-level security with extracts If you want to secure extract data at the row level, using the Physical Tables option is the recommended way to achieve this scenario. For more information about row-level security in Tableau, see Restrict Access at the Data Row Level . Troubleshoot extracts Creating an extract takes a long time: Depending on the size of your data set, creating an extract can take a long time. However, after you have extracted the data and saved it to your computer, performance can improve. Extract is not created: If your data set contains a really large number of columns (e.g., in the thousands), in some cases Tableau might not be able to create the extract. If you encounter problems, consider extracting fewer columns or restructuring the underlying data. Save dialog does not display or extract is not created from a .twbx: If you follow the above procedure to extract data from a packaged workbook, the Save dialog does not display. When an extract is created from a packaged workbook (.twbx), the extract file  is automatically stored in the package of files associated with the packaged workbook. To access the extract file that you created from the packaged workbook, you must unpackage the workbook. For more information, see Packaged Workbooks . Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.3. Perform data transformation in Tableau Prep,1.3.1. Choose which data transformation to perform based on a business scenario,https://help.tableau.com/current/pro/desktop/en-us/data_structure_for_analysis.htm,"Structure Data for Analysis Applies to: Tableau Desktop, Tableau Prep, Tableau Public There are certain concepts that are fundamental to understanding data prep and how to structure data for analysis. Data can be generated, captured, and stored in a dizzying variety of formats, but when it comes to analysis, not all data formats are created equal. Data preparation is the process of getting well formatted data into a single table or multiple related tables so it can be analyzed in Tableau. This includes both the structure, i.e. rows and columns, as well as aspects of data cleanliness, such correct data types and correct data values. Tip : It may help to go through the following topic with a data set of your own. If you do not already have a data set you can use, see our tips for finding good data sets (Link opens in a new window) . How structure impacts analysis The structure of your data may not be something you can control. The rest of this topic assumes you have access to the raw data and the tools needed to shape it, such as Tableau Prep Builder . However, there may be situations when you can't pivot or aggregate your data as desired. It is often still possible to perform the analysis but you may need to change your calculations or how you approach the data. For an example of how to perform the same analysis with different data structures, see Tableau Prep Day in the Life Scenarios: Analysis with the Second Date in Tableau Desktop (Link opens in a new window) . But if you can optimize the data structure it will likely make your analysis much easier. Data Structure Tableau Desktop works best with data that is in tables formatted like a spreadsheet. That is, data  stored in rows and columns, with column headers in the first row. So what should be a row or column? What is a row? A row, or record, can be anything from information around a transaction at a retail store, to weather measurements at a specific location, or stats about a social media post. It's important to know what a record (row) in the data represents. This is the granularity of the data. Here, each record is a day Here, each record is a month Tip: A best practice is to have a unique identifier (UID), a value that identifies each row as a unique piece of data. Think of it like the social security number or URL of each record. In Superstore, that would be Row ID. Note that not all data sets have a UID but it can't hurt to have one. Try to make sure you can answer the question ""What does a row in the data set represent?"". This is the same as answering ""What does the TableName(Count) field represent?"". If you can't articulate that, the data might be structured poorly for analysis. Aggregation and Granularity A concept related to what makes up a row is the idea of aggregation and granularity, which are opposite ends of a spectrum. Aggregation refers to how multiple data values are brought together into a single value, such as counting all the Google searches for Pumpkin Spice or taking the average of all the temperature readings around Seattle on a given day. By default, measures in Tableau are always aggregated. The default aggregation is SUM. You can change the aggregation to options like Average, Median, Count Distinct, Minimum, etc. Granularity refers to how detailed the data is. What does a row or record in the data set represent? A person with malaria? A provinces' total cases of malaria for the month? That's the granularity. Knowing the granularity of the data is crucial to working with level of detail (LOD) expressions. Understanding aggregation and granularity is a critical concept for many reasons; it impacts things like finding useful data sets, building the visualization you want, relating or joining data correctly, and using LOD expressions. Tip : For more information, see Data Aggregation in Tableau. What is a field or column? A column of data in a table comes into Tableau Desktop as a field in the data pane, but they are essentially interchangeable terms. (We save the term column in Tableau Desktop for use in the columns and rows shelf and to describe certain visualizations.) A field of data should contain items that can be grouped into a larger relationship. The items themselves are called values or members (only discrete dimensions contain members). What values are allowed in a given field are determined by the domain of the field (see the note below). For example, a column for ""grocery store departments"" might contain the members ""deli"" ""bakery"", ""produce"", etc., but it wouldn't include ""bread"" or ""salami"" because those are items, not departments. Phrased another way, the domain of the department field is limited to just the possible grocery store departments. Additionally, a well-structured data set would have a column for ""Sales"" and a column for ""Profit"", not a single column for ""Money"", because profit is a separate concept from sales. The domain of the Sales field would be values ≥ 0, since sales cannot be negative. The domain of the Profit field, however, would be all values, since profit can be negative. Note : Domain can also mean the values present in the data. If the column ""grocery store department"" erroneously contained ""salami"", by this definition, that value would be in the domain of the column. The definitions are slightly contradictory. One is the values that could or should be there, the other is values that actually are there Categorizing fields Each column in the data table comes into Tableau Desktop as a field, which appears in the Data pane. Fields in Tableau Desktop must be either a dimension or measure (separated by a line within tables in the Data pane) and either discrete or continuous (color coded: blue fields are discrete and green fields are continuous). Dimensions are qualitative, meaning they can't be measured but are instead described. Dimensions are often things like city or country, eye color, category, team name, etc. Dimensions are usually discrete. Measures are quantitative, meaning they can be measured and recorded with numbers. Measures can be things like sales, height, clicks, etc. In Tableau Desktop, measures are automatically aggregated; the default aggregation is SUM. Measures are usually continuous. Discrete means individually separate or distinct. Toyota is distinct from Mazda. In Tableau Desktop, discrete values come into the view as a label and they create panes. Continuous means forming an unbroken, continuous whole. 7 is followed by 8 and then it's the same distance to 9, and 7.5 would fall midway between 7 and 8. In Tableau Desktop, continuous values come into the view as an axis. Dimensions are usually discrete, and measures are usually continuous. However, this is not always the case. Dates can be either discrete or continuous. Dates are dimensions and automatically come into the view as discrete (aka date parts, such as ""August"", which considers the month of August without considering other information like the year).  A trend line applied to a timeline with discrete dates will be broken into multiple trend lines, one per pane. We can chose to use continuous dates if preferred (aka date truncations, such as ""August 2024"", which is different than ""August 2025""). A trend line applied to a timeline with continuous dates will have a single trend line for the entire date axis. Tip : For more information, see Dimensions and Measures, Blue and Green . In Tableau Prep, no distinction is made for dimensions or measures. Understanding the concepts behind discrete or continuous are important, however, for things like understanding the detail versus summary presentation of data in the profile pane. Detail: the detail view shows every domain element as a discrete label and has a visual scrollbar to provide a visual overview of all the data. Summary: the summary view shows the values as binned on a continuous axis as a histogram. Binning & Histograms A field like age or salary is considered continuous. There is a relationship between the age 34 and 35, and 34 is as far from 35 as 35 is from 36. However, once we're past age 10 or so, we usually stop saying things like we're ""9 and a half"" or ""7 and ¾"". We’re already binning our age to neat year-sized increments. Someone who is 12,850 days old is older than someone who is 12,790 days old, but we draw a line and say they're both 35. Similarly, age groupings are often used in place of actual ages. Child prices for movie tickets might be for kids 12 and under, or a survey may ask you to select your age group, such as 20-24, 25-30, etc. Histograms are used to visualize the distribution of numerical data using binning. A histogram is similar to a bar chart, but rather than being discrete categories per bar, the rectangles making up the histogram span a bin of a continuous axis, such as range of the number of blossoms (0-4, 5-9, 10-14, etc.).  The height of the rectangles is determined by frequency or count of those values. Here, the y-axis is the count of plants that fall into each bin. Seven plants have 0-4 blossoms, two plants have 5-9 blossoms, and 43 plants have 20-24 blossoms. In Tableau Prep, the summary view is a histogram of binned values. The detail view shows the frequency for every value and has a visual scrollbar off to the side that shows the overall distribution of the data. Summary view Detail view Distributions and outliers Seeing the distribution of a data set can help with outlier detection. Distribution : the shape of the data in a histogram, though this depends on the size of the bins. Being able to see all your data in a histogram view can help identify if the data seems correct and complete. The shape of the distribution will only be of use if you know the data and can interpret whether or not the distribution makes sense. For example, if we were to look at a data set of the number of homes with broadband internet from 1940-2017, we'd expect to see a very skewed distribution. However, if we were to look at the number of homes with broadband internet from January 2017 to December 2017 we'd expect a fairly uniform distribution. If we were to look at a data set of Google searches for ""Pumpkin Spice Latte"", we'd expect to see a fairly sharp peak in the fall, whereas searches for “""convert Celsius to Fahrenheit"" would likely be fairly stable. Outlier : a value that is extreme compared to other values. Outliers may be correct values or they may be indicative of an error. Some outliers are correct and indicate actual anomalies; these should not be removed or modified. Some outliers indicate issues with data cleanliness, such as a salary of $50 instead of $50,000 because a period was typed instead of the comma. Visual outlier detection with distributions If you were to see a list like this: at first glance it doesn't look odd. But if, instead of a list of labels, this was plotted on a continuous binned axis, it would look like this: And it's much more obvious that the last observation is farther away from the first and may be an outlier due to error. Data Types Databases, unlike spreadsheets, usually enforce strict rules on data types. Data types classify the data in a given field and provide information about how the data should be formatted, interpreted, and what operations can be done to that data. For example, numerical fields can have mathematical operations applied to them and geographic fields can be mapped. Tableau Desktop assigns whether a field is a dimension or measure, but fields have other characteristics that depend on their data type. These are indicated by the icon each field has (though some types share an icon). Tableau Prep uses the same data types. If data type is enforced on a column and an existing value doesn't match its assigned data type, it may be displayed as null (because ""purple"" doesn't mean anything as a number). Some functions require specific data types. For example, you cannot use CONTAINS with a numerical field. Type functions are used to change the data type of a field. For example, DATEPARSE can take a text date in a specific format and make it a date, thus enabling things like automatic drill down in the view. Icon Data type Text (string) values Date values Date & Time values Numerical values Boolean values (relational only) Geographic values (used with maps) Tip : For more information, refer to the Help article on Data Types . Pivot and Unpivot Data People-friendly data is often captured and recorded in a wide format, with many columns. Machine-readable data, like Tableau prefers, is better in a tall format, with fewer columns and more rows. Note : Traditionally, pivoting data means going from tall to wide (rows to columns), and unpivoting means going from wide to tall (columns to rows). However, Tableau uses the word pivot to mean going from wide (people-friendly) to tall (machine-readable) by turning columns into rows. In this document, pivot will be refer to the Tableau sense of the word. For clarity, it can help to specify ""pivot columns to rows"" or ""pivot rows to columns"". For more information, refer to the Help articles Pivot Your Data and Tips for Working with your Data . Wide data In the WHO malaria data set, there is a column for country, then a column per year. Each cell represents the number of cases of malaria for that country and year. In this format we have 108 rows and 16 columns. It's easy for a person to read and understand this format. However, if we were to bring this data into Tableau Desktop, we get a field per column. We have a field for 2000, a field for 2001, a field for 2002, etc. To think of it another way, there are 15 fields that all represent the same basic thing—number of reported cases of malaria—and no single field for time. This makes it very hard to do analysis across time as the data is stored in separate fields. Example: working with wide data Q: How would we create a map that shows the total number of malaria cases per country from 2000 to 2014? A: Create a calculated field to sum all the years. Note: this image has not been updated to reflect the most current UI. The Data pane no longer shows Dimensions and Measures as labels. Another indication that this format isn't ideal for analysis can be seen in the fact that nowhere do we have information about what the actual values mean. For Algeria in 2012, we have the value 55. Fifty five what? It's not clear from the structure of the data. If the name of the column isn't describing what the values are but rather conveys additional information, this is a sign the data needs to be pivoted. Tall data If we pivot the data, we reshape the data from wide to tall. Now, rather than having a column for each year, we have a single column, Year, and a new column, Reported Cases. In this format we have 1,606 rows and 3 columns. This data format is taller rather than wider. Now in Tableau Desktop, we have a field for Year and a field for Reported Cases as well as the original Country field. It's much easier to do analysis because each field represents a unique quality about the data set—location, time, and value. Note: this image has not been updated to reflect the most current UI. The Data pane no longer shows Dimensions and Measures as labels. Example: working with tall data Q: How would we create a map that shows the total number of malaria cases per country from 2000 to 2014? A: Use the Reported Cases field. Note: this image has not been updated to reflect the most current UI. The Data pane no longer shows Dimensions and Measures as labels. Now it's easy to see that for Algeria in 2012, the 55 refers to the number of reported cases (because we could label this new column). Note : In this example, the wide data consisted of a single record per country. With the tall data format, there are now 15 rows for each country (one for each of the 15 years in the data). It's important to keep in mind that there are now multiple rows per country. If there was a column for Land Area, that value would be repeated for each of the 15 rows for each country in a tall data structure. If you created a bar chart by bringing out Country to Rows and Land Area to Columns , by default the view would sum the land area for all 15 rows per country. For some fields it may be necessary to compensate for double counting values by  aggregating with an average or minimum rather than sum  or filtering. Normalization Relational databases are made up of multiple tables that can be related or linked together in some way. Each table contains a unique identifier, or key, per record. By relating or joining on the keys, records can be linked to provide more information than is contained in a single table. What information goes into each table is dependent on the data model used, but the general principle is around reducing duplication. For example, consider event planning for an event like a wedding. We need to keep track of information at the level of groups (such as families or couples) as well as the level of individuals. A table could be created that combines all the information together: However, if an address is incorrect and needs to be fixed, it must be fixed across multiple rows, potentially leading to errors or conflicts. A better structure is to create two tables, one for information that pertains to the group (such as address and if the invitation was sent) and one for information pertaining to the individuals (for things like seating assignments and dietary restrictions). Group table Individual table It's much easier to track and analyze group-level information in the group table and individual-level information in the individual table. For example, the number of chairs needed can be obtained from the number of Attending = Yes records in the individual table, and the number of stamps needed for thank-yous can be obtained from the number of records in the group table where Gift isn't null. The process of breaking up all the data into multiple tables—and figuring out which table contains which columns—is called normalization . Normalization helps reduce redundant data and simplifies the organization of the database. However, there may be times when information is needed that spans multiple tables. For example, what if we wanted to balance seating arrangements (individuals) such that groups from the bride's side are intermingled with groups from the groom's side? (The bridge or groom affiliation is tracked at the group level.) To achieve this, we need to relate the tables back together so the individuals are associated with information about their group. Proper normalization isn't just breaking up tables, it also requires the presence of a shared, related field or unique identifier than can be used to combine the data back together again. Here, that related field is Group. That field is present in both tables, so we can join  on this field and return to our original, single table format. This is a denormalized structure. So why didn't we just keep the original denormalized table? It is harder to maintain and was storing redundant information. At scale, the level of data duplication can be come massive. Storing the same information over and over isn't efficient. Normalized tables have a few key properties: Each row needs a unique identifier Each table needs a column or columns that can be used to connect it back to other tables (key). These shared (key) columns are used for relating or joining tables back together. For our data, the relationship or join clause would be on the Group field in each table. Join Types Although the default method for combing data in Tableau Desktop is relating, there are cases when you may want to join tables in Tableau Desktop or Tableau Prep Builder. For a basic overview of joins and join types, see Join Your Data . ""Tidy"" Data Hadley Wickham published an article in 2014 in the Journal of Statistical Software called ""Tidy Data"" (August 2014, Volume 59, Issue 10). This article does an excellent job of laying out a framework for data that is well-structured for analysis. The article can be found here (Hadley Wickham's Academic Portfolio) (Link opens in a new window) or here (hosted by r-project.org) (Link opens in a new window) . Note : The article is hosted on external websites.  Tableau cannot take responsibility for the accuracy or freshness of pages maintained by external providers. Contact the owners if you have questions regarding their content. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.3. Perform data transformation in Tableau Prep,1.3.2. Combine data by using unions,https://help.tableau.com/current/prep/en-us/prep_combine.htm,"Aggregate, Join, or Union Data Aggregate, join, or union your data to group or combine data for analysis. Note : Starting in version 2020.4.1, you can now create and edit flows in Tableau Server and Tableau Cloud . The content in this topic applies to all platforms, unless specifically noted. For more information about authoring flows on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) and Tableau Cloud (Link opens in a new window) help. Aggregate and group values Sometimes you’ll need to adjust the granularity of some data, either to reduce the amount of data produced from the flow, or to align data with other data you might want to join or union together. For example, you might want to aggregate sales data by customer before joining a sales table with a customer table. If you need to adjust the granularity of your data, use the Aggregate option to create a step to group and aggregate data. Whether data is aggregated or grouped depends on the data type (string, number, or date). In the Flow pane, click the plus icon, and select Aggregate . A new aggregation step displays in the Flow pane and the Profile pane updates to show the aggregate and group profile. Drag fields from the left pane to the Grouped Fields pane (the fields that make the row) or to the Aggregated Fields pane (the data that will be aggregated and presented at the level of the grouped fields). You can also: Drag and drop fields between the two panes. Search for fields in the list and select only the fields you want to include in your aggregation. Double-click a field to add it to the left or right pane. Change the function of the field to automatically add it to the appropriate pane. Click Add All or Remove All to bulk apply or remove fields. Apply certain cleaning operations to fields. For more information abut which cleaning options are available, see About cleaning operations (Link opens in a new window) . The following example would show the aggregated sum of profit and quantity, and average discount by region and year of sale. Fields are distributed between the Grouped Fields and Aggregated Fields columns based on their data type. Click the group or aggregation type (for example, AVG or SUM) headings to change the group or aggregation type. In the data grids below the aggregation and group profile, you can see a sample of the members of the group or aggregation. Any cleaning operations that are made to the fields are tracked in the Changes pane. Join your data The data that you want to analyze is often made up of a collection of tables that are related by specific fields. Joining is a method for combining the related data on those common fields. The result of combining data using a join is a table that’s typically extended horizontally by adding fields of data. Joining is an operation you can do anywhere in the flow. Joining early in a flow can help you understand your data sets and expose areas that need attention right away. Tableau Prep supports the following join types: Join Type Description Left For each row, includes all values from the left table and corresponding matches from the right table. When a value in the left table doesn't have a corresponding match in the right table, you see a null value in the join results. lnner For each row, includes values that have matches in both tables. Right For each row, includes all values from the right table and corresponding matches from the left table. When a value in the right table doesn't have a corresponding match in the left table, you see a null value in the join results. leftOnly For each row, includes only values from the left table that don't match any values from the right table. Field values from the right table show as null values in the join results. rightOnly For each row, includes only values from the right table that don't match any values from the left table. Field values from the left table show as null values in the join results. notInner For each row, includes all of the values from the right and the left table that don't match. Full For each row, includes all values from both tables.  When a value from either table doesn't have a match with the other table, you see a null value in the join results. To create a join, do the following: Join two tables using one of the following methods: Add at least two tables to the Flow pane, then select and drag the related table to the other table until the Join option displays. Click the icon and select Join from the menu, then manually add the other input to the join and add the join clauses. Note : If you connect to a table that has table relationships defined and includes related fields, you can select Join and select from a list of related tables. Tableau Prep creates the join based on the fields that make up the relationship between the two tables. For more information about connectors with table relationships, see Join data in the Input step (Link opens in a new window) . A new join step is added to the flow and the profile pane updates to show the join profile. To review and configure the join, do the following: Review the Summary of Join Results to see the number of fields included and excluded as a result of the join type and join conditions. Under Join Type , click in the Venn diagram to specify the type of join you want. Under Applied Join Clauses , click the plus icon or, on the field chosen for the default join condition, specify or edit the join clause. The fields you selected in the join condition are the common fields between the tables in the join. You can also click the recommended join clauses shown under Join Clause Recommendations to add the clause to the list of applied join clauses. Inspect the results of the join The summary in the join profile shows metadata about the join to help you validate that the join includes the data you expect. Applied Join Clauses : By default, Tableau Prep defines the first join clause based on common field names in the tables being joined. Add or remove join clauses as needed. Join Type : By default, when you create a join, Tableau Prep uses an inner join between the tables. Depending on the data that you connect to, you might be able to use left, inner, right,  leftOnly, rightOnly,notInner, or full joins. Summary of Join Results : The Summary of Join Results shows you the distribution of values that are included and excluded from the tables in the join. Click each Included bar to isolate and see the data in the join profile  included in the join. Click each Excluded bar to isolate and see the data in the join profile that are excluded from the join. Click any combination of the Included and Excluded bars to see a cumulative perspective of the data. Join Clause Recommendations : Click the plus icon next to the recommended join clause to add it to the Applied Join Clauses list. Join Clauses pane: In the Join Clauses pane, you can see the values in each field in the join clause. The values that don't meet the criteria for the join clause are displayed in red text. Join Results pane: If you see values in the Join Results pane that you want to change, you can edit the values in this pane. Common join issues If you don't see the results you expect after joining your data, you may need to do some additional cleaning on your field values. The following issues will result in Tableau Prep reading the values as not matching and exclude them from the join: Different capitalization: My Sales and my sales Different spelling: Hawaii and Hawai'i Mispelling or data entry errors: My Company Health and My Company Heath Name changes: John Smith and John Smith Jr. Abbreviations: My Company Limited and My Company Ltd Extra separators: Honolulu and Honolulu (Hawaii) Extra spaces: This includes extra space between characters, tabbed spaces or extra leading or trailing spaces Inconsistent use of periods: Returned, not needed. and Returned, not needed. The good news is that if your field values have any of these issues, you can fix the field values directly  in the Join Clauses or work with excluded values by clicking in the Excluded bars in the Summary of Join Results and use the cleaning operations in the profile card menu. For more information about the different cleaning options available in the Join step, see About cleaning operations (Link opens in a new window) . Fix mismatched fields and more You can fix mismatched fields right in the join clause. Double-click or right-click the value and select Edit Value from the context menu on the field that you want to fix and enter a new value. Your data changes are tracked and added to the Changes pane right in the Join step. You can also select multiple values to keep, exclude or filter in the Join Clauses panes, or apply other cleaning operations in the Join Results pane. Depending on which fields you change and where they are in the join process, your change is applied either before or after the join to give you the corrected results. For more information about cleaning fields  see Apply cleaning operations (Link opens in a new window) . Union your data Union is a method for combining data by appending rows of one table onto another table. For example, you might want to add new transactions in one table to a list of past transactions in another table. Make sure the tables you union have the same number of fields, the same field names, and the fields are the same data type. Tip : To maximize performance a single union can have a maximum of 10 inputs. If you need to union more than 10 files or tables, try unioning files in the Input step. For more information about this type of union, see Union files and database tables in the Input step (Link opens in a new window) . Similar to a join, you can use the union operation anywhere in the flow. To create a union, do the following: After you add at least two tables to the flow pane, select and drag a related table to the other table until you see the Union option. You can also click the icon and select Union from the menu. A new union step is added in the Flow pane, and the Profile pane updates to show the union profile. Add additional tables to the union by dragging tables toward the unioned tables until you see the Add option. In the union profile, review the metadata about the union. You can remove tables from the union as well as see details about any mismatched fields. Inspect the results of the union After you create a union, inspect the results of the union to validate that the data in the union is what you expect. To validate your unioned data, check the following areas: Review the union metadata : The union profile shows some metadata about the union. Here you can see the tables that make up the union, the resulting number of fields and any mismatched fields. Review the colors for each field : Next to each  field listed in the Union summary and above each field in the union profile, is a set of colors. The colors correspond to each table in the union. If all table colors show for that field, then the union performed correctly for that field. A missing table color indicates that you have mismatched fields. Mismatched fields are fields that might have similar data but are different in some way. You can see the list of fields that don't match in the Union summary and the tables where they came from. If you want to take a closer look at the data in the fields, select the Show only mismatched fields check box to isolate the mismatched fields in the Union profile. To fix these field, follow one of the suggestions in the Fix fields that don’t match section below. Fix fields that don’t match When tables in a union don’t match, the union produces extra fields. The extra fields are valid data being excluded from their appropriate context. To resolve a field mismatch issue, you must merge the mismatched fields together. There are a number of reasons why fields might not match. Corresponding fields have different names : If corresponding fields between tables have different names, you can  use union recommendations, manually merge fields in the Mismatched Fields list, or rename the field in the union profile  to  merge the mismatched fields together. To use union recommendations, do the following: in the Mismatched Fields list, click on a mismatched field. If a suggested match exists, the matching field is highlighted in yellow. Suggested matches are based on fields with similar data types and field names. Hover on the highlighted field and click the plus button to merge the fields. To manually merge fields in the Mismatched Fields list, do the following: Select one or more fields in the list. Right-click or Ctrl-click (MacOS) a selected field and if the merge is valid, the Merge Fields menu option appears. If you see No options available when you right-click the field, this is because the fields are not eligible to merge. For example trying to merge two fields from the same input. Click Merge Fields to merge the selected fields. To rename the field in the union profile pane, right-click the field name and click Rename Field . Corresponding fields have the same name but are a different type: By default, when the name of corresponding fields match but the data type of the fields don’t, Tableau Prep changes the data type of one of the fields so they are compatible with each other. If Tableau Prep makes this change, it’s noted at the top of the merged field by the Change Data Type icon. In some cases, Tableau Prep might not pick the correct data type. If that happens and you want to undo the merge, right-click or Ctrl-click (MacOS) the Change Data Type icon and select Separate Inputs with Different Types . You can then merge the fields again by first changing the data type of one of the fields and then using the suggestions in Additional merge field options . Corresponding tables have different number of fields : To union tables, each table in the union must contain the same number of fields. If a union results in extra fields, merge the field into an existing field. Additional merge field options In addition to the methods described in the above section for merging fields you can also use one of the following methods to merge fields. You can merge fields in any step, except for the  Output step. For  information about how to merge fields in the same file, see Merge fields . To merge fields, do one of the following: Drag and drop one field onto another. A Drop to merge fields indicator displays. Select multiple fields and right-click within the selection to open the context menu, and then click Merge Fields . Select multiple fields, and then click Merge Fields on the context-sensitive toolbar. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.3. Perform data transformation in Tableau Prep,1.3.3. Combine data by using joins,https://help.tableau.com/current/prep/en-us/prep_combine.htm,"Aggregate, Join, or Union Data Aggregate, join, or union your data to group or combine data for analysis. Note : Starting in version 2020.4.1, you can now create and edit flows in Tableau Server and Tableau Cloud . The content in this topic applies to all platforms, unless specifically noted. For more information about authoring flows on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) and Tableau Cloud (Link opens in a new window) help. Aggregate and group values Sometimes you’ll need to adjust the granularity of some data, either to reduce the amount of data produced from the flow, or to align data with other data you might want to join or union together. For example, you might want to aggregate sales data by customer before joining a sales table with a customer table. If you need to adjust the granularity of your data, use the Aggregate option to create a step to group and aggregate data. Whether data is aggregated or grouped depends on the data type (string, number, or date). In the Flow pane, click the plus icon, and select Aggregate . A new aggregation step displays in the Flow pane and the Profile pane updates to show the aggregate and group profile. Drag fields from the left pane to the Grouped Fields pane (the fields that make the row) or to the Aggregated Fields pane (the data that will be aggregated and presented at the level of the grouped fields). You can also: Drag and drop fields between the two panes. Search for fields in the list and select only the fields you want to include in your aggregation. Double-click a field to add it to the left or right pane. Change the function of the field to automatically add it to the appropriate pane. Click Add All or Remove All to bulk apply or remove fields. Apply certain cleaning operations to fields. For more information abut which cleaning options are available, see About cleaning operations (Link opens in a new window) . The following example would show the aggregated sum of profit and quantity, and average discount by region and year of sale. Fields are distributed between the Grouped Fields and Aggregated Fields columns based on their data type. Click the group or aggregation type (for example, AVG or SUM) headings to change the group or aggregation type. In the data grids below the aggregation and group profile, you can see a sample of the members of the group or aggregation. Any cleaning operations that are made to the fields are tracked in the Changes pane. Join your data The data that you want to analyze is often made up of a collection of tables that are related by specific fields. Joining is a method for combining the related data on those common fields. The result of combining data using a join is a table that’s typically extended horizontally by adding fields of data. Joining is an operation you can do anywhere in the flow. Joining early in a flow can help you understand your data sets and expose areas that need attention right away. Tableau Prep supports the following join types: Join Type Description Left For each row, includes all values from the left table and corresponding matches from the right table. When a value in the left table doesn't have a corresponding match in the right table, you see a null value in the join results. lnner For each row, includes values that have matches in both tables. Right For each row, includes all values from the right table and corresponding matches from the left table. When a value in the right table doesn't have a corresponding match in the left table, you see a null value in the join results. leftOnly For each row, includes only values from the left table that don't match any values from the right table. Field values from the right table show as null values in the join results. rightOnly For each row, includes only values from the right table that don't match any values from the left table. Field values from the left table show as null values in the join results. notInner For each row, includes all of the values from the right and the left table that don't match. Full For each row, includes all values from both tables.  When a value from either table doesn't have a match with the other table, you see a null value in the join results. To create a join, do the following: Join two tables using one of the following methods: Add at least two tables to the Flow pane, then select and drag the related table to the other table until the Join option displays. Click the icon and select Join from the menu, then manually add the other input to the join and add the join clauses. Note : If you connect to a table that has table relationships defined and includes related fields, you can select Join and select from a list of related tables. Tableau Prep creates the join based on the fields that make up the relationship between the two tables. For more information about connectors with table relationships, see Join data in the Input step (Link opens in a new window) . A new join step is added to the flow and the profile pane updates to show the join profile. To review and configure the join, do the following: Review the Summary of Join Results to see the number of fields included and excluded as a result of the join type and join conditions. Under Join Type , click in the Venn diagram to specify the type of join you want. Under Applied Join Clauses , click the plus icon or, on the field chosen for the default join condition, specify or edit the join clause. The fields you selected in the join condition are the common fields between the tables in the join. You can also click the recommended join clauses shown under Join Clause Recommendations to add the clause to the list of applied join clauses. Inspect the results of the join The summary in the join profile shows metadata about the join to help you validate that the join includes the data you expect. Applied Join Clauses : By default, Tableau Prep defines the first join clause based on common field names in the tables being joined. Add or remove join clauses as needed. Join Type : By default, when you create a join, Tableau Prep uses an inner join between the tables. Depending on the data that you connect to, you might be able to use left, inner, right,  leftOnly, rightOnly,notInner, or full joins. Summary of Join Results : The Summary of Join Results shows you the distribution of values that are included and excluded from the tables in the join. Click each Included bar to isolate and see the data in the join profile  included in the join. Click each Excluded bar to isolate and see the data in the join profile that are excluded from the join. Click any combination of the Included and Excluded bars to see a cumulative perspective of the data. Join Clause Recommendations : Click the plus icon next to the recommended join clause to add it to the Applied Join Clauses list. Join Clauses pane: In the Join Clauses pane, you can see the values in each field in the join clause. The values that don't meet the criteria for the join clause are displayed in red text. Join Results pane: If you see values in the Join Results pane that you want to change, you can edit the values in this pane. Common join issues If you don't see the results you expect after joining your data, you may need to do some additional cleaning on your field values. The following issues will result in Tableau Prep reading the values as not matching and exclude them from the join: Different capitalization: My Sales and my sales Different spelling: Hawaii and Hawai'i Mispelling or data entry errors: My Company Health and My Company Heath Name changes: John Smith and John Smith Jr. Abbreviations: My Company Limited and My Company Ltd Extra separators: Honolulu and Honolulu (Hawaii) Extra spaces: This includes extra space between characters, tabbed spaces or extra leading or trailing spaces Inconsistent use of periods: Returned, not needed. and Returned, not needed. The good news is that if your field values have any of these issues, you can fix the field values directly  in the Join Clauses or work with excluded values by clicking in the Excluded bars in the Summary of Join Results and use the cleaning operations in the profile card menu. For more information about the different cleaning options available in the Join step, see About cleaning operations (Link opens in a new window) . Fix mismatched fields and more You can fix mismatched fields right in the join clause. Double-click or right-click the value and select Edit Value from the context menu on the field that you want to fix and enter a new value. Your data changes are tracked and added to the Changes pane right in the Join step. You can also select multiple values to keep, exclude or filter in the Join Clauses panes, or apply other cleaning operations in the Join Results pane. Depending on which fields you change and where they are in the join process, your change is applied either before or after the join to give you the corrected results. For more information about cleaning fields  see Apply cleaning operations (Link opens in a new window) . Union your data Union is a method for combining data by appending rows of one table onto another table. For example, you might want to add new transactions in one table to a list of past transactions in another table. Make sure the tables you union have the same number of fields, the same field names, and the fields are the same data type. Tip : To maximize performance a single union can have a maximum of 10 inputs. If you need to union more than 10 files or tables, try unioning files in the Input step. For more information about this type of union, see Union files and database tables in the Input step (Link opens in a new window) . Similar to a join, you can use the union operation anywhere in the flow. To create a union, do the following: After you add at least two tables to the flow pane, select and drag a related table to the other table until you see the Union option. You can also click the icon and select Union from the menu. A new union step is added in the Flow pane, and the Profile pane updates to show the union profile. Add additional tables to the union by dragging tables toward the unioned tables until you see the Add option. In the union profile, review the metadata about the union. You can remove tables from the union as well as see details about any mismatched fields. Inspect the results of the union After you create a union, inspect the results of the union to validate that the data in the union is what you expect. To validate your unioned data, check the following areas: Review the union metadata : The union profile shows some metadata about the union. Here you can see the tables that make up the union, the resulting number of fields and any mismatched fields. Review the colors for each field : Next to each  field listed in the Union summary and above each field in the union profile, is a set of colors. The colors correspond to each table in the union. If all table colors show for that field, then the union performed correctly for that field. A missing table color indicates that you have mismatched fields. Mismatched fields are fields that might have similar data but are different in some way. You can see the list of fields that don't match in the Union summary and the tables where they came from. If you want to take a closer look at the data in the fields, select the Show only mismatched fields check box to isolate the mismatched fields in the Union profile. To fix these field, follow one of the suggestions in the Fix fields that don’t match section below. Fix fields that don’t match When tables in a union don’t match, the union produces extra fields. The extra fields are valid data being excluded from their appropriate context. To resolve a field mismatch issue, you must merge the mismatched fields together. There are a number of reasons why fields might not match. Corresponding fields have different names : If corresponding fields between tables have different names, you can  use union recommendations, manually merge fields in the Mismatched Fields list, or rename the field in the union profile  to  merge the mismatched fields together. To use union recommendations, do the following: in the Mismatched Fields list, click on a mismatched field. If a suggested match exists, the matching field is highlighted in yellow. Suggested matches are based on fields with similar data types and field names. Hover on the highlighted field and click the plus button to merge the fields. To manually merge fields in the Mismatched Fields list, do the following: Select one or more fields in the list. Right-click or Ctrl-click (MacOS) a selected field and if the merge is valid, the Merge Fields menu option appears. If you see No options available when you right-click the field, this is because the fields are not eligible to merge. For example trying to merge two fields from the same input. Click Merge Fields to merge the selected fields. To rename the field in the union profile pane, right-click the field name and click Rename Field . Corresponding fields have the same name but are a different type: By default, when the name of corresponding fields match but the data type of the fields don’t, Tableau Prep changes the data type of one of the fields so they are compatible with each other. If Tableau Prep makes this change, it’s noted at the top of the merged field by the Change Data Type icon. In some cases, Tableau Prep might not pick the correct data type. If that happens and you want to undo the merge, right-click or Ctrl-click (MacOS) the Change Data Type icon and select Separate Inputs with Different Types . You can then merge the fields again by first changing the data type of one of the fields and then using the suggestions in Additional merge field options . Corresponding tables have different number of fields : To union tables, each table in the union must contain the same number of fields. If a union results in extra fields, merge the field into an existing field. Additional merge field options In addition to the methods described in the above section for merging fields you can also use one of the following methods to merge fields. You can merge fields in any step, except for the  Output step. For  information about how to merge fields in the same file, see Merge fields . To merge fields, do one of the following: Drag and drop one field onto another. A Drop to merge fields indicator displays. Select multiple fields and right-click within the selection to open the context menu, and then click Merge Fields . Select multiple fields, and then click Merge Fields on the context-sensitive toolbar. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.3. Perform data transformation in Tableau Prep,1.3.4. Shape data by using aggregations,https://help.tableau.com/current/prep/en-us/prep_combine.htm#aggregate-and-group-values,"Aggregate, Join, or Union Data Aggregate, join, or union your data to group or combine data for analysis. Note : Starting in version 2020.4.1, you can now create and edit flows in Tableau Server and Tableau Cloud . The content in this topic applies to all platforms, unless specifically noted. For more information about authoring flows on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) and Tableau Cloud (Link opens in a new window) help. Aggregate and group values Sometimes you’ll need to adjust the granularity of some data, either to reduce the amount of data produced from the flow, or to align data with other data you might want to join or union together. For example, you might want to aggregate sales data by customer before joining a sales table with a customer table. If you need to adjust the granularity of your data, use the Aggregate option to create a step to group and aggregate data. Whether data is aggregated or grouped depends on the data type (string, number, or date). In the Flow pane, click the plus icon, and select Aggregate . A new aggregation step displays in the Flow pane and the Profile pane updates to show the aggregate and group profile. Drag fields from the left pane to the Grouped Fields pane (the fields that make the row) or to the Aggregated Fields pane (the data that will be aggregated and presented at the level of the grouped fields). You can also: Drag and drop fields between the two panes. Search for fields in the list and select only the fields you want to include in your aggregation. Double-click a field to add it to the left or right pane. Change the function of the field to automatically add it to the appropriate pane. Click Add All or Remove All to bulk apply or remove fields. Apply certain cleaning operations to fields. For more information abut which cleaning options are available, see About cleaning operations (Link opens in a new window) . The following example would show the aggregated sum of profit and quantity, and average discount by region and year of sale. Fields are distributed between the Grouped Fields and Aggregated Fields columns based on their data type. Click the group or aggregation type (for example, AVG or SUM) headings to change the group or aggregation type. In the data grids below the aggregation and group profile, you can see a sample of the members of the group or aggregation. Any cleaning operations that are made to the fields are tracked in the Changes pane. Join your data The data that you want to analyze is often made up of a collection of tables that are related by specific fields. Joining is a method for combining the related data on those common fields. The result of combining data using a join is a table that’s typically extended horizontally by adding fields of data. Joining is an operation you can do anywhere in the flow. Joining early in a flow can help you understand your data sets and expose areas that need attention right away. Tableau Prep supports the following join types: Join Type Description Left For each row, includes all values from the left table and corresponding matches from the right table. When a value in the left table doesn't have a corresponding match in the right table, you see a null value in the join results. lnner For each row, includes values that have matches in both tables. Right For each row, includes all values from the right table and corresponding matches from the left table. When a value in the right table doesn't have a corresponding match in the left table, you see a null value in the join results. leftOnly For each row, includes only values from the left table that don't match any values from the right table. Field values from the right table show as null values in the join results. rightOnly For each row, includes only values from the right table that don't match any values from the left table. Field values from the left table show as null values in the join results. notInner For each row, includes all of the values from the right and the left table that don't match. Full For each row, includes all values from both tables.  When a value from either table doesn't have a match with the other table, you see a null value in the join results. To create a join, do the following: Join two tables using one of the following methods: Add at least two tables to the Flow pane, then select and drag the related table to the other table until the Join option displays. Click the icon and select Join from the menu, then manually add the other input to the join and add the join clauses. Note : If you connect to a table that has table relationships defined and includes related fields, you can select Join and select from a list of related tables. Tableau Prep creates the join based on the fields that make up the relationship between the two tables. For more information about connectors with table relationships, see Join data in the Input step (Link opens in a new window) . A new join step is added to the flow and the profile pane updates to show the join profile. To review and configure the join, do the following: Review the Summary of Join Results to see the number of fields included and excluded as a result of the join type and join conditions. Under Join Type , click in the Venn diagram to specify the type of join you want. Under Applied Join Clauses , click the plus icon or, on the field chosen for the default join condition, specify or edit the join clause. The fields you selected in the join condition are the common fields between the tables in the join. You can also click the recommended join clauses shown under Join Clause Recommendations to add the clause to the list of applied join clauses. Inspect the results of the join The summary in the join profile shows metadata about the join to help you validate that the join includes the data you expect. Applied Join Clauses : By default, Tableau Prep defines the first join clause based on common field names in the tables being joined. Add or remove join clauses as needed. Join Type : By default, when you create a join, Tableau Prep uses an inner join between the tables. Depending on the data that you connect to, you might be able to use left, inner, right,  leftOnly, rightOnly,notInner, or full joins. Summary of Join Results : The Summary of Join Results shows you the distribution of values that are included and excluded from the tables in the join. Click each Included bar to isolate and see the data in the join profile  included in the join. Click each Excluded bar to isolate and see the data in the join profile that are excluded from the join. Click any combination of the Included and Excluded bars to see a cumulative perspective of the data. Join Clause Recommendations : Click the plus icon next to the recommended join clause to add it to the Applied Join Clauses list. Join Clauses pane: In the Join Clauses pane, you can see the values in each field in the join clause. The values that don't meet the criteria for the join clause are displayed in red text. Join Results pane: If you see values in the Join Results pane that you want to change, you can edit the values in this pane. Common join issues If you don't see the results you expect after joining your data, you may need to do some additional cleaning on your field values. The following issues will result in Tableau Prep reading the values as not matching and exclude them from the join: Different capitalization: My Sales and my sales Different spelling: Hawaii and Hawai'i Mispelling or data entry errors: My Company Health and My Company Heath Name changes: John Smith and John Smith Jr. Abbreviations: My Company Limited and My Company Ltd Extra separators: Honolulu and Honolulu (Hawaii) Extra spaces: This includes extra space between characters, tabbed spaces or extra leading or trailing spaces Inconsistent use of periods: Returned, not needed. and Returned, not needed. The good news is that if your field values have any of these issues, you can fix the field values directly  in the Join Clauses or work with excluded values by clicking in the Excluded bars in the Summary of Join Results and use the cleaning operations in the profile card menu. For more information about the different cleaning options available in the Join step, see About cleaning operations (Link opens in a new window) . Fix mismatched fields and more You can fix mismatched fields right in the join clause. Double-click or right-click the value and select Edit Value from the context menu on the field that you want to fix and enter a new value. Your data changes are tracked and added to the Changes pane right in the Join step. You can also select multiple values to keep, exclude or filter in the Join Clauses panes, or apply other cleaning operations in the Join Results pane. Depending on which fields you change and where they are in the join process, your change is applied either before or after the join to give you the corrected results. For more information about cleaning fields  see Apply cleaning operations (Link opens in a new window) . Union your data Union is a method for combining data by appending rows of one table onto another table. For example, you might want to add new transactions in one table to a list of past transactions in another table. Make sure the tables you union have the same number of fields, the same field names, and the fields are the same data type. Tip : To maximize performance a single union can have a maximum of 10 inputs. If you need to union more than 10 files or tables, try unioning files in the Input step. For more information about this type of union, see Union files and database tables in the Input step (Link opens in a new window) . Similar to a join, you can use the union operation anywhere in the flow. To create a union, do the following: After you add at least two tables to the flow pane, select and drag a related table to the other table until you see the Union option. You can also click the icon and select Union from the menu. A new union step is added in the Flow pane, and the Profile pane updates to show the union profile. Add additional tables to the union by dragging tables toward the unioned tables until you see the Add option. In the union profile, review the metadata about the union. You can remove tables from the union as well as see details about any mismatched fields. Inspect the results of the union After you create a union, inspect the results of the union to validate that the data in the union is what you expect. To validate your unioned data, check the following areas: Review the union metadata : The union profile shows some metadata about the union. Here you can see the tables that make up the union, the resulting number of fields and any mismatched fields. Review the colors for each field : Next to each  field listed in the Union summary and above each field in the union profile, is a set of colors. The colors correspond to each table in the union. If all table colors show for that field, then the union performed correctly for that field. A missing table color indicates that you have mismatched fields. Mismatched fields are fields that might have similar data but are different in some way. You can see the list of fields that don't match in the Union summary and the tables where they came from. If you want to take a closer look at the data in the fields, select the Show only mismatched fields check box to isolate the mismatched fields in the Union profile. To fix these field, follow one of the suggestions in the Fix fields that don’t match section below. Fix fields that don’t match When tables in a union don’t match, the union produces extra fields. The extra fields are valid data being excluded from their appropriate context. To resolve a field mismatch issue, you must merge the mismatched fields together. There are a number of reasons why fields might not match. Corresponding fields have different names : If corresponding fields between tables have different names, you can  use union recommendations, manually merge fields in the Mismatched Fields list, or rename the field in the union profile  to  merge the mismatched fields together. To use union recommendations, do the following: in the Mismatched Fields list, click on a mismatched field. If a suggested match exists, the matching field is highlighted in yellow. Suggested matches are based on fields with similar data types and field names. Hover on the highlighted field and click the plus button to merge the fields. To manually merge fields in the Mismatched Fields list, do the following: Select one or more fields in the list. Right-click or Ctrl-click (MacOS) a selected field and if the merge is valid, the Merge Fields menu option appears. If you see No options available when you right-click the field, this is because the fields are not eligible to merge. For example trying to merge two fields from the same input. Click Merge Fields to merge the selected fields. To rename the field in the union profile pane, right-click the field name and click Rename Field . Corresponding fields have the same name but are a different type: By default, when the name of corresponding fields match but the data type of the fields don’t, Tableau Prep changes the data type of one of the fields so they are compatible with each other. If Tableau Prep makes this change, it’s noted at the top of the merged field by the Change Data Type icon. In some cases, Tableau Prep might not pick the correct data type. If that happens and you want to undo the merge, right-click or Ctrl-click (MacOS) the Change Data Type icon and select Separate Inputs with Different Types . You can then merge the fields again by first changing the data type of one of the fields and then using the suggestions in Additional merge field options . Corresponding tables have different number of fields : To union tables, each table in the union must contain the same number of fields. If a union results in extra fields, merge the field into an existing field. Additional merge field options In addition to the methods described in the above section for merging fields you can also use one of the following methods to merge fields. You can merge fields in any step, except for the  Output step. For  information about how to merge fields in the same file, see Merge fields . To merge fields, do one of the following: Drag and drop one field onto another. A Drop to merge fields indicator displays. Select multiple fields and right-click within the selection to open the context menu, and then click Merge Fields . Select multiple fields, and then click Merge Fields on the context-sensitive toolbar. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.3. Perform data transformation in Tableau Prep,1.3.5. Perform filtering,https://help.tableau.com/current/prep/en-us/prep_filter.htm,"Filter Your Data Applies to: Tableau Prep Note : Starting in version 2020.4.1, you can now create and edit flows in Tableau Server and Tableau Cloud . The content in this topic applies to all platforms, unless specifically noted. For more information about authoring flows on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) and Tableau Cloud (Link opens in a new window) help. Tableau Prep provides various options that you can use to filter your data. For example, use Keep Only or Exclude to do one-click filtering on a specific value for a field in a profile card, data grid or results card, or  select from a variety of filter options for more complex filtering needs. You can also keep or remove entire fields. Filter data at any step in the flow. If you want to simply change a specific value, you can  select Edit Value to edit the value in-line or replace the value with Null. For more information about editing field values, see Edit field values (Link opens in a new window) . Keep or remove fields As you work with your data in your flow you might want to remove unwanted fields. In the Profile pane or the data grid in any cleaning or action step, select one or more fields  and right-click or Ctrl-click (MacOS) and select Remove to remove the selected fields, or select Keep Only ( Tableau Prep Builder version 2019.2.2 and later and on the web) to keep only the selected fields and remove all unselected fields. Hide fields Supported in Tableau Prep Builder version 2021.1.4 and later and Tableau Server or Tableau Cloud starting in version 2021.1. If you have fields in your flow that  don’t need cleaning, but you still want to include them in your flow, you can hide the fields instead of removing them. Data for those fields won't be loaded until you either unhide the fields or run your flow to generate your output. When you hide fields, a new profile card called Hidden Fields is automatically added to the Profile pane, letting you easily unhide fields from the list as you need them. You can include hidden fields in most operations, but joins, aggregations, and pivots require the field to be unhidden to use it in one of these step types. If you hide the field after it has been used in one of these operations, the field will show as hidden and the operation won't be affected. All hidden fields are tagged with an eye icon. Hide and unhide fields To hide or unhide fields, you must be in an Input step or in a Clean step. In the Clean step you can hide or unhide fields from the Profile pane, date grid, and  List view. From the Input step Connect to your data. In the Input step select the field you want to hide or unhide. Click the eye icon to hide or unhide the field. Multi-selecting fields in the Input step is supported starting in version 2023.1. From the Profile pane Select the fields you want to hide. Right-click, Ctrl-click (MacOS), from the More options menu, or from the toolbar menu, select Hide Field or Hide Fields . A new profile card is generated showing your hidden fields. To unhide fields, in the Hidden Fields profile card, select one or more fields, and either click the  eye icon, right-click, or Ctrl-click (MacOS) and select Unhide Fields from the menu. From the List view In a Clean step, on the toolbar, click the List view icon to change to the list view. Select one or more fields to hide or unhide. Click the eye icon to hide or unhide the fields. Filters available for each data type Data type Available filters String Calculation, Wildcard Match, Null Values, Selected Values Number Calculation, Range of Values, Null Values, Selected Values Date and Date & Time Calculation, Range of Dates, Relative Date, Null Values, Selected Values Where are my filter options? To see the different filter options available for your fields, on the profile card, in the data grid or in the results pane,  click the More options menu. To see the menu on the data grid, you must click the Hide profile pane button first, and then click More options . Calculation filter When you select Calculation , the Add Filter dialog box opens. Enter the calculation, verify that it's valid, and click Save . Starting in version 2021.4.1 you can also include parameters in calculation filters.  For more information, see Apply user parameters to filter calculations . Note: In the Input step this is the only type of filter that is available. All other filter types are available in the profile cards, data grid or results pane. Selected Values filter In Tableau Prep Builder version 2019.2.3 and later and on the web, you can use the Selected Values filter to pick and choose the values that you want to keep or exclude for a field, even values that aren't in your sample. In the right pane, click the Keep Only or Exclude tab to select your action, then enter search terms to search for values or click Add a value to add values that are in your data set but aren't included in your sample. Click Done to apply your filter. Note: This filter options isn't available for Aggregation or Pivot step types. Range of Values filter Filter  out values that fall within a specific range. When you select Range of Values , you can specify a range or set minimum or maximum values. Range of Dates filter Filter out values that fall within a specific date range. When you select Range of Dates , you can specify a range of dates or set a minimum or maximum date. Relative Date filter Use the Relative Dates filter to specify the exact range of years, quarters, months, weeks, or days that you want to see in your data. You can also configure an anchor relative to a specific date, and include null values. Note : “Last” date periods include the complete current unit of time, even if some dates haven't occurred yet. For example, if you select the last month and the current date is January 7th, Tableau will display dates for January 1st through January 31st. Wildcard Match filter When you select Wildcard Match , you can filter the field values to keep or exclude values that match a pattern. In the filter editor, select the Keep Only or Exclude tab, enter a value to match and then set the Matching Options criteria to return the values you are looking for. The filtered results display in the left pane of the filter editor so that you can review and experiment with your results. Once you have the results you want, click Done to apply your change. Null Values filter When you select Null Values you can filter the values in the selected field to  show only null values or exclude all null values. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.3. Perform data transformation in Tableau Prep,1.3.6. Shape data by using pivots,https://help.tableau.com/current/prep/en-us/prep_pivot.htm,"Pivot Your Data Note : Starting in version 2020.4.1, you can now create and edit flows in Tableau Server and Tableau Cloud . The content in this topic applies to all platforms, unless specifically noted. For more information about authoring flows on the web, see Tableau Prep on the Web in the Tableau Server (Link opens in a new window) and Tableau Cloud (Link opens in a new window) help. Sometimes analyzing data from a spreadsheet or crosstab format can be difficult in Tableau. Tableau prefers data to be ""tall"" instead of ""wide"", which means that you often have to pivot your data from columns to rows so that Tableau can evaluate it properly. However you may also have scenarios where your data tables are tall and narrow and are too normalized to properly analyze. For example  a sales department that tracks advertising spend in two columns, one called Advertising that contains rows for radio , television and print and one column for total spent. In this type of scenario, to analyze this data as separate measures you would need to pivot that row data to columns. But what about pivoting larger data sets or data that changes frequently over time? You can use a wildcard pattern match to search for fields that match the pattern and automatically pivot the data. Use one of the following options when pivoting your data: Pivot columns to rows Use wildcard search to instantly pivot fields based on a pattern match (Tableau Prep Builder version 2019.1.1 and later and on the web). Pivot rows to columns (Tableau Prep Builder version 2019.1.1 and later and on the web). No matter how you pivot your fields, you can interact directly with the results and perform any additional cleaning operations to get your data looking just the way you want it. You can also use Tableau Prep's smart default naming feature to automatically rename your pivoted fields and values. Pivot columns to rows Use this pivot option to go from wide data to tall data. Pivot from columns to rows on one or more groups of fields. Select the fields that you want to work with and pivot the data from columns to rows. Connect to your data source. Drag the table that you want to pivot to the Flow pane. Do one of the following: Tableau Prep Builder Version 2019.4.2 and later and on the web : In the Profile pane, select the fields that you want to pivot, then  right-click or Ctrl-click (MacOS) and select Pivot Columns to Rows from the menu. If using this option, skip to step 7. All versions : Click the  plus icon, and select Add Pivot from the context menu. Select Fields ( Tableau Prep Builder version 2019.4.2 and later and on the web) Flow Step Menu (all versions) (Optional) In the Fields pane, enter a value in the Search field to search the field list for fields to pivot. (Optional) Select the Automatically rename pivoted fields and values check box to enable Tableau Prep to rename the new pivoted fields using common values in the data. If no common values are found, the default name is used. Select one or more fields from the left pane, and drag them to the Pivot1 Values column in the Pivoted Fields pane. (Optional) In the Pivoted Fields pane, click the plus icon to add more columns to pivot on, then repeat the previous step to select more fields to pivot. Your results appear immediately in both the Pivot Results pane and the data grid. Note : You must select the same number of fields that you selected in Step 5. For example if you selected 3 fields to initially pivot on, then  each subsequent column that you pivot on must also contain 3 fields. If you didn't enable the default naming option  or if Tableau Prep couldn't automatically detect a name, edit the names of the fields. You can also edit the names of the original fields in this pane to best describe the data. (Optional) Rename the new Pivot step to keep track of your changes. For example ""Pivot months"". To refresh your pivot data when data changes, run your flow. If new fields are added to your data source that need to be added to the pivot, manually add them to the pivot. Example : Pivoting on multiple fields This example shows a spreadsheet for pharmaceutical sales, taxes and totals by month and year. By pivoting the data you can create rows for each month and year and individual columns for sales, taxes and totals so that Tableau can more easily interpret this data for analysis. Watch ""pivot on multiple field"" in action. Use wildcard search to pivot If you work with large data sets or if your data frequently changes over time, starting in Tableau Prep Builder version 2019.1.1 and on the web, you can   use a wildcard search when pivoting columns to rows to instantly pivot your data based on a wildcard pattern match. If new fields are added or removed that match the pattern, Tableau Prep  detects the schema change when the flow is run and the pivot results are automatically updated. Connect to your data source. Drag the table that you want to pivot to the Flow pane. Click the  plus icon, and select Add Pivot from the context menu. In the Pivoted Fields pane, click on the link Use wildcard search to pivot . Enter a value or partial value that you want to search for. For example, enter Sales_ to match fields that are labeled as sales_2017 , sales_2018 and sales_2019 . Do not use asterisks to match the pattern unless they are part of the field value that you are searching for. Instead click the Search Options button to select how you want to match the value. Then press Enter to apply the search and pivot the matching values. (Optional) In the Pivoted Fields pane, click the plus icon to add more columns to pivot on, then repeat the previous step to select more fields to pivot. If you didn't enable the default naming option  or if Tableau Prep  couldn't automatically detect a name, edit the names of the fields. To refresh your pivot data when data changes, run your flow. Any new fields added to your data source that match the wildcard pattern are automatically detected and added to the pivot. If the results aren't what you expect, try one of the following options: Enter a different value pattern in the Search field and press enter. The pivot will automatically refresh and show the new results. Manually drag additional fields  to the Pivot1 Values column in the Pivoted Fields pane. You can also remove fields that were added manually by dragging them off the Pivot1 Values column and dropping them in the Fields pane. Note : Fields that were added from the wildcard search results can't be removed by dragging them off the Pivot1 Values column. Instead try using a more specific pattern to match the search results you are looking for. Pivot  rows to columns In Tableau Prep Builder version 2019.1.1 and later and on the web, pivot rows to columns if your data is too normalized and you need to create new columns - going from tall data to wider data. For example if you have advertising costs for each month that includes all advertising types in one column, if you pivot the data from rows to columns you can then have a separate column for each advertising type instead, making the data easier to analyze. You can select one field to pivot on. The field values for that field are then used to create the new columns. Then, select a field to use to populate the new columns. These field values are aggregated and you can select the type of aggregation to apply. Because aggregation is applied, pivoting columns back to rows won't reverse this pivot action. To reverse a row to column pivot type, you will need to undo the action. Either click the Undo button on the top menu, remove the fields from the Pivoted Fields pane or delete the pivot step. Connect to your data source. Drag the table that you want to pivot to the Flow pane. Click the  plus icon, and select Add Pivot from the context menu. In the Pivoted Fields pane, select Rows to Columns from the drop-down list. (Optional) In the Fields pane, enter a value in the Search field to search the field list for fields to pivot Select a field from the left pane, and drag it to the Field that will pivot rows to columns section in the Pivoted Fields pane. Note : If the field you want to pivot on has a data type of date or datetime, you will need to change the data type to string to pivot it. The values in this field will be used to create and name the new columns. You can change the column names in the Pivot Results pane later. Select a field from the left pane and drag it to the Field to aggregate for new columns section in the Pivoted Fields pane. The values in this field are used to populate the new columns created from the previous step. A default aggregation type is assigned to the field. Click the aggregation type to change it. In the Pivot Results pane, review the results and apply any cleaning operations to the new columns that you created. If the field being pivoted has a change in its row data, right-click or Ctrl-click (MacOS) on the Pivot step in the flow pane and select Refresh . Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.4. Customize fields,"1.4.1. Change default field properties (types, sorting, etc.)",https://help.tableau.com/current/pro/desktop/en-us/datafields_fieldproperties.htm,"Edit Default Settings for Fields Applies to: Tableau Desktop When you drag fields to shelves, the data is represented as marks in the view. The fields and their marks are displayed initially based on their default settings. You can control these default settings by clicking the drop-down arrow on a field. The Default Properties menu includes default settings for aggregation, comments, number formatting, color, shape, and totals (based on the type of field). Set the default aggregation for a measure You can specify a default aggregation for any measure. The default aggregation will be used automatically when the measure is first totaled in the view. Right-click (control-click on a Mac) any measure in the Data pane and select Default Properties > Aggregation . In the Aggregation list, select an aggregation. Whether you are specifying the aggregation for a field on a shelf or the default aggregation in the Data pane, you can select from several aggregations. See Data Aggregation in Tableau to learn about each type of aggregation. Add default comments for specific fields Fields can have comments that describe them. The comments display in a tooltip in the Data pane and in the Calculated fields dialog box. Field comments are a good way to give more context to the data in your data source. Comments are especially useful when you are building a workbook for others to use. To add a default comment for a field Right-click (control-click on a Mac) a field in the Data pane and select Default Properties > Comment . Write a comment in the subsequent dialog box. Comments support rich text formatting that will be represented in the tooltip. When finished, click OK . Now when you hover the cursor over the field in the Data pane, you see the comment. Set the default number format You can set the default number format for date and number fields. For example, you may want to always show the Sales values as currency using the U.S. dollar sign and two decimal places. Or  you may want to always show Discount as a percentage. To set the default formats, right-click (control-click on Mac) a date or number field and select either Date Format or Number Format on the Default Properties menu. A dialog box opens where you can specify a default format. Set the default color When you use a dimension to color encode the view, default colors are assigned to the field’s values. Color encodings are shared across multiple worksheets that use the same data source to help you create consistent displays of your data. For example, if you define the Western region to be green, it will automatically be green in all other views in the workbook. To set the default color encodings for a field, right-click (control-click on Mac) the field in the Data pane and select Default Properties > Color . For information about color properties, and how to configure and customize colors in Tableau, see Color Palettes and Effects , Set the default shape When you use a dimension to shape encode the view, default shapes are assigned to the field’s values. Shape encodings are shared across multiple worksheets that use the same data source to help you create consistent displays of your data. For example, if you define that Furniture products are represented with a square mark, it will automatically be changed to a square mark in all other views in the workbook. To set the default shape encodings for a field, right-click (control-click on Mac) the field in the Data pane and select Default Properties > Shape . Set the default sort order for the values within a categorical field You can set a default sort order for the values within a categorical field so that every time you use the field in the view, the values will be sorted correctly. For example, let’s say you have an Order Priority field that contains the values High, Medium, and Low. When you place these in the view, by default they will be listed as High, Low, Medium because they are shown in alphabetical order. You can set a default sort so that these values are always listed correctly. To set the default sort order, right-click (control-click on a Mac) a dimension and select Default Properties > Sort . Then use the sort dialog box to specify a sort order. Note: The default sort order also controls how the field values are listed in a filter in the view. Other articles in this section Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.4. Customize fields,1.4.2. Rename columns,https://help.tableau.com/current/pro/desktop/en-us/howto_connect.htm,"Edit Data Sources Applies to: Tableau Cloud, Tableau Desktop, Tableau Server To enhance the functionality of your workbook, you can modify the data source it relies on. By editing your data source, you can accomplish various tasks, such as adding tables through a join operation. For a detailed understanding of common editing tasks, you can refer to the following resources: Adding tables to your data with a Join: Learn how to combine multiple tables in your data source to gain comprehensive insights and make more informed analyses. To explore this topic further, click on the following link: Join Your Data Connecting to a Custom SQL Query (Tableau Desktop): Discover how to connect Tableau Desktop to a custom SQL query, enabling you to leverage the power of SQL to extract and manipulate data according to your specific requirements. For more information on this topic, please visit: Connect to a Custom SQL Query Using a Stored Procedure (Tableau Desktop): Gain insights into utilizing stored procedures in Tableau Desktop, empowering you to execute predefined sets of actions or calculations on your data. To delve deeper into this subject, access the following link: Use a Stored Procedure (Tableau Desktop) How to edit the data source On the Data menu, select a data source. Select Edit Data Source . On the data source page, make the changes to the data source. The data table updates with the data from the new data source. Navigate the Data Grid Within the Data Source page, you are provided with options to analyze and visualize your data. One of these options is sorting, which enables you to arrange your data in a structured manner. By sorting columns and rows, you can easily organize and make sense of the information at hand. Sort columns Sorting columns is a simple and efficient way to bring order to your data. Whether you prefer to sort them based on table or data source, the process is straightforward. In the grid, you can sort columns by accessing the Sort fields dropdown list and selecting the desired sorting option. Note: A modified sort state can occur when some tasks cause new columns to be added to the grid. Sort rows To arrange rows in a specific order, simply utilize the sort button. Give it a single click to sort rows in ascending order. For descending order, click the sort button once more. To remove the selection, click the sort button again. Change column names and reset field names In Tableau, it is crucial to have clear and meaningful column names for effective data analysis and visualization. Rename a column To rename a column in Tableau, simply follow these steps: Locate the column whose name you wish to change. Double-click on the current name of the column. Enter the desired new name for the field. Press Enter or click outside the field to save the changes. Reset names If you have made changes to a field name and want to revert back to the original name, Tableau provides a reset option.  Complete the following steps to reset the name. Click on the column dropdown menu. Select the Reset Name . The name will be reset to its original name as specified in the underlying data. Revert Tableau's automatic name changes The Revert command will reset any field names that have been 		 automatically modified by Tableau's naming improvements. For more information, see Understand Field Type Detection and Naming Improvements (Link opens in a new window) . Create calculations Calculations allow you to perform complex data manipulations and get new insights from your existing dataset. Tableau offers three primary types of calculations: Basic expressions Level of Detail (LOD) expressions Table calculations For help on choosing which calculation to use, see Choosing the Right Calculation Type . You can create calculations, groups, or bins based on existing fields in the data source. To start, click the column dropdown arrow and select one of the options. Note: If you create an aggregate calculation, the values displayed in the grid aren’t meaningful until the calculation is used in the context of the view’s level of detail. View extract data When using the Web Data Connector, you can view the extracted data in the grid. This includes extract-only calculations such as MEDIAN. It is important to note that when in Extract mode, the order of rows in the data source may differ from the order of rows in Live mode. Copy values To copy values in the grid, follow these steps. Select the desired values. Right-click on the selected values. Choose Copy from the menu. Examine your metadata Utilize the metadata grid within Tableau to efficiently analyze and modify the organization of your data source. The metadata grid offers a way to assess the columns in your data and their respective data types. You can carry out routine management tasks such as column renaming, hiding, altering data types, and modifying the geographical role of a column. Note: When dealing with multi-dimensional data sources, the specific metadata management tasks may differ. Default metadata view After you have successfully configured your data source, the information will be displayed in the grid. In the case of connecting to a cube (multidimensional) data source, the data will be automatically presented.  The default view can be different for alternative data source types like Salesforce or Tableau data extracts. Review metadata The metadata grid displays the columns from your data source as rows, providing essential information about each column. For every row, you can find details such as the data type of the column, the field name in the Tableau data source, the name of the physical table in the underlying data source, and the remote field name. Manage metadata Depending on the type of data you're connected to, you can perform routine management tasks like hiding multiple columns at once or quickly renaming columns. Change the location of your data source in a workbook As you work with data in your workbook, there may come a time when you need to change the location of your data source. Whether the name or location of the data source has changed, or you want to apply your analysis to a similar data source, this section will walk you through the process of redirecting your workbook to the correct location without losing any of your work. Change the location of a data source Right-click (control-click on a Mac) the data source you wish to edit in the data pane. From the menu, select Edit Connection. In the Edit Connection dialog box, you have two options: Navigate to the new location of the data source by browsing your computer's file system. Select a new data source altogether by clicking on the Browse button and choosing a different file. After you have selected the new location or data source, select OK to save the changes. Replace field references When you establish a successful connection with a new data source, all worksheets in the workbook that were previously using the original data source will now be linked to the new data source. However, if the new data source doesn't have the same field names as the original workbook, the fields will be considered invalid and marked with an exclamation point. To resolve this issue, you can easily replace the references of these fields. For instance, let's say you have a workbook connected to a data source that includes a field called ""Customer Name."" Later, you modify the data source to connect to a new one that contains all the same data, but the field name has been changed to ""Name."" In this case, the ""Customer Name"" field will still appear in the Data pane, but it will be marked as invalid. To make the field valid again, you can replace its references. This means you can map the invalid field to a valid field in the new data source. For example, you can map ""Customer Name"" to ""Name."" Replace field references Right-click (or control-click on a Mac) the invalid field in the data pane. Select Replace References. In the Replace References dialog box, choose a field from the new data source that corresponds to the invalid field. Rename the data source When you establish a connection to a data source in Tableau Desktop, you will be prompted to give it a name. This name is used to identify the data source within Tableau and can be helpful when you have multiple data sources connected to a single workbook. It allows you to keep track of the specific details of each connection. Rename a data source Go to the Data menu. Select Rename. By naming your connections appropriately, you can easily distinguish between different data sources and manage them efficiently. You can also review the properties of a connection by selecting the data source on the Data menu and choosing Properties . Duplicate the data source (Tableau Desktop) Sometimes you’ll want to make changes to a data source such as add more tables, hide and show fields, or set field defaults. When you make these changes it affects all sheets that use the data source. You can duplicate the data source so you can make the changes without affecting the existing sheets. To duplicate a data source in Tableau Desktop, follow these steps: Open your workbook in Tableau Desktop. Go to the Data menu at the top of the screen. Select the data source that you want to duplicate. From the dropdown menu, choose Duplicate. Note: After you duplicate a data source, the name of the duplicate will have ""copy"" appended to it. This ensures that you can differentiate between the original and the duplicate source. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.4. Customize fields,1.4.3. Choose when to convert between discrete and continuous,https://help.tableau.com/current/pro/desktop/en-us/datafields_typesandroles_convertdisctocont.htm,"Convert Fields between Discrete and Continuous Applies to: Tableau Desktop You can convert measures from discrete to continuous or from continuous to discrete. And you can convert date dimensions and other numeric dimensions to be either discrete or continuous. For more information on continuous and discrete fields, see Dimensions and Measures, Blue and Green (Link opens in a new window) . You can also Convert a Measure to a Dimension . Convert measures You can convert measures from discrete to continuous or from continuous to discrete. Click the field and choose Discrete or Continuous . The field is green when it is continuous, and blue when it is discrete. For measures in the Data pane, right-click the field and choose Convert to Discrete or Convert to Continuous . The color of the field changes accordingly. Convert date fields You can convert Date fields between discrete and continuous. Discrete dates act as labels  and continuous dates will have an axis similar to a measure. Click any Date field in the view and choose one of the options on the context menu to change it from discrete to continuous or from continuous to discrete. To convert a Date field in the Data pane (and thus to determine the default result when you drag it into a view), right-click the field and choose Convert to Discrete or Convert to Continuous . Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.4. Customize fields,1.4.4. Choose when to convert between dimension and measure,https://help.tableau.com/current/pro/desktop/en-us/datafields_typesandroles_convertdimtomeas.htm,"Convert a Measure to a Dimension Applies to: Tableau Desktop You can convert a field from a measure to a dimension in the current view. Or, if you want the change to affect all future uses of the field in the workbook, you can convert a field in the Data pane from a measure to a dimension. For more information on dimensions and measures, see Dimensions and Measures, Blue and Green (Link opens in a new window) . You can also Convert Fields between Discrete and Continuous . Convert a measure in the view into a discrete dimension You can drag a measure field from  the Data pane but then use it as a dimension in the view. For example, suppose you want to know the aggregated sales totals for each possible discount rate. The view you are aiming for looks like this: The Discount field contains numeric data, so when you connect to the data source, Tableau assigns it to the Measures area in the Data pane. In the Sample - Superstore data source, which is included with Tableau Desktop, the values for Discount range from 0% to 80%. Here are the steps to create the view shown above: Drag Sales to Rows and Discount to Columns . Tableau shows you a scatter plot—this is the default chart type  when you put one measure on Rows and another on Columns . Tableau aggregates Discount as AVG, and Sales as SUM. The fields are both continuous, so along the bottom and left side of the view Tableau displays axes (and not column or row headers). To treat Discount as a dimension, click the drop-down arrow on the field (on the Columns shelf) and select Dimension from the context menu. Tableau no longer aggregates the values for Discount , so what you see now is a line. But the values for Discount are still continuous, so Tableau still shows  continuous axes for both fields: To complete the process, click the drop-down arrow on the Discount again and select Discrete from the context menu. The transformation of Discount is now complete. You now see the bar chart as in the initial image at the beginning of this topic. Across the bottom, you now see column headers (0%, 10%, 20%, etc.) instead of an axis. Let's review how we got to this point: Action Result Convert Discount from a measure to a dimension... Sales values are no longer aggregated according to discount rate, resulting in a line chart instead of a scatter plot. Convert Discount from continuous to discrete... Tableau shows headers at the bottom of the view, instead of a continuous axis. The only thing left to do is to drag Sales to Label and then format the labels for readability. The resulting chart is somewhat useful because there are  only 12 unique values for Discount in the data source. Had there been a unique value for each row, which would not have been unusual for a numeric field, the number of individual bars in the resulting view would have been equal to the number of rows in the data source, which would probably not result in a useful visualization. Converting a measure in the Data pane into a dimension When you first connect to a data source, Tableau assigns most fields that contain quantitative, numerical information (that is, fields where the values are numbers) as measure fields in the Data pane.  The exception is for fields where the name suggests the data type, such as  Year or Month (which Tableau would identify as Date dimensions) or fields containing words like “ID” and “Key,” which Tableau would categorize as dimensions, even when they are numeric. However, you might decide that some of these fields that Tableau has categorized as measures should actually be dimensions. Postal codes are a classic example—they often consist entirely of numbers, but the information is categorical and not continuous—you would never want to aggregate postal codes by adding or averaging them. Similarly, a field containing individuals' ages may be categorized as a measure by default in Tableau because it contains numeric data. In some cases you may want to add or average ages, but you might also want to look at each individual age as a bin or category, in which case you want Tableau to create headers for this field rather than an axis. If this is how you want to use age in your view, you can convert the  field to a dimension. To convert a measure to a dimension in the Data pane, do either of the following. Click and drag the field from a measures area in the Data pane and drop it into a dimensions area (above the line). Right-click (control-click on a Mac) the measure in the Data pane and select Convert to Dimension . If you place a field that you converted from a measure to a dimension on a shelf, it now produces headers instead of an axis. Back to top Thanks for your feedback!"
Domain 1: Connect to and Transform Data,1.4. Customize fields,1.4.5. Create aliases,https://help.tableau.com/current/pro/desktop/en-us/datafields_fieldproperties_aliases_ex1editing.htm,"Create Aliases to Rename Members in the View Applies to: Tableau Cloud, Tableau Desktop, Tableau Server You can create aliases (alternate names) for members in a dimension so that their labels appear differently in the view. Aliases can be created for the members of discrete dimensions only. They cannot be created for continuous dimensions, dates, or measures. Create an alias In the Data pane, right-click a dimension  and select Aliases . Tip : If Aliases does not appear in the dialog, verify that you are not connected to a published data source and the field you are trying to alias is a discrete dimension. In the Edit Aliases dialog box, under Value (Alias) , select a member and enter a new name. Tip : To reset the member names back to their original names, click Clear Aliases . To save your changes: In Tableau Desktop, click OK . On Tableau Server or Tableau Cloud, click the X icon in the top-right corner of the dialog box. When you add the field to the view, the alias names appear as labels in the view. For example, When the Alias option is not available Measures can't be re-aliased Tableau does not permit re-aliasing measures as this would involve modifying data values themselves.  If you have a field in your data that contains values such as 0 and 1 but actually encodes information such as no and yes , Tableau will interpret this as a  continuous measure. You can convert it to a discrete dimension and then re-alias the values. For more information about discrete vs continuous and dimensions vs measures, see: Dimensions and Measures, Blue and Green Convert a Measure to a Dimension Convert Fields between Discrete and Continuous Published data sources Alternatively, the Alias option may be missing for a discrete dimension because you are connected to a published data source. When using a published data source, you cannot create or edit aliases. You can only change aliases on fields that you create in your workbook. If you didn’t publish the data source, you can duplicate the field (right click > Duplicate ) and edit aliases for the duplicate field without restriction. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,"2.1.1. Write date calculations (DATEPARSE, DATENAME…)",https://help.tableau.com/current/pro/desktop/en-us/functions_functions_date.htm,"Date Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server Dates are a common element in many data sources. If a field contains recognizable dates, it will have a date or date time data type. When date fields are used in the viz they get a special set of functionality, including an automatic date hierarchy drill down, date-specific filter options, and specialized date formatting options. Using dates in calculations often requires the use of date-specific functions. Gain familiarity with other date concepts Date functions sometimes reference date-specific elements, including the date_part argument, the optional [start_of_week] parameter, and date literals (#). These are covered in more detail at the end of this topic. There are several other topics that might be of interest but aren't part of date functions: Format how a date is displayed in a viz: Custom Date Formats Set default date properties: Date Properties for a Data Source Work with fiscal dates: Fiscal Dates Use the ISO-8601 calendar: ISO-8601 Week-Based Calendar Tip : Is your field is already recognized as a date (it has a date icon in the Data pane) and you're trying to control how it appears in the viz? You might need to format it rather than use a date function. See Custom Date Formats and related topics for working with date fields. The date functions on this page allow you to manipulate dates calculated fields, not set their display formatting. Date functions available in Tableau DATE Type conversion function that changes string and number expressions into dates, as long as they are in a recognizable format. Syntax DATE(expression) Output Date Definition Returns a date given a number, string, or date <expression> . Example DATE([Employee Start Date]) DATE(""September 22, 2018"") DATE(""9/22/2018"") DATE(#2018-09-22 14:52#) Notes Unlike DATEPARSE , there is no need to provide a pattern as DATE automatically recognizes many standard date formats. If DATE does not recognize the input, however, try using DATEPARSE and specifying the format. MAKEDATE is another similar function, but MAKEDATE requires the input of numeric values for year, month, and day. DATEADD Adds a specified number of date parts (months, days, etc) to the starting date. Syntax DATEADD(date_part, interval, date) Output Date Definition Returns the <date> with the specified number <interval> added to the specified <date_part> of that date. For example, adding three months or 12 days to a starting date. Example Push out all due dates by one week DATEADD('week', 1, [due date]) Add 280 days to the date February 20, 2021 DATEADD('day', 280, #2/20/21#) = #November 27, 2021# Notes Supports ISO 8601 dates. DATEDIFF Returns the number of date parts (weeks, years, etc) between two dates. Syntax DATEDIFF(date_part, date1, date2, [start_of_week]) Output Integer Definition Returns the difference between <date1> and <date2n> expressed in units of <date_part> . For example, subtracting the dates someone entered and left a band to see how long they were in the band. Example Number of days between March 25, 1986 and February 20, 2021 DATEDIFF('day', #3/25/1986#, #2/20/2021#) = 12,751 How many months someone was in a band DATEDIFF('month', [date joined band], [date left band]) Notes Supports ISO 8601 dates. DATENAME Returns the name of the specified date part as a discrete string. Syntax DATENAME(date_part, date, [start_of_week]) Output String Definition Returns <date_part> of <date> as a string. Example DATENAME('year', #3/25/1986#) = ""1986"" DATENAME('month', #1986-03-25#) = ""March"" Notes Supports ISO 8601 dates. A very similar calculation is DATEPART , which returns the value of the specified date part as a continuous integer. DATEPART can be faster because it is a numerical operation. By changing the attributes of the calculation’s result (dimension or measure, continuous or discrete) and the date formatting, the results of DATEPART and DATENAME can be formatted to be identical. An inverse function is DATEPARSE , which takes a string value and formats it as a date. DATEPARSE Returns specifically formatted strings as dates. Syntax DATEPARSE(date_format, date_string) Output Date Definition The <date_format> argument describes how the <date_string> field is arranged. Because of the variety of ways the string field can be ordered, the <date_format> must match exactly. For a full explanation, see Convert a Field to a Date Field (Link opens in a new window) . Example DATEPARSE('yyyy-MM-dd', ""1986-03-25"") = #March 25, 1986# Notes DATE is a similar function that automatically recognizes many standard date formats. DATEPARSE may be a better option if DATE does not recognize the input pattern. MAKEDATE is another similar function, but MAKEDATE requires the input of numeric values for year, month, and day. Inverse functions, which take dates apart and return the value of their parts, are DATEPART (integer output) and DATENAME (string output). Database limitations DATEPARSE is available through the following connectors: non-legacy Excel and text file connections, Amazon EMR Hadoop Hive, Cloudera Hadoop, Google Sheets, Hortonworks Hadoop Hive, MapR Hadoop Hive, MySQL, Oracle, PostgreSQL, and Tableau extracts. Some formats may not be available for all connections. DATEPARSE is not supported on Hive variants. Only Denodo, Drill, and Snowflake are supported. DATEPART Returns the name of the specified date part as an integer. Syntax DATEPART(date_part, date, [start_of_week]) Output Integer Definition Returns <date_part> of <date> as an integer. Example DATEPART('year', #1986-03-25#) = 1986 DATEPART('month', #1986-03-25#) = 3 Notes Supports ISO 8601 dates. A very similar calculation is DATENAME , which returns the name of the specified date part as a discrete string. DATEPART can be faster because it is a numerical operation. By changing the attributes of the field (dimension or measure, continuous or discrete) and the date formatting, the results of DATEPART and DATENAME can be formatted to be identical. An inverse function is DATEPARSE , which takes a string value and formats it as a date. DATETRUNC This function can be thought of as date rounding. It takes a specific date and returns a version of that date at the desired specificity. Because every date must have a value for day, month, quarter, and year, DATETRUNC sets the values as the lowest value for each date part up to the date part specified. Refer to the example for more information. Syntax DATETRUNC(date_part, date, [start_of_week]) Output Date Definition Truncates the <date> to the accuracy specified by the <date_part> . This function returns a new date. For example, when you truncate a date that is in the middle of the month at the month level, this function returns the first day of the month. Example DATETRUNC('day', #9/22/2018#) = #9/22/2018# DATETRUNC('iso-week', #9/22/2018#) = #9/17/2018# (the monday of the week containing 9/22/2018) DATETRUNC(quarter, #9/22/2018#) = #7/1/2018# (the first day of the quarter containing 9/22/2018) Note: For week and iso-week, the start_of_week comes into play. ISO-weeks always start on Monday. For the locale of this example, an unspecified start_of_week means the week starts on Sunday. Notes Supports ISO 8601 dates. You shouldn't use DATETRUNC to, for example, stop showing the time for a datetime field in a viz.  If you want to truncate the display of a date rather than round its accuracy, adjust the formatting (Link opens in a new window) . For example, DATETRUNC('day', #5/17/2022 3:12:48 PM#) ,  if formatted in the viz to display seconds, would display as 5/17/2022 12:00:00 AM . DAY Returns the day of the month (1-31) as an integer. Syntax DAY(date) Output Integer Definition Returns the day of the given <date> as an integer. Example Day(#September 22, 2018#) = 22 Notes See also WEEK , MONTH , QUARTER , YEAR , and the ISO equivalents. ISDATE Checks if the string is a valid date format. Syntax ISDATE(string) Output Boolean Definition Returns true if a given <string> is a valid date. Example ISDATE(09/22/2018) = true ISDATE(22SEP18) = false Notes The required argument must be a string. ISDATE cannot be used for a field with a date data type—the calculation will return an error. ISOQUARTER Syntax ISOQUARTER(date) Output Integer Definition Returns the ISO8601 week-based quarter of a given <date> as an integer. Example ISOQUARTER(#1986-03-25#) = 1 Notes See also ISOWEEK , ISOWEEKDAY , ISOYEAR , and the non-ISO equivalents. ISOWEEK Syntax ISOWEEK(date) Output Integer Definition Returns the ISO8601 week-based week of a given <date> as an integer. Example ISOWEEK(#1986-03-25#) = 13 Notes See also ISOWEEKDAY , ISOQUARTER , ISOYEAR , and the non-ISO equivalents. ISOWEEKDAY Syntax ISOWEEKDAY(date) Output Integer Definition Returns the ISO8601 week-based weekday of a given <date> as an integer. Example ISOWEEKDAY(#1986-03-25#) = 2 Notes See also ISOWEEK , ISOQUARTER , ISOYEAR , and the non-ISO equivalents. ISOYEAR Syntax ISOYEAR(date) Output Integer Definition Returns the ISO8601 week-based year of a given <date> as an integer. Example ISOYEAR(#1986-03-25#) = 1,986 Notes See also ISOWEEK , ISOWEEKDAY , ISOQUARTER , and the non-ISO equivalents. MAKEDATE Syntax MAKEDATE(year, month, day) Output Date Definition Returns a date value constructed from the specified <year> , <monthg> , and <day> . Example MAKEDATE(1986,3,25) = #1986-03-25# Notes Note : Incorrectly entered values will be adjusted into a date, such as MAKEDATE(2020,4,31) = May 1, 2020 rather than returning an error that there is no 31st day of April. Available for Tableau Data Extracts. Check for availability in other data sources. MAKEDATE requires numerical inputs for the parts of a date. If your data is a string that should be a date, try the DATE function. DATE automatically recognizes many standard date formats. If DATE does not recognize the input try using DATEPARSE . MAKEDATETIME Syntax MAKEDATETIME(date, time) Output Datetime Definition Returns a datetime that combines a <date> and a <time> . The date can be a date, datetime, or a string type. The time must be a datetime. Example MAKEDATETIME(""1899-12-30"", #07:59:00#) = #12/30/1899 7:59:00 AM# MAKEDATETIME([Date], [Time]) = #1/1/2001 6:00:00 AM# Notes This function is available only for MySQL-compatible connections (which for Tableau are MySQL and Amazon Aurora). MAKETIME is a similar function available for Tableau Data Extracts and some other data sources. MAKETIME Syntax MAKETIME(hour, minute, second) Output Datetime Definition Returns a date value constructed from the specified <hour> , <minute> , and <second> . Example MAKETIME(14, 52, 40) = #1/1/1899 14:52:40# Notes Because Tableau does not support a time data type, only datetime, the output is a datetime. The date portion of the field will be 1/1/1899. Similar function to MAKEDATETIME , which is only available for MYSQL-compatible connections. MAX Syntax MAX(expression) or MAX(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MAX can also be applied to a single field as an aggregation. Example MAX(4,7) = 7 MAX(#3/25/1986#, #2/20/2021#) = #2/20/2021# MAX([Name]) = ""Zander"" Notes For strings MAX is usually the value that comes last in alphabetical order. For database data sources, the MAX string value is highest in the sort sequence defined by the database for that column. For dates For dates, the MAX is the most recent date. If MAX is an aggregation, the result will not have a date hierarchy. If MAX is a comparison, the result will retain the date hierarchy. As an aggregation MAX(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MAX(expr1, expr2) compares the two values and returns a row-level value. See also MIN . MIN Syntax MIN(expression) or MIN(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MIN can also be applied to a single field as an aggregation. Example MIN(4,7) = 4 MIN(#3/25/1986#, #2/20/2021#) = #3/25/1986# MIN([Name]) = ""Abebi"" Notes For strings MIN is usually the value that comes first in alphabetical order. For database data sources, the MIN string value is lowest in the sort sequence defined by the database for that column. For dates For dates, the MIN is the earliest date. If MIN is an aggregation, the result will not have a date hierarchy. If MIN is a comparison, the result will retain the date hierarchy. As an aggregation MIN(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MIN(expr1, expr2) compares the two values and returns a row-level value. See also MAX . MONTH Syntax MONTH(date) Output Integer Definition Returns the month of the given <date> as an integer. Example MONTH(#1986-03-25#) = 3 Notes See also DAY , WEEK , QUARTER , YEAR , and the ISO equivalents NOW Syntax NOW() Output Datetime Definition Returns the current local system date and time. Example NOW() = 1986-03-25 1:08:21 PM Notes NOW does not take an argument. See also TODAY , a similar calculation that returns a date instead of a datetime. If the data source is a live connection, the system date and time could be in another timezone. For more information on how to address this, see the Knowledge Base . QUARTER Syntax QUARTER(date) Output Integer Definition Returns the quarter of the given <date> as an integer. Example QUARTER(#1986-03-25#) = 1 Notes See also DAY , WEEK , MONTH , YEAR , and the ISO equivalents TODAY Syntax TODAY() Output Date Definition Returns the current local system date. Example TODAY() = 1986-03-25 Notes TODAY does not take an argument. See also NOW , a similar calculation that returns a datetime instead of a date. If the data source is a live connection, the system date could be in another timezone. For more information on how to address this, see the Knowledge Base . WEEK Syntax WEEK(date) Output Integer Definition Returns the week of the given <date> as an integer. Example WEEK(#1986-03-25#) = 13 Notes See also DAY , MONTH , QUARTER , YEAR , and the ISO equivalents YEAR Syntax YEAR(date) Output Integer Definition Returns the year of the given <date> as an integer. Example YEAR(#1986-03-25#) = 1,986 Notes See also DAY , WEEK , MONTH , QUARTER , and the ISO equivalents The date_part argument Many date functions in Tableau take the argument date_part , which is a string constant that tells the function what part of a date to consider, such as day, week, quarter, etc.The valid date_part values that you can use are: date_part Values 'year' Four-digit year 'quarter' 1-4 'month' 1-12 or ""January"", ""February"", and so on 'dayofyear' Day of the year; Jan 1 is 1, Feb 1 is 32, and so on 'day' 1-31 'weekday' 1-7 or ""Sunday"", ""Monday"", and so on 'week' 1-52 'hour' 0-23 'minute' 0-59 'second' 0-60 'iso-year' Four-digit ISO 8601 year 'iso-quarter' 1-4 'iso-week' 1-52, start of week is always Monday 'iso-weekday' 1-7, start of week is always Monday The [start_of_week] parameter Some functions have the optional parameter [start_of_week] . The start_of_week parameter can be used to specify what day is considered the first day of the week, such as ""Sunday"" or ""Monday"".  If it is omitted, the start of week is determined by the data source. See Date Properties for a Data Source . For the examples below, 22 September is a Sunday and 24 September is a Tuesday.  The DATEDIFF function is being used to calculate the weeks between these dates. DATEDIFF('week', #2013-09-22#, #2013-09-24#, 'monday') = 1 Because start_of_week is 'monday', these dates are in different weeks. DATEDIFF('week', #2013-09-22#, #2013-09-24#, 'sunday') = 0 Because start_of_week is 'sunday', these dates are in the same week. The date literal (#) Examples often use the pound symbol (#) with date expressions. This is the date literal, similar to using quotes for text strings, and it tells Tableau that the value inside the symbols is a date. Without the date literals, dates may be interpreted as various other data types. For example: Format Data Type Value 'March 25, 1986' String 'March 25, 1986' #3/25/1986# Date #3/25/1986# 03/25/1986 Floating decimal 0.00006042 1986-03-25 Integer 1,958 March 25, 1986 invalid For more information, see Literal expression syntax Create a date calculation Practice creating a date calculation using the Superstore sample data source. In Tableau Desktop, connect to the Sample-Superstore saved data source, which comes with Tableau. Open a worksheet. From the Data pane, under Dimensions, drag Order Date to the Rows shelf. On the Rows shelf, click the plus icon ( + ) on the YEAR(Order Date) field. QUARTER(Order Date) is added to the Rows shelf and the view updates. On the Rows shelf, click the plus icon ( + ) on the QUARTER(Order Date) field to drill down to MONTH(Order Date). Select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field, Quarter Date. Enter the following formula: DATETRUNC('quarter', [Order Date]) When finished, click OK . The new date calculated field appears under Dimensions in the Data pane. Just like your other fields, you can use it in one or more visualizations. From the Data pane, under Dimensions, drag Quarter Date to the Rows shelf and place it to the right of MONTH(Order Date).                  The visualization updates with year values. This is because Tableau rolls date data up to the highest level of detail. On the Rows shelf, right-click YEAR(Quarter Date) and select Exact Date . On the Rows shelf, right-click YEAR(Quarter Date) again and select Discrete . The visualization updates with the exact quarter date for each row in the table. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,2.1.2. Write string functions,https://help.tableau.com/current/pro/desktop/en-us/functions_functions_string.htm,"String Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces string functions and their uses in Tableau. It also demonstrates how to create a string calculation using an example. Why use string functions String functions allow you to manipulate string data (i.e. data made of text). Tableau uses the current International Components for Unicode (ICU) library when comparing strings. The way strings are sorted and compared is based both on language and locale, and it’s possible for vizzes to change as the ICU is continuously updated for better language support. For example, you might have a field that contains all of your customers' first and last names. One member might be: Jane Johnson. You can pull the last names from all your customers into a new field using a string function. The calculation might look something like this: SPLIT([Customer Name], ' ', 2) Therefore, SPLIT('Jane Johnson' , ' ', 2) = 'Johnson'. String functions available in Tableau ASCII Syntax ASCII(string) Output Number Definition Returns the ASCII code for the first character of a <string> . Example ASCII('A') = 65 Notes This is the inverse of the CHAR function. CHAR Syntax CHAR(number) Output String Definition Returns the character encoded by the ASCII code <number> . Example CHAR(65) = 'A' Notes This is the inverse of the ASCII function. CONTAINS Syntax CONTAINS(string, substring) Output Boolean Definition Returns true if the given string contains the specified substring. Example CONTAINS(""Calculation"", ""alcu"") = true Notes See also the logical function (Link opens in a new window) IN as well as supported RegEx in the additional functions documentation (Link opens in a new window) . ENDSWITH Syntax ENDSWITH(string, substring) Output Boolean Definition Returns true if the given string ends with the specified substring. Trailing white spaces are ignored. Example ENDSWITH(""Tableau"", ""leau"") = true Notes See also the supported RegEx in the additional functions documentation (Link opens in a new window) . FIND Syntax FIND(string, substring, [start]) Output Number Definition Returns the index position of substring in string, or 0 if the substring isn't found. The first character in the string is position 1. If the optional numeric argument start is added, the function ignores any instances of substring that appear before the  starting position. Example FIND(""Calculation"", ""alcu"") = 2 FIND(""Calculation"", ""Computer"") = 0 FIND(""Calculation"", ""a"", 3) = 7 FIND(""Calculation"", ""a"", 2) = 2 FIND(""Calculation"", ""a"", 8) = 0 Notes See also the supported RegEx in the additional functions documentation (Link opens in a new window) . FINDNTH Syntax FINDNTH(string, substring, occurrence) Output Number Definition Returns the position of the nth occurrence of substring within the specified string, where n is defined by the occurrence argument. Example FINDNTH(""Calculation"", ""a"", 2) = 7 Notes FINDNTH is not available for all data sources. See also the supported RegEx in the additional functions documentation (Link opens in a new window) . LEFT Syntax LEFT(string, number) Output String Definition Returns the left-most <number> of characters in the string. Example LEFT(""Matador"", 4) = ""Mata"" Notes See also MID and RIGHT . LEN Syntax LEN(string) Output Number Definition Returns the length of the string. Example LEN(""Matador"") = 7 Notes Not to be confused with the spatial function (Link opens in a new window) LENGTH . LOWER Syntax LOWER(string) Output String Definition Returns the provided <string> in all lowercase characters. Example LOWER(""ProductVersion"") = ""productversion"" Notes See also UPPER and PROPER . LTRIM Syntax LTRIM(string) Output String Definition Returns the provided <string> with any leading spaces removed. Example LTRIM("" Matador "") = ""Matador "" Notes See also RTRIM . MAX Syntax MAX(expression) or MAX(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MAX can also be applied to a single field as an aggregation. Example MAX(4,7) = 7 MAX(#3/25/1986#, #2/20/2021#) = #2/20/2021# MAX([Name]) = ""Zander"" Notes For strings MAX is usually the value that comes last in alphabetical order. For database data sources, the MAX string value is highest in the sort sequence defined by the database for that column. For dates For dates, the MAX is the most recent date. If MAX is an aggregation, the result will not have a date hierarchy. If MAX is a comparison, the result will retain the date hierarchy. As an aggregation MAX(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MAX(expr1, expr2) compares the two values and returns a row-level value. See also MIN . MID Syntax (MID(string, start, [length]) Output String Definition Returns a string starting at the specified start position. The first character in the string is position 1. If the optional numeric argument length is added, the returned string includes only that number of characters. Example MID(""Calculation"", 2) = ""alculation"" MID(""Calculation"", 2, 5) =""alcul"" Notes See also the supported RegEx in the additional functions documentation (Link opens in a new window) . MIN Syntax MIN(expression) or MIN(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MIN can also be applied to a single field as an aggregation. Example MIN(4,7) = 4 MIN(#3/25/1986#, #2/20/2021#) = #3/25/1986# MIN([Name]) = ""Abebi"" Notes For strings MIN is usually the value that comes first in alphabetical order. For database data sources, the MIN string value is lowest in the sort sequence defined by the database for that column. For dates For dates, the MIN is the earliest date. If MIN is an aggregation, the result will not have a date hierarchy. If MIN is a comparison, the result will retain the date hierarchy. As an aggregation MIN(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MIN(expr1, expr2) compares the two values and returns a row-level value. See also MAX . PROPER Syntax PROPER(string) Output String Definition Returns the provided <string> with the first letter of each word is capitalized and the remaining letters are in lowercase. Example PROPER(""PRODUCT name"") = ""Product Name"" PROPER(""darcy-mae"") = ""Darcy-Mae"" Notes Spaces and non-alphanumeric characters such as punctuation are treated as separators. See also LOWER and UPPER . Database limitations PROPER is only available for some flat files and in extracts. If you need to use PROPER in a data source that doesn't otherwise support it, consider using an extract. REPLACE Syntax REPLACE(string, substring, replacement Output String Definition Searches <string> for <substring> and replaces it with <replacement> . If <substring> is not found, the string is not changed. Example REPLACE(""Version 3.8"", ""3.8"", ""4x"") = ""Version 4x"" Notes See also REGEXP_REPLACE in the additional functions documentation (Link opens in a new window) . RIGHT Syntax RIGHT(string, number) Output String Definition Returns the right-most <number> of characters in the string. Example RIGHT(""Calculation"", 4) = ""tion"" Notes See also LEFT and MID . RTRIM Syntax RTRIM(string) Output String Definition Returns the provided <string> with any trailing spaces removed. Example RTRIM("" Calculation "") = "" Calculation"" Notes See also LTRIM and TRIM . SPACE Syntax SPACE(number) Output String (specifically, just spaces) Definition Returns a string that is composed of the specified number of repeated spaces. Example SPACE(2) = ""  "" SPLIT Syntax SPLIT(string, delimiter, token number) Output String Definition Returns a substring from a string, using a delimiter character to divide the string into a sequence of tokens. Example SPLIT (""a-b-c-d"", ""-"", 2) = ""b"" SPLIT (""a|b|c|d"", ""|"", -2) = ""c"" Notes The string is interpreted as an alternating sequence of delimiters and tokens. So for the string abc-defgh-i-jkl , where the delimiter character is ' - ', the tokens are (1) abc , (2) defgh , (3) i , and (4) jlk . SPLIT returns the token corresponding to the token number. When the token number is positive, tokens are counted starting from the left end of the string; when the token number is negative, tokens are counted starting from the right. See also supported REGEX in the additional functions documentation (Link opens in a new window) . Database limitations The split and custom split commands are available for the following data sources types: Tableau data extracts, Microsoft Excel, Text File, PDF File, Salesforce, OData, Microsoft Azure Market Place, Google Analytics, Vertica, Oracle, MySQL, PostgreSQL, Teradata, Amazon Redshift, Aster Data, Google Big Query, Cloudera Hadoop Hive, Hortonworks Hive, and Microsoft SQL Server. Some data sources impose limits on splitting strings. See SPLIT function limitations later in this topic. STARTSWITH Syntax STARTSWITH(string, substring) Output Boolean Definition Returns true if string starts with substring . Leading white spaces are ignored. Example STARTSWITH(""Matador, ""Ma"") = TRUE Notes See also CONTAINS , as well as supported REGEX in the additional functions documentation (Link opens in a new window) . TRIM Syntax TRIM(string) Output String Definition Returns the provided <string> with leading and trailing spaces removed. Example TRIM("" Calculation "") = ""Calculation"" Notes See also LTRIM and RTRIM . UPPER Syntax UPPER(string) Output String Definition Returns the provided <string> in all uppercase characters. Example UPPER(""Calculation"") = ""CALCULATION"" Notes See also PROPER and LOWER . Create a string calculation Follow along with the steps below to learn how to create a string calculation. In Tableau Desktop, connect to the Sample - Superstore saved data source, which comes with Tableau. Navigate to a worksheet. From the Data pane, under Dimensions, drag Order ID to the Rows shelf. Notice that every order ID contains values for country (CA and US, for example), year (2011), and order number (100006). For this example, you will create a calculation to pull only the order number from the field. Select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field Order ID Numbers . Enter the following formula: RIGHT([Order ID], 6) This formula takes the specified digits (6) from the right of the string and pulls them into a new field. Therefore, RIGHT('CA-2011-100006' , 6) = '100006'. When finished, click OK . The new calculated field appears under Dimensions in the Data pane. Just like your other fields, you can use it in one or more visualizations. From the Data pane, drag Order ID Numbers to the Rows shelf. Place it to the right of Order ID. Notice how the fields differ now. SPLIT limitations by data source Some data sources impose limits on splitting string. The following table shows which data sources support negative token numbers (splitting from the right) and whether there is a limit on the number of splits allow per data source. A SPLIT function that specifies a negative token number and would be legal with other data sources will return the error with these data sources: ""Splitting from right is not supported by the data source."" Data Source Left/Right Constraints Maximum Number of Splits Version limitations Tableau Data Extract Both Infinite Microsoft Excel Both Infinite Text file Both Infinite Salesforce Both Infinite OData Both Infinite Google Analytics Both Infinite Tableau Data Server Both Infinite Supported in version 9.0. Vertica Left only 10 Oracle Left only 10 MySQL Both 10 PostgreSQL Left only prior to version 9.0; both for version 9.0 and above 10 Teradata Left only 10 Version 14 and later Amazon Redshift Left only 10 Aster Database Left only 10 Google BigQuery Left only 10 Hortonworks Hadoop Hive Left only 10 Cloudera Hadoop Left only 10 Impala supported starting in version 2.3.0. Microsoft SQL Server Both 10 2008 and later See Also Functions in Tableau Tableau Functions (Alphabetical) Tableau Functions (by Category) Formatting Calculations in Tableau Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,"2.1.3. Write logical and Boolean expressions (If, case, nested, etc.)",https://help.tableau.com/current/pro/desktop/en-us/functions_functions_logical.htm,"Logical Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Server This article introduces logical functions and their uses in Tableau. It also demonstrates how to create a logical calculation using an example. Why use logical calculations Logical calculations allow you to determine if a certain condition is true or false (Boolean logic). For example, you might want to categorize values based on certain cutoffs. A logical calculation might look something like this: IF [Profit] > 0 THEN 'Profitable' ELSEIF [Profit] = 0 THEN 'Break even' ELSE 'Loss' END Logical functions and operators available in Tableau AND Syntax <expr1> AND <expr2> Definition Performs a logical conjunction on two expressions. (If both sides are true, the logical test returns true.) Output Boolean (true or false) Example IF [Season] = ""Spring"" AND ""[Season] = ""Fall"" THEN ""It's the apocalypse and footwear doesn't matter"" END ""If both (Season = Spring) and (Season = Fall) are true simultaneously, then return It's the apocalypse and footwear doesn't matter."" Notes Often used with IF and IIF . See also NOT and OR . If both expressions are TRUE (that is, not FALSE or NULL ), then the result is TRUE . If either expression is NULL , then the result is NULL . In all other cases, the result is FALSE . If you create a calculation in which the result of an AND comparison is displayed on a worksheet, Tableau displays TRUE and FALSE . If you would like to change this, use the Format area in the format dialog. Note : The AND operator employs short circuit evaluation . This means that if the first expression is evaluated to be FALSE , then the second expression is not evaluated at all. This can be helpful if the second expression results in an error when the first expression is FALSE , because the second expression in this case is never evaluated. CASE Syntax CASE <expression> WHEN <value1> THEN <then1> WHEN <value2> THEN <then2> ... [ELSE <default>] END Output Depends on data type of the <then> values. Definition Evaluates the expression and compares it to the specified options ( <value1> , <value2> , etc.). When a value that matches expression is encountered, CASE returns the corresponding return . If no match is found, the (optional) default is returned. If there is no default and no values match, then Null is returned. Example CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END ""Look at the Season field. If the value is Summer, then return Sandals. If the value is Winter, then return Boots. If none of the options in the calculation match what is in the Season field, return a Sneakers."" Notes See also IF and IIF . Used with WHEN , THEN , ELSE , and END . Tip : Many times you can use a group to get the same results as a complicated CASE function, or use CASE to replace native grouping functionality, such as in the previous example. You may want to test which is more performant for your scenario. ELSE Syntax CASE <expression> WHEN <value1> THEN <then1> WHEN <value2> THEN <then2> ... [ ELSE <default>] END Definition An optional piece of an IF or CASE expression used to specify a default value to return if none of the tested expressions are true. Example IF [Season] = ""Summer"" THEN 'Sandals' ELSEIF [Season] = ""Winter"" THEN 'Boots' ELSE 'Sneakers' END CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END Notes Used with CASE , WHEN , IF , ELSEIF , THEN ,  and END ELSE is optional with CASE and IF . In a calculation where ELSE is not specified, if none of the <test> are true, the overall calculation will return null. ELSE does not require a condition (such as [Season] = ""Winter"" ) and can be thought of as a form of null handling. ELSEIF Syntax [ ELSEIF <test2> THEN <then2>] Definition An optional piece of an IF expression used to specify additional conditions beyond the initial IF. Example IF [Season] = ""Summer"" THEN 'Sandals' ELSEIF [Season] = ""Winter"" THEN 'Boots' ELSEIF [Season] = ""Spring"" THEN 'Sneakers' ELSEIF [Season] = ""Autumn"" THEN 'Sneakers' ELSE 'Bare feet' END Notes Used with IF , THEN , ELSE , and END ELSEIF can be thought of as additional IF clauses. ELSEIF is optional and can be repeated multiple times. Unlike ELSE , ELSEIF requires a condition (such as [Season] = ""Winter"" ). END Definition Used to close an IF or CASE expression. Example IF [Season] = ""Summer"" THEN 'Sandals' ELSEIF [Season] = ""Winter"" THEN 'Boots' ELSE 'Sneakers' END ""If Season = Summer, then return Sandals. If not, look at the next expression. If Season = Winter, then return Boots. If neither of the expressions are true, return Sneakers."" CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END ""Look at the Season field. If the value is Summer, then return Sandals. If the value is Winter, then return Boots. If none of the options in the calculation match what is in the Season field, return a Sneakers."" Notes Used with CASE , WHEN , IF , ELSEIF , THEN , and ELSE . IF Syntax IF <test1> THEN <then1> [ELSEIF <test2> THEN <then2>...] [ELSE <default>] END Output Depends on data type of the <then> values. Definition Tests a series of expressions  and returns the <then> value for the first true <test> . Example IF [Season] = ""Summer"" THEN 'Sandals' ELSEIF [Season] = ""Winter"" THEN 'Boots' ELSE 'Sneakers' END ""If Season = Summer, then return Sandals. If not, look at the next expression. If Season = Winter, then return Boots. If neither of the expressions are true, return Sneakers."" Notes See also IF and IIF . Used with ELSEIF , THEN , ELSE , and END IFNULL Syntax IFNULL(expr1, expr2) Output Depends on the data type of the <expr> values. Definition Returns <expr1> if it's non-null, otherwise returns <expr2> . Example IFNULL([Assigned Room], ""TBD"") ""If the Assigned Room field isn't null, return its value. If the Assigned room field is null, return TBD instead."" Notes Compare with ISNULL . IFNULL always returns a value. ISNULL returns a boolean (true or false). See also ZN . IIF Syntax IIF (<test>, <then>, <else>, [<unknown>]) Output Depends on the data type of the values in the expression. Definition Checks whether a condition is met ( <test> ), and returns <then> if the test is true, <else> if the test is false, and an optional  value for <unknown> if the test is null. If the optional unknown isn't specified, IIF returns null. Example IIF([Season] = 'Summer', 'Sandals', 'Other footwear') ""If Season = Summer, then return Sandals. If not, return Other footwear"" IIF([Season] = 'Summer', 'Sandals', IIF('Season' = 'Winter', 'Boots',  'Other footwear') ) ""If Season = Summer, then return Sandals. If not, look at the next expression. If Season = Winter, then return Boots. If neither are true, return Sneakers."" IIF('Season' = 'Summer', 'Sandals', IIF('Season' = 'Winter', 'Boots', IIF('Season' = 'Spring', 'Sneakers', 'Other footwear') ) ) ""If Season = Summer, then return Sandals. If not, look at the next expression. If Season = Winter, then return Boots. If none of the expressions are true, return Sneakers."" Notes See also IF and CASE . IIF doesn't have an equivalent to ELSEIF (like IF ) or repeated WHEN clauses (like CASE ). Instead, multiple tests can be evaluated sequentially by nesting IIF statements as the <unknown> element. The first (outermost) true  is returned. That is to say, in the calculation below,  the result will be Red, not Orange, because the expression stops being evaluated as soon as A=A is evaluated as true: IIF('A' = 'A', 'Red', IIF('B' = 'B', 'Orange',  IIF('C' = 'D', 'Yellow', 'Green'))) IN Syntax <expr1> IN <expr2> Output Boolean (true or false) Definition Returns TRUE if any value in <expr1> matches any value in <expr2> . Example SUM([Cost]) IN (1000, 15, 200) ""Is the value of the Cost field 1000, 15, or 200?"" [Field] IN [Set] ""Is the value of the field present in the set?"" Notes The values in <expr2> can be a set, list of literal values, or combined field. See also WHEN . ISDATE Syntax ISDATE(string) Output Boolean (true or false) Definition Returns true if a <string> is a valid date. The input expression must be a string (text) field. Example ISDATE(""2018-09-22"") ""Is the string 2018-09-22 a properly formatted date?"" Notes What is considered a valid date depends on the locale (Link opens in a new window) of the system evaluating the calculation. For example: In the USA: ISDATE(""2018-09-22"") = TRUE ISDATE(""2018-22-09"") = FALSE In the UK: ISDATE(""2018-09-22"") = FALSE ISDATE(""2018-22-09"") = TRUE ISNULL Syntax ISNULL(expression) Output Boolean (true or false) Definition Returns true if the <expression> is NULL (does not contain valid data). Example ISNULL([Assigned Room]) ""Is the Assigned Room field null?"" Notes Compare with IFNULL . IFNULL always returns a value. ISNULL returns a boolean. See also ZN . MAX Syntax MAX(expression) or MAX(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MAX can also be applied to a single field as an aggregation. Example MAX(4,7) = 7 MAX(#3/25/1986#, #2/20/2021#) = #2/20/2021# MAX([Name]) = ""Zander"" Notes For strings MAX is usually the value that comes last in alphabetical order. For database data sources, the MAX string value is highest in the sort sequence defined by the database for that column. For dates For dates, the MAX is the most recent date. If MAX is an aggregation, the result will not have a date hierarchy. If MAX is a comparison, the result will retain the date hierarchy. As an aggregation MAX(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MAX(expr1, expr2) compares the two values and returns a row-level value. See also MIN . MIN Syntax MIN(expression) or MIN(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MIN can also be applied to a single field as an aggregation. Example MIN(4,7) = 4 MIN(#3/25/1986#, #2/20/2021#) = #3/25/1986# MIN([Name]) = ""Abebi"" Notes For strings MIN is usually the value that comes first in alphabetical order. For database data sources, the MIN string value is lowest in the sort sequence defined by the database for that column. For dates For dates, the MIN is the earliest date. If MIN is an aggregation, the result will not have a date hierarchy. If MIN is a comparison, the result will retain the date hierarchy. As an aggregation MIN(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MIN(expr1, expr2) compares the two values and returns a row-level value. See also MAX . NOT Syntax NOT <expression> Output Boolean (true or false) Definition Performs logical negation on an expression. Example IF NOT [Season] = ""Summer"" THEN 'Don't wear sandals' ELSE 'Wear sandals' END ""If Season doesn't equal Summer, then return Don't wear sandals. If not,  return Wear sandals."" Notes Often used with IF and IIF . See also AND and OR . OR Syntax <expr1> OR <expr2> Output Boolean (true or false) Definition Performs a logical disjunction on two expressions. Example IF [Season] = ""Spring"" OR [Season] = ""Fall"" THEN ""Sneakers"" END ""If either (Season = Spring) or (Season = Fall) is true, then return Sneakers."" Notes Often used with IF and IIF . See also AND and NOT . If either expression 							is TRUE , then the result is TRUE . 							If both expressions are FALSE , then the result 							is FALSE . If both expressions are NULL , 						then the result is NULL . If you create 							a calculation which displays the result of an OR comparison 							on a worksheet, Tableau displays TRUE and FALSE. If 							you would like to change this, use the Format area in the format 						dialog. Note : The OR operator employs short circuit 							evaluation. This means that if the first expression is evaluated 							to be TRUE , then the second expression is not evaluated 							at all. This can be helpful if the second expression results in 							an error when the first expression is TRUE , because 					the second expression in this case is never evaluated. THEN Syntax IF <test1> THEN <then1> [ELSEIF <test2> THEN <then2>...] [ELSE <default>] END Definition A required part of an IF , ELSEIF , or CASE expression, used to define what result to return if a specific value or test is true. Example IF [Season] = ""Summer"" THEN 'Sandals' ELSEIF [Season] = ""Winter"" THEN 'Boots' ELSE 'Sneakers' END ""If Season = Summer, then return Sandals. If not, look at the next expression. If Season = Winter, then return Boots. If neither of the expressions are true, return Sneakers."" CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END ""Look at the Season field. If the value is Summer, then return Sandals. If the value is Winter, then return Boots. If none of the options in the calculation match what is in the Season field, return a Sneakers."" Notes Used with CASE , WHEN , IF , ELSEIF , THEN , ELSE , and END WHEN Syntax CASE <expression> WHEN <value1> THEN <then1> WHEN <value2> THEN <then2> ... [ELSE <default>] END Definition A required part of a CASE expression. Finds the first <value> that matches <expression> and returns the corresponding <then> . Example CASE [Season] WHEN 'Summer' THEN 'Sandals' WHEN 'Winter' THEN 'Boots' ELSE 'Sneakers' END ""Look at the Season field. If the value is Summer, then return Sandals. If the value is Winter, then return Boots. If none of the options in the calculation match what is in the Season field, return a Sneakers."" Notes Used with CASE , THEN , ELSE , and END . CASE also supports WHEN IN construction, such as: CASE <expression> WHEN IN <set1> THEN <then1> WHEN IN <combinedfield> THEN <then2> ... ELSE <default> END The values that WHEN IN compare to must be a set, list of literal values, or combined field. See also IN . ZN Syntax ZN(expression) Output Depends on the data type of the <expression> , or 0. Definition Returns <expression> if it isn't null, otherwise returns zero. Example ZN([Test Grade]) ""If the test grade isn't null, return its value. If the test grade is null, return 0."" Notes ZN is a specialized case of IFNULL where alternative if the expression is null is always 0 rather than being specified in the calculation. ZN is especially useful when performing additional calculations and a null would render the entire calculation null. However, use caution interpreting these results as null is not always synonymous with 0 and could represent missing data. See also ISNULL . Note : some of these are actually logical operators and appear in black, not blue. For more information, see Operator syntax . Note on CASE, IF, and IIF CASE is often easier to use than IF or IIF. In many instances, IF, IIF, and CASE can be used interchangeably. A CASE statement can always be rewritten as an IF statement, although the CASE function will generally be more concise and may be easier to understand. However, not all IF statements can be written as CASE statements, because each ELSEIF could refer to a different field. Tip : Let's compare an example using the same logic across these three functions: CASE IF IIF CASE [Region] WHEN 'West' THEN 1 WHEN 'East' THEN 2 WHEN 'South' THEN 3 WHEN 'North' Then 4 ELSE 5 END IF [Region] = 'West' THEN 1 ELSEIF [Region] = 'East' THEN 2 ELSEIF [Region] = 'South' THEN 3 ELSEIF [Region] = 'North' THEN 4 ELSE 5 END IIF([Region] = 'West', 1, IIF([Region] = 'East', 2, IIF([Region] = 'South', 3, IIF([Region] = 'North', 4, 5, 0) ) ) ) The CASE structure is very simple and easy to write and understand. However, the expression (here, [Region]) cannot be a logical operation, unlike with IF or IIF. Nulls are handled the same for CASE as they are for IF. The IF THEN structure permits multiple ELSEIF clauses, which makes multiple evaluations much easier than with IIF. Null handling : any unknown (null) results are handled by the same ELSE clause as false results. Here, any region other than the four specified (including null) will be assigned a value of 5. The IIF structure handles unknown results differently than false results and has a different syntax than IF. The tradeoff for specific null handling is nesting, as above, which can be clumsy to write and understand. Null handling : any non-null region other than the four specified will be assigned a value of 5, but a null value will be assigned a 0. Note : Many times you can use a group to get the same results as a complicated case function. Test to see if one option is more performant than the other. Examples CASE functions can be useful for scenarios such as realiasing: CASE LEFT(DATENAME('weekday',[Order Date]),3) WHEN 'Sun' THEN 0 WHEN 'Mon' THEN 1 WHEN 'Tue' THEN 2 WHEN 'Wed' THEN 3 WHEN 'Thu' THEN 4 WHEN 'Fri' THEN 5 WHEN 'Sat' THEN 6 END or giving the end user the ability to select which measure to view in a chart when used with a parameter (Link opens in a new window) : CASE [Choose a Measure] WHEN ""Sales"" THEN SUM([Sales]) WHEN ""Profit"" THEN AVG([Profit]) WHEN ""Quantity"" THEN COUNT([Quantity]) WHEN ""Shipping Cost"" THEN MEDIAN([Shipping Cost]) END Create a logical calculation Follow along with the steps below to learn how to create a logical calculation. In Tableau Desktop, connect to the Sample - Superstore saved data source, which comes with Tableau. Navigate to a worksheet. From the Data pane, drag State to the Rows shelf. From the Data pane, drag Category to the Rows shelf and place it to the right of State. From the Data pane, drag Sales to the Columns shelf. Select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field KPI. Enter the following formula: SUM([Profit]) > 0 This calculation quickly checks if a member is great than zero. If so, it returns true; if not, it returns false. When finished, click OK . The new calculated field appears under Measures in the Data pane. Just like your other fields, you can use it in onr or more visualizations. From the Data pane, drag KPI to Color on the Marks card. You can now see which categories are losing money in each state. See Also Visualize Key Progress Indicators Functions in Tableau Tableau Functions (by Category) Tableau Functions (Alphabetical) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,2.1.4. Write number functions,https://help.tableau.com/current/pro/desktop/en-us/functions_functions_number.htm,"Number Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces number functions and their uses in Tableau. It also demonstrates how to create a number calculation using an example. Why use number functions Number functions allow you to perform computations on the data values in your fields. Number functions can only be used with fields that contain numerical values. For more information, see Data Types . For example, you might have a field that contains values for the variance in your budget, titled Budget Variance. One of those values might be -7. You can use the ABS function to return the absolute value of that number, and all the other numbers in that field. The calculation might look something like this: ABS[Budget Variance] And for that -7 value, the output would be 7. Number functions available in Tableau ABS Syntax ABS(number) Output Number (positive) Definition Returns the absolute value of the given <number> . Example ABS(-7) = 7 ABS([Budget Variance]) The second example returns the absolute value for all the numbers contained in the Budget Variance field. Notes See also SIGN . ACOS Syntax ACOS(number) Output Number (angle in radians) Definition Returns the arccosine (angle) of the given <number> . Example ACOS(-1) = 3.14159265358979 Notes The inverse function, COS , takes the angle in radians as the argument and returns the cosine. ASIN Syntax ASIN(number) Output Number (angle in radians) Definition Returns the arcsine (angle) of a given <number> . Example ASIN(1) = 1.5707963267949 Notes The inverse function, SIN , takes the angle in radians as the argument and returns the sine. ATAN Syntax ATAN(number) Output Number (angle in radians) Definition Returns the arctangent (angle) of a given <number> . Example ATAN(180) = 1.5652408283942 Notes The inverse function, TAN , takes the angle in radians as the argument and returns the tangent. See also ATAN2 and COT . ATAN2 Syntax ATAN2(y number, x number) Output Number (angle in radians) Definition Returns the arctangent (angle) between two numbers (x and y). The result is in radians. Example ATAN2(2, 1) = 1.10714871779409 Notes See also ATAN , TAN , and COT . CEILING Syntax CEILING(number) Output Integer Definition Rounds a <number> to the nearest integer of equal or greater value. Example CEILING(2.1) = 3 Notes See also FLOOR and ROUND . Database limitations CEILING is available through the following connectors: Microsoft Excel, Text File, Statistical File, Published Data Source, Amazon EMR Hadoop Hive, Amazon Redshift, Cloudera Hadoop, DataStax Enterprise, Google Analytics, Google BigQuery, Hortonworks Hadoop Hive, MapR Hadoop Hive, Microsoft SQL Server, Salesforce, Spark SQL. COS Syntax COS(number) The number argument is the angle in radians. Output Number Definition Returns the cosine of an angle. Example COS(PI( ) /4) = 0.707106781186548 Notes The inverse function, ACOS , takes the cosine as the argument and returns the angle in radians. See also PI . To convert an angle from degrees to radians, use RADIANS . COT Syntax COT(number) The number argument is the angle in radians. Output Number Definition Returns the cotangent of an angle. Example COT(PI( ) /4) = 1 Notes See also ATAN , TAN , and PI . To convert an angle from degrees to radians, use RADIANS . DEGREES Syntax DEGREES(number) The number argument is the angle in radians. Output Number (degrees) Definition Converts an angle in radians to degrees. Example DEGREES(PI( )/4) = 45.0 Notes The inverse function, RADIANS , takes an angle in degrees and returns the angle in radians. See also PI () . DIV Syntax DIV(integer1, integer2) Output Integer Definition Returns the integer part of a division operation, in which <integer1> is divided by <integer2> . Example DIV(11,2) = 5 EXP Syntax EXP(number) Output Number Definition Returns e raised to the power of the given <number> . Example EXP(2) = 7.389 EXP(-[Growth Rate]*[Time]) Notes See also LN . FLOOR Syntax FLOOR(number) Output Integer Definition Rounds a number to the nearest <number> of equal or lesser value. Example FLOOR(7.9) = 7 Notes See also CEILING and ROUND . Database limitations FLOOR is available through the following connectors: Microsoft Excel, Text File, Statistical File, Published Data Source, Amazon EMR Hadoop Hive, Cloudera Hadoop, DataStax Enterprise, Google Analytics, Google BigQuery, Hortonworks Hadoop Hive, MapR Hadoop Hive, Microsoft SQL Server, Salesforce, Spark SQL. HEXBINX Syntax HEXBINX(number, number) Output Number Definition Maps an x, y coordinate to the x-coordinate of the nearest hexagonal bin. The bins have side length 1, so the inputs may need to be scaled appropriately. Example HEXBINX([Longitude]*2.5, [Latitude]*2.5) Notes HEXBINX and HEXBINY are binning and plotting functions for hexagonal bins. Hexagonal bins are an efficient and elegant option for visualizing data in an x/y plane such as a map. Because the bins are hexagonal, each bin closely approximates a circle and minimizes variation in the distance from the data point to the center of the bin. This makes the clustering both more accurate and informative. HEXBINY Syntax HEXBINY(number, number) Output Number Definition Maps an x, y coordinate to the y-coordinate of the nearest hexagonal bin. The bins have side length 1, so the inputs may need to be scaled appropriately. Example HEXBINY([Longitude]*2.5, [Latitude]*2.5) Notes See also HEXBINX . LN Syntax LN(number) Output Number The output is Null if the argument is less than or equal to zero. Definition Returns the natural logarithm of a <number> . Example LN(50) = 3.912023005 Notes See also EXP and LOG . LOG Syntax LOG(number, [base]) If the optional base argument isn't present, base 10 is used. Output Number Definition Returns the logarithm of a number for the given base. Example LOG(16,4) = 2 Notes See also POWER LN . MAX Syntax MAX(expression) or MAX(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MAX can also be applied to a single field as an aggregation. Example MAX(4,7) = 7 MAX(#3/25/1986#, #2/20/2021#) = #2/20/2021# MAX([Name]) = ""Zander"" Notes For strings MAX is usually the value that comes last in alphabetical order. For database data sources, the MAX string value is highest in the sort sequence defined by the database for that column. For dates For dates, the MAX is the most recent date. If MAX is an aggregation, the result will not have a date hierarchy. If MAX is a comparison, the result will retain the date hierarchy. As an aggregation MAX(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MAX(expr1, expr2) compares the two values and returns a row-level value. See also MIN . MIN Syntax MIN(expression) or MIN(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MIN can also be applied to a single field as an aggregation. Example MIN(4,7) = 4 MIN(#3/25/1986#, #2/20/2021#) = #3/25/1986# MIN([Name]) = ""Abebi"" Notes For strings MIN is usually the value that comes first in alphabetical order. For database data sources, the MIN string value is lowest in the sort sequence defined by the database for that column. For dates For dates, the MIN is the earliest date. If MIN is an aggregation, the result will not have a date hierarchy. If MIN is a comparison, the result will retain the date hierarchy. As an aggregation MIN(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MIN(expr1, expr2) compares the two values and returns a row-level value. See also MAX . PI Syntax PI() Output Number Definition Returns the numeric constant pi: 3.14159... Example PI() = 3.14159 Notes Useful for trig functions that take their input in radians. See also RADIANS . POWER Syntax POWER(number, power) Output Number Definition Raises the <number> to the specified <power> . Example POWER(5,3) = 125 POWER([Temperature], 2) Notes You can also use the ^ symbol, such as 5^3 = POWER(5,3) = 125 See also EXP , LOG , and SQUARE . RADIANS Syntax RADIANS(number) Output Number (angle in radians) Definition Converts the given <number> from degrees to radians. Example RADIANS(180) = 3.14159 Notes The inverse function, DEGREES , takes an angle in radians and returns the angle in degrees. ROUND Syntax ROUND(number, [decimals]) Output Number Definition Rounds <number> to a specified number of digits. The optional decimals argument specifies how many decimal points of precision to include in the final result. If decimals is omitted, number is rounded to the nearest integer. Example ROUND(1/3, 2) = 0.33 Notes Some databases, such as SQL Server, allow specification of a negative length, where -1 rounds number to 10's, -2 rounds to 100's, and so on. This is not true of all databases. For example, it is not true of Excel or Access. Tip : Because ROUND may run into issues due to the underlying floating point representation of numbers—such as 9.405 rounding to 9.40—it may be preferable to format the number to the desired number of decimal points rather than rounding. Formatting 9.405 to two decimal places will yield the expected 9.41. See also CEILING and FLOOR . SIGN Syntax SIGN(number) Output -1, 0, or 1 Definition Returns the sign of a <number> : The possible return values are -1 if the number is negative, 0 if the number is zero, or 1 if the number is positive. Example SIGN(AVG(Profit)) = -1 Notes See also ABS . SIN Syntax SIN(number) The number argument is the angle in radians. Output Number Definition Returns the sine of an angle. Example SIN(0) = 1.0 SIN(PI( )/4) = 0.707106781186548 Notes The inverse function, ASIN , takes the sine as the argument and returns the angle in radians. See also PI . To convert an angle from degrees to radians, use RADIANS . SQRT Syntax SQRT(number) Output Number Definition Returns the square root of a <number> . Example SQRT(25) = 5 Notes See also SQUARE . SQUARE Syntax SQUARE(number) Output Number Definition Returns the square of a <number> . Example SQUARE(5) = 25 Notes See also SQRT and POWER . TAN Syntax TAN(number) The number argument is the angle in radians. Output Number Definition Returns the tangent of an angle. Example TAN(PI ( )/4) = 1.0 Notes See also ATAN , ATAN2 , COT , and PI . To convert an angle from degrees to radians, use RADIANS . ZN Syntax ZN(expression) Output Any, or o Definition Returns the <expression> if it is not null, otherwise returns zero. Use this function to replace null values with zeros. Example ZN(Grade) = 0 Notes This is a very useful function when using fields that may contain nulls in a calculation. Wrapping the field with ZN can prevent errors caused by calculating with nulls. Create a number calculation Follow along with the steps below to learn how to create a number calculation. In Tableau Desktop, connect to the Sample - Superstore saved data source, which comes with Tableau. Navigate to a worksheet and select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field Minimum Sales transaction Enter the following formula: MIN(Sales) When finished, click OK . The new number calculation appears under Measures in the Data pane. Just like your other fields, you can use it in one or more visualizations. When Minimum Sales is placed on Text on the Marks card in the worksheet, its name is changed to AGG(Minimum Sales), which indicates that it cannot be aggregated any further, since it is already aggregated down to the lowest level of detail (the smallest sales value for all records). This example shows the minimum sales per category. When subcategory is brought into the view, the minimum sales for each subcategory are shown. See Also Functions in Tableau Tableau Functions (Alphabetical) Tableau Functions (by Category) Formatting Calculations in Tableau Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,2.1.5. Write type conversion functions,https://help.tableau.com/current/pro/desktop/en-us/functions_functions_typeconversion.htm,"Type Conversion Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces type conversion functions and their uses in Tableau. It also demonstrates how to create a type conversion calculation using an example. Why use type conversion functions Type conversion functions allow you to convert fields from one data type to another (this is called ""casting""). For example, if you have date information in a field with a string data type, you won't be able to use that field in date calculations unless the field is cast (changed) to a date data type. For example, to use a string date field in a DATEDIFF function, you'd also need to use a date type conversion: DATEDIFF('day', [Date Field], DATE([String Date Field]) ) Without the DATE function changing the data type, you'd get an error that ""DATEDIFF is being called with (string, date, string)"". Tip : Fields have default Data Types in the Data pane. In many instances, you don't need to use a type conversion function at all. You can change the field's data type by clicking the icon. However, in some cases it can be useful to change the data type only for a specific calculation, or Tableau may not be able to correctly cast the field's contents to the desired data type (such as not recognizing the date format). Then you would need to use a type conversion function like those listed below. Type conversion functions available in Tableau DATE Syntax DATE(expression) Output Date Definition Returns a date given a number, string, or date expression. Example DATE([Employee Start Date]) DATE(""September 22, 2018"") DATE(""9/22/2018"") DATE(#2018-09-22 14:52#) Notes Unlike DATEPARSE (Link opens in a new window) , there is no need to provide a pattern as DATE automatically recognizes many standard date formats. If DATE does not recognize the input, however, try using DATEPARSE and specifying the format. MAKEDATE (Link opens in a new window) is another similar function, but MAKEDATE requires the input of numeric values for year, month, and day. DATETIME Syntax DATETIME(expression) Output Datetime Definition Returns a datetime given a number, string, or date expression. Example DATETIME(""April 15, 2005 07:59:00"") = April 15, 2005 07:59:00 FLOAT Syntax FLOAT(expression) Output Floating point number (decimal) Definition Casts its argument as a floating point number. Example FLOAT(3) = 3.000 Notes See also INT which returns an integer. INT Syntax INT(expression) Output Integer Definition Casts its argument as an integer. For expressions, this function truncates results to the closest integer toward zero. Example INT(8/3) = 2 INT(-9.7) = -9 Notes When a string is converted to an integer it is first converted to a float and then rounded. See also FLOAT which returns a decimal. See also ROUND (Link opens in a new window) , CEILING (Link opens in a new window) , and FLOOR (Link opens in a new window) MAKEDATE Syntax MAKEDATE(year, month, day) Output Date Definition Returns a date value constructed from the specified numerical year, month, and date. Example MAKEDATE(1986,3,25) = #1986-03-25# Note that incorrectly entered values will be adjusted into a date, such as MAKEDATE(2020,4,31) = May 1, 2020 rather than returning an error that there is no 31st day of April. Notes Available for Tableau Data Extracts. Check for availability in other data sources. MAKEDATE requires numerical inputs for the parts of a date. If your data is a string that should be a date, try the DATE function. DATE automatically recognizes many standard date formats. If DATE does not recognize the input try using DATEPARSE. MAKEDATETIME Syntax MAKEDATETIME(date, time) Output Datetime Definition Returns a datetime that combines a date and a time. The date can be a date, datetime, or a string type. The time must be a datetime. Example MAKEDATETIME(""1899-12-30"", #07:59:00#) = #12/30/1899 7:59:00 AM# MAKEDATETIME([Date], [Time]) = #1/1/2001 6:00:00 AM# Notes This function is available only for MySQL-compatible connections (which for Tableau are MySQL and Amazon Aurora). MAKETIME is a similar function available for Tableau Data Extracts and some other data sources. MAKELINE Syntax MAKELINE(<Spatial Point1>,<Spatial Point2>) Output Geometry spatial object (line) Definition Generates a line mark between two points. Example MAKELINE(OriginPoint, DestinationPoint) MAKELINE( MAKEPOINT(OriginLat],[OriginLong]) , MAKEPOINT([DestinationLat],[DestinationLong] ) Notes Useful for building origin-destination maps or, with MAKEPOINT, turning latitude and longitude into spatial objects. MAKEPOINT Syntax MAKEPOINT(<latitude>, <longitude>) Output Geometry spatial object (point) Definition Converts data from latitude and longitude columns into spatial objects. Example MAKEPOINT([AirportLatitude],[AirportLongitude]) Notes You can use MAKEPOINT to spatially-enable a data source so that it can be joined with a spatial file using a spatial join. For more information, see Join Spatial Files in Tableau . To use MAKEPOINT, your data must contain latitude and longitude coordinates. MAKETIME Syntax MAKETIME(hour, minute, second) Output Datetime. See Notes. Definition Returns a date value constructed from the specified hour, minute, and second. Example MAKETIME(14, 52, 40) = #1/1/1899 14:52:40# Notes Because Tableau does not support a time data type, only date time, the output is a a datetime. The date portion of the field will be 1/1/1899. Similar function to MAKEDATETIME, which is only available for MYSQL-compatible connections. STR Syntax STR(expression) Output String Definition Casts its argument as a string. Example STR([ID]) Cast Boolean expressions A Boolean can be cast to an integer, float, or string, but not a date. True maps to 1, 1.0, or ""1"" False maps to 0, 0.0, or ""0"" Unknown maps to Null Create a type conversion calculation Follow along with the steps below to learn how to create a type conversion calculation. In Tableau Desktop, connect to the Sample - Superstore saved data source, which comes with Tableau. Navigate to a worksheet. Select Analysis > Create Calculated Field . In the calculation editor that opens, converts the Postal Code field from a number to a string: Name the calculated field, Postal Code String. Enter the following formula: STR([Postal Code]) When finished, click OK . The new calculated field appears under Dimensions in the Data pane. Just like your other fields, you can use it in one or more visualizations. Converting this field from a number to a string ensures that Tableau treats it as a string and not a number (and therefore doesn't aggregate it). See Also Data Types Convert a Field to a Date Field Formatting Calculations in Tableau Functions in Tableau Tableau Functions (Alphabetical) Tableau Functions (by Category) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,2.1.6. Write aggregate functions,https://help.tableau.com/current/pro/desktop/en-us/calculations_calculatedfields_aggregate_create.htm,"Aggregate Functions in Tableau Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces aggregate functions and their uses in Tableau. It also demonstrates how to create an aggregate calculation using an example. Why use aggregate functions Aggregate functions allow you to summarize or change the granularity of your data. For example, you might want to know exactly how many orders your store had for a particular year. You can use the COUNTD function to summarize the exact number of orders your company had, and then break the visualization down by year. The calculation might look something like this: COUNTD(Order ID) The visualization might look something like this: Aggregate functions available in Tableau Aggregations and floating-point arithmetic : The results of some aggregations may not always be exactly as expected. For example, you may find that the Sum function returns a value such as -1.42e-14 for a column of numbers that you know should sum to exactly 0. This happens because the Institute of Electrical and Electronics Engineers (IEEE) 754 floating-point standard requires that numbers be stored in binary format, which means that numbers are sometimes rounded at extremely fine levels of precision. You can eliminate this potential distraction by using the ROUND function (see Number Functions ) or by formatting the number to show fewer decimal places. ATTR Syntax ATTR(expression) Definition Returns the value of the expression if it has a single value for all rows. Otherwise returns an asterisk. Null values are ignored. AVG Syntax AVG(expression) Definition Returns the average of all the values in the expression.  Null values are ignored. Notes AVG can only be used with numeric fields. COLLECT Syntax COLLECT(spatial) Definition An aggregate calculation that combines the values in the argument field. Null values are ignored. Notes COLLECT can only be used with spatial fields. CORR Syntax CORR(expression1, expression2) Output Number from -1 to 1 Definition Returns the Pearson correlation coefficient of two expressions. Example example Notes The Pearson correlation measures the linear relationship between two variables. Results range from -1 to +1 inclusive, where 1 denotes an exact positive linear relationship, 0 denotes no linear relationship between the variance, and −1 is an exact negative relationship. The square of a CORR result is equivalent to the R-Squared value for a linear trend line model. See Trend Line Model Terms (Link opens in a new window) . Use with table scoped LOD expressions: You can use CORR to visualize correlation in a disaggregated scatter using a table-scoped level of detail expression (Link opens in a new window) . For example: {CORR(Sales, Profit)} With a level of detail expression, the correlation is run over all rows. If you used a formula like CORR(Sales, Profit) (without the surrounding brackets to make it a level of detail expression), the view would show the correlation of each individual point in the scatter plot with each other point, which is undefined. Database limitations CORR is available with the following data sources: Tableau data extracts, Cloudera Hive, EXASolution, Firebird (version 3.0 and later), Google BigQuery, Hortonworks Hadoop Hive, IBM PDA (Netezza), Oracle, PostgreSQL, Presto, SybaseIQ, Teradata, Vertica. For other data sources, consider either extracting the data or using WINDOW_CORR . See Table Calculation Functions (Link opens in a new window) . COUNT Syntax COUNT(expression) Definition Returns the number of items. Null values are not counted. COUNTD Syntax COUNTD(expression) Definition Returns the number of distinct items in a group. Null values are not counted. COVAR Syntax COVAR(expression1, expression2) Definition Returns the sample covariance of two expressions. Notes Covariance quantifies how two variables change together. A positive covariance indicates that the variables tend to move in the same direction, as when larger values of one variable tend to correspond to larger values of the other variable, on average. Sample covariance uses the number of non-null data points n - 1 to normalize the covariance calculation, rather than n, which is used by the population covariance (available with the COVARP function). Sample covariance is the appropriate choice when the data is a random sample that is being used to estimate the covariance for a larger population. If <expression1> and <expression2> are the same, for example COVAR([profit], [profit]) , COVAR returns a value that indicates how widely values are distributed. The value of COVAR(X, X) is equivalent to the value of VAR(X) and also to the value of STDEV(X)^2 . Database limitations COVAR is available with the following data sources: Tableau data extracts, Cloudera Hive, EXASolution, Firebird (version 3.0 and later), Google BigQuery, Hortonworks Hadoop Hive, IBM PDA (Netezza), Oracle, PostgreSQL, Presto, SybaseIQ, Teradata, Vertica. For other data sources, consider either extracting the data or using WINDOW_COVAR . See Table Calculation Functions (Link opens in a new window) . COVARP Syntax COVARP(expression 1, expression2) Definition Returns the population covariance of two expressions. Notes Covariance quantifies how two variables change together. A positive covariance indicates that the variables tend to move in the same direction, as when larger values of one variable tend to correspond to larger values of the other variable, on average. Population covariance is sample covariance multiplied by (n-1)/n, where n is the total number of non-null data points. Population covariance is the appropriate choice when there is data available for all items of interest as opposed to when there is only a random subset of items, in which case sample covariance (with the COVAR function) is appropriate. If <expression1> and <expression2> are the same, for example COVARP([profit], [profit]) , COVARP returns a value that indicates how widely values are distributed.  Note: The value of COVARP(X, X) is equivalent to the value of VARP(X) and also to the value of STDEVP(X)^2 . Database limitations COVARP is available with the following data sources: Tableau data extracts, Cloudera Hive, EXASolution, Firebird (version 3.0 and later), Google BigQuery, Hortonworks Hadoop Hive, IBM PDA (Netezza), Oracle, PostgreSQL, Presto, SybaseIQ, Teradata, Vertica For other data sources, consider either extracting the data or using WINDOW_COVAR . See Table Calculation Functions (Link opens in a new window) . MAX Syntax MAX(expression) or MAX(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MAX can also be applied to a single field as an aggregation. Example MAX(4,7) = 7 MAX(#3/25/1986#, #2/20/2021#) = #2/20/2021# MAX([Name]) = ""Zander"" Notes For strings MAX is usually the value that comes last in alphabetical order. For database data sources, the MAX string value is highest in the sort sequence defined by the database for that column. For dates For dates, the MAX is the most recent date. If MAX is an aggregation, the result will not have a date hierarchy. If MAX is a comparison, the result will retain the date hierarchy. As an aggregation MAX(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MAX(expr1, expr2) compares the two values and returns a row-level value. See also MIN . MEDIAN Syntax MEDIAN(expression) Definition Returns the median of an expression across all records. Null values are ignored. Notes MEDIAN can only be used with numeric fields. Database limitations MEDIAN is not available for the following data sources: Access, Amazon Redshift, Cloudera Hadoop, HP Vertica, IBM DB2, IBM PDA (Netezza), Microsoft SQL Server, MySQL, SAP HANA, Teradata. For other data source types, you can extract your data into an extract file to use this function. See Extract Your Data (Link opens in a new window) . MIN Syntax MIN(expression) or MIN(expr1, expr2) Output Same data type as the argument, or NULL if any part of the argument is null. Definition Returns the maximum of the two arguments, which must be of the same data type. MIN can also be applied to a single field as an aggregation. Example MIN(4,7) = 4 MIN(#3/25/1986#, #2/20/2021#) = #3/25/1986# MIN([Name]) = ""Abebi"" Notes For strings MIN is usually the value that comes first in alphabetical order. For database data sources, the MIN string value is lowest in the sort sequence defined by the database for that column. For dates For dates, the MIN is the earliest date. If MIN is an aggregation, the result will not have a date hierarchy. If MIN is a comparison, the result will retain the date hierarchy. As an aggregation MIN(expression) is an aggregate function and returns a single aggregated result. This displays as AGG(expression) in the viz. As a comparison MIN(expr1, expr2) compares the two values and returns a row-level value. See also MAX . PERCENTILE Syntax PERCENTILE(expression, number) Definition Returns the percentile value from the given expression corresponding to the specified <number> . The <number> must be between 0 and 1 (inclusive) and must be a numeric constant. Example PERCENTILE([Score], 0.9) Notes Database limitations This function is available for the following data sources: Non-legacy Microsoft Excel and Text File connections, Extracts and extract-only data source types (for example, Google Analytics, OData, or Salesforce), Sybase IQ 15.1 and later data sources, Oracle 10 and later data sources, Cloudera Hive and Hortonworks Hadoop Hive data sources, EXASolution 4.2 and later data sources. For other data source types, you can extract your data into an extract file to use this function. See Extract Your Data (Link opens in a new window) . STDEV Syntax STDEV(expression) Definition Returns the statistical standard deviation of all values in the given expression based on a sample of the population. STDEVP Syntax STDEVP(expression) Definition Returns the statistical standard deviation of all values in the given expression based on a biased population. SUM Syntax SUM(expression) Definition Returns the sum of all values in the expression. Null values are ignored. Notes SUM can only be used with numeric fields. VAR Syntax VAR(expression) Definition Returns the statistical variance of all values in the given expression based on a sample of the population. VARP Syntax VARP(expression) Definition Returns the statistical variance of all values in the given expression on the entire population. Create an aggregate calculation Follow along with the steps below to learn how to create an aggregate calculation. In Tableau Desktop, connect to the Sample - Superstore saved data source, which comes with Tableau. Navigate to a worksheet and select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field Margin . Enter the following formula: IIF(SUM([Sales]) !=0, SUM([Profit])/SUM([Sales]), 0) Note : You can use the function reference to find and add aggregate functions and other functions (like the logical IIF function in this example) to the calculation formula. For more information, see Use the functions reference in the calculation editor . When finished, click OK . The new aggregate calculation appears under Measures in the Data pane. Just like your other fields, you can use it in one or more visualizations. Note : Aggregation calculations are always measures. When Margin is placed on a shelf or card in the worksheet, its name is changed to AGG(Margin) , which indicates that it is an aggregate calculation and cannot be aggregated any further. Rules for aggregate calculations The rules that apply to aggregate calculations are as follows: For any aggregate calculation, you cannot combine an aggregated value and a disaggregated value. For example, SUM(Price)*[Items] is not a valid expression because SUM(Price) is aggregated and Items is not. However, SUM(Price*Items) and SUM(Price)*SUM(Items) are both valid. Constant terms in an expression act as aggregated or disaggregated values as appropriate. For example: SUM(Price*7) and SUM(Price)*7 are both valid expressions. All of the functions can be evaluated on aggregated values. However, the arguments to any given function must either all be aggregated or all disaggregated. For example: MAX(SUM(Sales),Profit) is not a valid expression because Sales is aggregated and Profit is not. However, MAX(SUM(Sales),SUM(Profit)) is a valid expression. The result of an aggregate calculation is always a measure. Like predefined aggregations, aggregate calculations are computed correctly for grand totals. Refer to Grand Totals for more information. See also Understanding Calculations: Aggregate Calculations (Link opens in a new window) Data Aggregation in Tableau (Link opens in a new window) Functions in Tableau Tableau Functions (by Category) (Link opens in a new window) Tableau Functions (Alphabetical) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.1. Create calculated fields,2.1.7. Write FIXED LOD calculations,https://help.tableau.com/current/pro/desktop/en-us/calculations_calculatedfields_lod_fixed.htm,"FIXED Level of Detail Expressions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server FIXED level of detail expressions compute a value using the specified dimensions, without reference to the dimensions in the view. The following examples can be recreated using the Sample - Superstore data source. Example 1 The following view shows the  interval between a customer’s first purchase date and any subsequent purchase: Step-by-Step Here's how to build the view above, using the Sample - Superstore data source provided with Tableau Desktop. Create two calculated fields: a FIXED level of detail expression, and a date subtraction. Name Formula First Purchase Date {FIXED [Customer Name] : MIN([Order Date])} Days Since First Purchase DATETRUNC('day', [Order Date])-DATETRUNC('day', [First Purchase Date]) Drag Days Since First Purchase from the Measures area of the Data pane to the Dimensions area. Because this calculated field contains a subtraction operation, the result is a number, and so Tableau assigns it to the measure category. But you will be using it as a dimension. Drag Days Since First Purchase to Columns. Click Days Since First Purchase on Columns and choose Continuous . Drag Sales to Rows. Change the aggregation for Sales on Rows from SUM to AVG. Add a quick table calculation to Sales on Rows: Running Total. Drag First Purchase Date to Color. Click the + in the YEAR(First Purchase Date) field on Color to add the next level down in the date hierarchy: QUARTER(First Purchase Date) . Tableau won't automatically put two fields on Color, but you can make it happen by clicking the icon to the left of the QUARTER(First Purchase Date) field and choosing Color: Drag the Color legend over to the left side of the view, below the Marks card. Your view should now look like this: The visualization yields insights as you interact with it. Select individual quarters in the color legend on the left to see how customers acquired in specific individual quarters continued to spend in subsequent quarters. Notice that customers acquired in the early going (2013) tend to spend at a higher rate, even allowing for the fact that they had more time to do so—thus, the blue lines (for 2013) are higher up on the x-axis than other lines. If you had used a standard date value on the y-axis, the view would have been easier to create, but the lines would not all start at the same coordinates and so it would be more difficult to compare acquisition rates. You can also drag either YEAR(First Purchase Date) or QUARTER(First Purchase Date) off color to see seasonal or annual trends more clearly. Example 2 The following FIXED level of detail expression computes the sum of sales per region: {FIXED [Region] : SUM([Sales])} This level of detail expression, named [ Sales by Region ], is then placed on Text to show total sales per region: The view level of detail is [ Region ] plus [ State ], but because FIXED level of detail expressions do not consider the view level of detail, the calculation only uses the [ Region ] dimension, and so the values for the individual states in each region are identical. See Level of Detail Expressions and Aggregation for an explanation of why this is so. If the INCLUDE keyword had been used in the level of detail expression instead of FIXED, the values would be different for each state, because Tableau would add the dimension in the expression ([ Region ]) with any additional dimensions in the view ([ State ]) in determining values for the expression. The result would be: Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.2. Create quick table calculations,2.2.1. Moving average,https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations_definebasic_runningtotal.htm,"Table Calculation Types Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article describes the types of table calculations available in Tableau and when to use them. It uses simple examples to demonstrate how each calculation transforms data in a table. For more information on how to create  and configure table calculations, see Create a table calculation . Difference From calculation A Difference From table calculation computes the difference between the current value and another value in the table for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. You can see that in January, there was a 368 USD difference between sales in 2012 and 2013, and a 26,161 USD difference between sales in 2013 and 2014. Tip : When calculating year-over-year growth, the first year doesn't have a previous year to compare to, so the column is left blank. Hide the column that you don’t want to show to keep the calculation intact. For details, see Hide rows and columns . Why? If you filtered out the first year to remove it from the view, it would also remove it from the calculation so the second year doesn't have a previous year to compare to and is left blank. Instead of filtering, hiding the column keeps the calculation intact. Moving calculation For each mark in the view, a Moving Calculation table calculation (sometimes referred to as a rolling calculation) determines the value for a mark in the view by performing an aggregation (sum, average, minimum, or maximum) across a specified number of values before and/or after the current value. A moving calculation is typically used to smooth short-term fluctuations in your data so that you can see long-term trends. For example, with securities data there are so many fluctuations every day that it is hard to see the big picture through all the ups and downs. You can use a moving calculation to define a range of values to summarize using an aggregation of your choice. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Moving calculation to find out how sales totals are trending over time. To do this, you can transform each monthly total so that it averages the monthly total for it and the two previous months over time. You can see the average sales over time. For example, the value listed for December 2011 is the average sales for October, November, and December, 2011. The value listed for January, 2012 is the average sales for November and December, 2011, and January, 2012. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. For an example showing how to create a secondary calculation, see Running Total calculation . Percent Difference From calculation A Percent Difference From table calculation computes the difference between the current value and another value in the table as a percentage for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. Values are calculated as percentages. You can see that between January and February, 2011, there was a -66% difference in sales, but between February and March, 2011, there was a huge improvement of 1,058% sales. Percent From calculation A Percent From table calculation computes a value as a percentage of some other value—typically, as a percentage of the previous value in the table—for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent From table calculation to calculate the percentage of a previous value. For example, you can calculate what percentage of sales in January 2011, was made in February 2011. You can see that February, 2011 made 34% of the sales made in January, 2011; March, 2011 made 1,158% of the sales made in February, and so on. Percent of Total calculation For each mark in the view, a Percent of Total table calculation computes a value as a percentage of all values in the current partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent of Total table calculation to calculate the percentage of total sales each month makes within a quarter. For example, you can see that January, 2011 makes up 18.73% of sales made in Q1. Or you can calculate the percentage of total sales each month makes within a year. For example, you can see that January, 2011 makes up 2.88% of sales made in 2011. Percentile calculation For each mark in the view, a Percentile table calculation computes a percentile rank for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percentile table calculation to rank the total sales for each month in a year as a percentage, rather than a whole number (for example, 1 through 10). Since February made a very small amount of sales in 2012 compared to the overall total, it is ranked as 0.0% (or number 1 out of 12, since this example is Ascending, and therefore ranked from least to most). Sales in January, 2012 were a bit higher and were therefore ranked as 9.1% (or number 2 out of 12 months). Since November made the most sales in 2012, it is ranked as 100% (or number 12 out of 12). Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. Rank calculation For each mark in the view, a Rank table calculation computes a ranking for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Rank table calculation to calculate a ranking for each month in a year. You can see that, since November made the most amount of sales in 2012, it is ranked as number 1 (because the rank is in descending order, meaning it is ordered from most to least). Since February made the least amount of sales in 2012, it is ranked number 12. Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. For Rank table calculation, the default value is Descending . Rank Type One issue with Rank calculations is that there may be more than one mark with the same value. What would happen, for example, if Tables in the Central region and Appliances in the South region both had sales of exactly $36,729? Tableau lets you specify how to handle such cases by including an additional field in the Table Calculation dialog box when you set Calculation Type to Rank . The choices are listed below. The number sequence at the beginning of each option  show how each option would rank a hypothetical set of four values where two of the values are identical: Option Result Competition (1, 2, 2, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 2. The next value is then ranked 4. Modified Competition (1, 3, 3, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 3. The next value is then ranked 4. Dense (1, 2, 2, 3) Duplicate values are all given the same rank, which is the next number in the ranking sequence. The next value after the duplicate values is computed as though the duplicate values were a single value. Unique (1, 2, 3, 4) Duplicate values are given unique rankings, according to the direction in which the ranking is being computed. Running Total calculation For each mark in the view, a Running Total table calculation aggregates values cumulatively in a partition. It can do this by summing values, averaging values, or replacing all values with either the lowest or highest actual value. Suppose you are starting with the following text view, which shows sales totals broken out by year (from left to right) and by quarter and month (from top to bottom): Instead of absolute sales values, you want to see a running total of sales for each year, such that each month’s sales are added to all previous months’ sales. Create the Basic View Connect to the Sample - Superstore data source. Click and drag the Order Date field in the Data pane and drag it to the Columns shelf. The default date level is YEAR(Order Date). Click and drag Order Date again and drop it this time on the Rows shelf. Click on the right side of the field to open the context menu. Then choose Quarter . You will see two options named Quarter . Be sure to choose the first one. The field should now read QUARTER(Order Date) . Note: If you are creating the view on the web, the menu looks a bit different. Click and drag Order Date a third time and drop it on the Rows shelf to the right of QUARTER(Order Date) . Click on the right side of the field to open the context menu and this time choose Month (again, choose the first of two options named Month ). The field should now read MONTH(Order Date) . Drag Sales from the Data pane and drop it on Text on the Marks card. You now have the basic view, showing Sales by Order Date over a four-year period, by month, quarter, and year. Add a Running Total table calculation to the basic view Click the SUM(Sales) field on the Marks card and choose Add table calculation . In the Table Calculation dialog box, choose Running Total as the Calculation Type . Choose Table (Down) from the Compute Using list. The highlighting in the view shows how this Compute Using value sets the scope of the calculation in the view: Comparing the values in the original text view with the values in this view shows that the result is correct. The monthly values ascend steadily and the December value (484,247) is the same value you see if you show column grand totals (from the Analysis menu, select Totals > Show column grand totals ). Click the X in the upper-right corner of the Table Calculations dialog box to close it. The Running Total doesn’t have to be a sum For a Running Total table calculation, Tableau can update values cumulatively in other ways than summing. Choose one of the options from the drop-down list just below the Calculation Type field: Option Meaning Sum Each value is added to the previous value. Average The running total averages the current and all previous values. Minimum All values are replaced with the lowest value in the original partition. Maximum All values are replaced with the highest value in the original partition. Restarting every option The Restarting every option is only available when you select Specific Dimensions in the Table Calculations dialog box and when more than one dimension is selected in the field immediately below the Compute Using options—that is, when more than one dimension is defined as an addressing field. This option is not available when you’re defining a table calculation with Compute Using . You can use this setting to set a break (that is, restart of the calculation) in the view, based on a particular dimension. Restarting every can be useful in the following situations: With dates or other hierarchies, if you restart every month, as you bring in Year or Quarter, Tableau knows to partition automatically. With non-hierarchies, Restarting every affects the sorting.  If you want to address on Products and partition by State , but you want the products sorted by SUM(Sales) within each state, you need to include States as an addressing field under Specific Dimensions, but then restart every state.  Otherwise, the sort by SUM(Sales) would be based on each product's sum of sales across all states. For example, if you take the result of the Running Total calculation you added above, you can see the effect of Restarting every by doing the following: Click the SUM(Sales) field on the Marks card and choose Edit table calculation . In the Table Calculation dialog box, choose Specific Dimensions . Notice that two dimensions are now checked in the list box of dimensions: Quarter of Order Date and Month of Order Date . These are the addressing fields, and because more than one field is being used for addressing, Restarting every is now available. The choices available from the At the level drop-down list are: None Specifies that the calculation should be performed at the level of greatest granularity. This is the default option. This option does not change the view. Quarter of Order Date Specifies that the calculation should be performed at the quarter level. If you choose Quarter of Order Date, the view updates to show the effect of this change: The calculation now restarts after every quarter. If you click out of the Table Calculations dialog box (to dismiss the highlighting) you can see this more clearly. Click the X in the upper-right corner of the Table Calculations dialog box to close it. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. To do this, first add the primary table calculation, as shown above. Then continue as follows: Click the SUM(Sales) field on the Marks card and select Edit table calculation . In the Table Calculation dialog box, click Add Secondary Calculation . The Table Calculation dialog box expands to show a second panel: In the second panel, choose Percent Difference From as the Secondary Calculation Type . You do not need to change the Compute Using selection: Table (Across) is the right option. Click the X in the upper-right corner to dismiss the Table Calculation dialog box. Now your view shows what you needed: a year-over-year percent difference of a running total: See Also Create a table calculation The basics: addressing and partitioning Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.2. Create quick table calculations,2.2.2. Percent of total,https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations_definebasic_runningtotal.htm,"Table Calculation Types Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article describes the types of table calculations available in Tableau and when to use them. It uses simple examples to demonstrate how each calculation transforms data in a table. For more information on how to create  and configure table calculations, see Create a table calculation . Difference From calculation A Difference From table calculation computes the difference between the current value and another value in the table for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. You can see that in January, there was a 368 USD difference between sales in 2012 and 2013, and a 26,161 USD difference between sales in 2013 and 2014. Tip : When calculating year-over-year growth, the first year doesn't have a previous year to compare to, so the column is left blank. Hide the column that you don’t want to show to keep the calculation intact. For details, see Hide rows and columns . Why? If you filtered out the first year to remove it from the view, it would also remove it from the calculation so the second year doesn't have a previous year to compare to and is left blank. Instead of filtering, hiding the column keeps the calculation intact. Moving calculation For each mark in the view, a Moving Calculation table calculation (sometimes referred to as a rolling calculation) determines the value for a mark in the view by performing an aggregation (sum, average, minimum, or maximum) across a specified number of values before and/or after the current value. A moving calculation is typically used to smooth short-term fluctuations in your data so that you can see long-term trends. For example, with securities data there are so many fluctuations every day that it is hard to see the big picture through all the ups and downs. You can use a moving calculation to define a range of values to summarize using an aggregation of your choice. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Moving calculation to find out how sales totals are trending over time. To do this, you can transform each monthly total so that it averages the monthly total for it and the two previous months over time. You can see the average sales over time. For example, the value listed for December 2011 is the average sales for October, November, and December, 2011. The value listed for January, 2012 is the average sales for November and December, 2011, and January, 2012. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. For an example showing how to create a secondary calculation, see Running Total calculation . Percent Difference From calculation A Percent Difference From table calculation computes the difference between the current value and another value in the table as a percentage for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. Values are calculated as percentages. You can see that between January and February, 2011, there was a -66% difference in sales, but between February and March, 2011, there was a huge improvement of 1,058% sales. Percent From calculation A Percent From table calculation computes a value as a percentage of some other value—typically, as a percentage of the previous value in the table—for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent From table calculation to calculate the percentage of a previous value. For example, you can calculate what percentage of sales in January 2011, was made in February 2011. You can see that February, 2011 made 34% of the sales made in January, 2011; March, 2011 made 1,158% of the sales made in February, and so on. Percent of Total calculation For each mark in the view, a Percent of Total table calculation computes a value as a percentage of all values in the current partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent of Total table calculation to calculate the percentage of total sales each month makes within a quarter. For example, you can see that January, 2011 makes up 18.73% of sales made in Q1. Or you can calculate the percentage of total sales each month makes within a year. For example, you can see that January, 2011 makes up 2.88% of sales made in 2011. Percentile calculation For each mark in the view, a Percentile table calculation computes a percentile rank for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percentile table calculation to rank the total sales for each month in a year as a percentage, rather than a whole number (for example, 1 through 10). Since February made a very small amount of sales in 2012 compared to the overall total, it is ranked as 0.0% (or number 1 out of 12, since this example is Ascending, and therefore ranked from least to most). Sales in January, 2012 were a bit higher and were therefore ranked as 9.1% (or number 2 out of 12 months). Since November made the most sales in 2012, it is ranked as 100% (or number 12 out of 12). Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. Rank calculation For each mark in the view, a Rank table calculation computes a ranking for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Rank table calculation to calculate a ranking for each month in a year. You can see that, since November made the most amount of sales in 2012, it is ranked as number 1 (because the rank is in descending order, meaning it is ordered from most to least). Since February made the least amount of sales in 2012, it is ranked number 12. Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. For Rank table calculation, the default value is Descending . Rank Type One issue with Rank calculations is that there may be more than one mark with the same value. What would happen, for example, if Tables in the Central region and Appliances in the South region both had sales of exactly $36,729? Tableau lets you specify how to handle such cases by including an additional field in the Table Calculation dialog box when you set Calculation Type to Rank . The choices are listed below. The number sequence at the beginning of each option  show how each option would rank a hypothetical set of four values where two of the values are identical: Option Result Competition (1, 2, 2, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 2. The next value is then ranked 4. Modified Competition (1, 3, 3, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 3. The next value is then ranked 4. Dense (1, 2, 2, 3) Duplicate values are all given the same rank, which is the next number in the ranking sequence. The next value after the duplicate values is computed as though the duplicate values were a single value. Unique (1, 2, 3, 4) Duplicate values are given unique rankings, according to the direction in which the ranking is being computed. Running Total calculation For each mark in the view, a Running Total table calculation aggregates values cumulatively in a partition. It can do this by summing values, averaging values, or replacing all values with either the lowest or highest actual value. Suppose you are starting with the following text view, which shows sales totals broken out by year (from left to right) and by quarter and month (from top to bottom): Instead of absolute sales values, you want to see a running total of sales for each year, such that each month’s sales are added to all previous months’ sales. Create the Basic View Connect to the Sample - Superstore data source. Click and drag the Order Date field in the Data pane and drag it to the Columns shelf. The default date level is YEAR(Order Date). Click and drag Order Date again and drop it this time on the Rows shelf. Click on the right side of the field to open the context menu. Then choose Quarter . You will see two options named Quarter . Be sure to choose the first one. The field should now read QUARTER(Order Date) . Note: If you are creating the view on the web, the menu looks a bit different. Click and drag Order Date a third time and drop it on the Rows shelf to the right of QUARTER(Order Date) . Click on the right side of the field to open the context menu and this time choose Month (again, choose the first of two options named Month ). The field should now read MONTH(Order Date) . Drag Sales from the Data pane and drop it on Text on the Marks card. You now have the basic view, showing Sales by Order Date over a four-year period, by month, quarter, and year. Add a Running Total table calculation to the basic view Click the SUM(Sales) field on the Marks card and choose Add table calculation . In the Table Calculation dialog box, choose Running Total as the Calculation Type . Choose Table (Down) from the Compute Using list. The highlighting in the view shows how this Compute Using value sets the scope of the calculation in the view: Comparing the values in the original text view with the values in this view shows that the result is correct. The monthly values ascend steadily and the December value (484,247) is the same value you see if you show column grand totals (from the Analysis menu, select Totals > Show column grand totals ). Click the X in the upper-right corner of the Table Calculations dialog box to close it. The Running Total doesn’t have to be a sum For a Running Total table calculation, Tableau can update values cumulatively in other ways than summing. Choose one of the options from the drop-down list just below the Calculation Type field: Option Meaning Sum Each value is added to the previous value. Average The running total averages the current and all previous values. Minimum All values are replaced with the lowest value in the original partition. Maximum All values are replaced with the highest value in the original partition. Restarting every option The Restarting every option is only available when you select Specific Dimensions in the Table Calculations dialog box and when more than one dimension is selected in the field immediately below the Compute Using options—that is, when more than one dimension is defined as an addressing field. This option is not available when you’re defining a table calculation with Compute Using . You can use this setting to set a break (that is, restart of the calculation) in the view, based on a particular dimension. Restarting every can be useful in the following situations: With dates or other hierarchies, if you restart every month, as you bring in Year or Quarter, Tableau knows to partition automatically. With non-hierarchies, Restarting every affects the sorting.  If you want to address on Products and partition by State , but you want the products sorted by SUM(Sales) within each state, you need to include States as an addressing field under Specific Dimensions, but then restart every state.  Otherwise, the sort by SUM(Sales) would be based on each product's sum of sales across all states. For example, if you take the result of the Running Total calculation you added above, you can see the effect of Restarting every by doing the following: Click the SUM(Sales) field on the Marks card and choose Edit table calculation . In the Table Calculation dialog box, choose Specific Dimensions . Notice that two dimensions are now checked in the list box of dimensions: Quarter of Order Date and Month of Order Date . These are the addressing fields, and because more than one field is being used for addressing, Restarting every is now available. The choices available from the At the level drop-down list are: None Specifies that the calculation should be performed at the level of greatest granularity. This is the default option. This option does not change the view. Quarter of Order Date Specifies that the calculation should be performed at the quarter level. If you choose Quarter of Order Date, the view updates to show the effect of this change: The calculation now restarts after every quarter. If you click out of the Table Calculations dialog box (to dismiss the highlighting) you can see this more clearly. Click the X in the upper-right corner of the Table Calculations dialog box to close it. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. To do this, first add the primary table calculation, as shown above. Then continue as follows: Click the SUM(Sales) field on the Marks card and select Edit table calculation . In the Table Calculation dialog box, click Add Secondary Calculation . The Table Calculation dialog box expands to show a second panel: In the second panel, choose Percent Difference From as the Secondary Calculation Type . You do not need to change the Compute Using selection: Table (Across) is the right option. Click the X in the upper-right corner to dismiss the Table Calculation dialog box. Now your view shows what you needed: a year-over-year percent difference of a running total: See Also Create a table calculation The basics: addressing and partitioning Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.2. Create quick table calculations,2.2.3. Running total,https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations_definebasic_runningtotal.htm,"Table Calculation Types Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article describes the types of table calculations available in Tableau and when to use them. It uses simple examples to demonstrate how each calculation transforms data in a table. For more information on how to create  and configure table calculations, see Create a table calculation . Difference From calculation A Difference From table calculation computes the difference between the current value and another value in the table for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. You can see that in January, there was a 368 USD difference between sales in 2012 and 2013, and a 26,161 USD difference between sales in 2013 and 2014. Tip : When calculating year-over-year growth, the first year doesn't have a previous year to compare to, so the column is left blank. Hide the column that you don’t want to show to keep the calculation intact. For details, see Hide rows and columns . Why? If you filtered out the first year to remove it from the view, it would also remove it from the calculation so the second year doesn't have a previous year to compare to and is left blank. Instead of filtering, hiding the column keeps the calculation intact. Moving calculation For each mark in the view, a Moving Calculation table calculation (sometimes referred to as a rolling calculation) determines the value for a mark in the view by performing an aggregation (sum, average, minimum, or maximum) across a specified number of values before and/or after the current value. A moving calculation is typically used to smooth short-term fluctuations in your data so that you can see long-term trends. For example, with securities data there are so many fluctuations every day that it is hard to see the big picture through all the ups and downs. You can use a moving calculation to define a range of values to summarize using an aggregation of your choice. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Moving calculation to find out how sales totals are trending over time. To do this, you can transform each monthly total so that it averages the monthly total for it and the two previous months over time. You can see the average sales over time. For example, the value listed for December 2011 is the average sales for October, November, and December, 2011. The value listed for January, 2012 is the average sales for November and December, 2011, and January, 2012. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. For an example showing how to create a secondary calculation, see Running Total calculation . Percent Difference From calculation A Percent Difference From table calculation computes the difference between the current value and another value in the table as a percentage for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. Values are calculated as percentages. You can see that between January and February, 2011, there was a -66% difference in sales, but between February and March, 2011, there was a huge improvement of 1,058% sales. Percent From calculation A Percent From table calculation computes a value as a percentage of some other value—typically, as a percentage of the previous value in the table—for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent From table calculation to calculate the percentage of a previous value. For example, you can calculate what percentage of sales in January 2011, was made in February 2011. You can see that February, 2011 made 34% of the sales made in January, 2011; March, 2011 made 1,158% of the sales made in February, and so on. Percent of Total calculation For each mark in the view, a Percent of Total table calculation computes a value as a percentage of all values in the current partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent of Total table calculation to calculate the percentage of total sales each month makes within a quarter. For example, you can see that January, 2011 makes up 18.73% of sales made in Q1. Or you can calculate the percentage of total sales each month makes within a year. For example, you can see that January, 2011 makes up 2.88% of sales made in 2011. Percentile calculation For each mark in the view, a Percentile table calculation computes a percentile rank for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percentile table calculation to rank the total sales for each month in a year as a percentage, rather than a whole number (for example, 1 through 10). Since February made a very small amount of sales in 2012 compared to the overall total, it is ranked as 0.0% (or number 1 out of 12, since this example is Ascending, and therefore ranked from least to most). Sales in January, 2012 were a bit higher and were therefore ranked as 9.1% (or number 2 out of 12 months). Since November made the most sales in 2012, it is ranked as 100% (or number 12 out of 12). Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. Rank calculation For each mark in the view, a Rank table calculation computes a ranking for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Rank table calculation to calculate a ranking for each month in a year. You can see that, since November made the most amount of sales in 2012, it is ranked as number 1 (because the rank is in descending order, meaning it is ordered from most to least). Since February made the least amount of sales in 2012, it is ranked number 12. Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. For Rank table calculation, the default value is Descending . Rank Type One issue with Rank calculations is that there may be more than one mark with the same value. What would happen, for example, if Tables in the Central region and Appliances in the South region both had sales of exactly $36,729? Tableau lets you specify how to handle such cases by including an additional field in the Table Calculation dialog box when you set Calculation Type to Rank . The choices are listed below. The number sequence at the beginning of each option  show how each option would rank a hypothetical set of four values where two of the values are identical: Option Result Competition (1, 2, 2, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 2. The next value is then ranked 4. Modified Competition (1, 3, 3, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 3. The next value is then ranked 4. Dense (1, 2, 2, 3) Duplicate values are all given the same rank, which is the next number in the ranking sequence. The next value after the duplicate values is computed as though the duplicate values were a single value. Unique (1, 2, 3, 4) Duplicate values are given unique rankings, according to the direction in which the ranking is being computed. Running Total calculation For each mark in the view, a Running Total table calculation aggregates values cumulatively in a partition. It can do this by summing values, averaging values, or replacing all values with either the lowest or highest actual value. Suppose you are starting with the following text view, which shows sales totals broken out by year (from left to right) and by quarter and month (from top to bottom): Instead of absolute sales values, you want to see a running total of sales for each year, such that each month’s sales are added to all previous months’ sales. Create the Basic View Connect to the Sample - Superstore data source. Click and drag the Order Date field in the Data pane and drag it to the Columns shelf. The default date level is YEAR(Order Date). Click and drag Order Date again and drop it this time on the Rows shelf. Click on the right side of the field to open the context menu. Then choose Quarter . You will see two options named Quarter . Be sure to choose the first one. The field should now read QUARTER(Order Date) . Note: If you are creating the view on the web, the menu looks a bit different. Click and drag Order Date a third time and drop it on the Rows shelf to the right of QUARTER(Order Date) . Click on the right side of the field to open the context menu and this time choose Month (again, choose the first of two options named Month ). The field should now read MONTH(Order Date) . Drag Sales from the Data pane and drop it on Text on the Marks card. You now have the basic view, showing Sales by Order Date over a four-year period, by month, quarter, and year. Add a Running Total table calculation to the basic view Click the SUM(Sales) field on the Marks card and choose Add table calculation . In the Table Calculation dialog box, choose Running Total as the Calculation Type . Choose Table (Down) from the Compute Using list. The highlighting in the view shows how this Compute Using value sets the scope of the calculation in the view: Comparing the values in the original text view with the values in this view shows that the result is correct. The monthly values ascend steadily and the December value (484,247) is the same value you see if you show column grand totals (from the Analysis menu, select Totals > Show column grand totals ). Click the X in the upper-right corner of the Table Calculations dialog box to close it. The Running Total doesn’t have to be a sum For a Running Total table calculation, Tableau can update values cumulatively in other ways than summing. Choose one of the options from the drop-down list just below the Calculation Type field: Option Meaning Sum Each value is added to the previous value. Average The running total averages the current and all previous values. Minimum All values are replaced with the lowest value in the original partition. Maximum All values are replaced with the highest value in the original partition. Restarting every option The Restarting every option is only available when you select Specific Dimensions in the Table Calculations dialog box and when more than one dimension is selected in the field immediately below the Compute Using options—that is, when more than one dimension is defined as an addressing field. This option is not available when you’re defining a table calculation with Compute Using . You can use this setting to set a break (that is, restart of the calculation) in the view, based on a particular dimension. Restarting every can be useful in the following situations: With dates or other hierarchies, if you restart every month, as you bring in Year or Quarter, Tableau knows to partition automatically. With non-hierarchies, Restarting every affects the sorting.  If you want to address on Products and partition by State , but you want the products sorted by SUM(Sales) within each state, you need to include States as an addressing field under Specific Dimensions, but then restart every state.  Otherwise, the sort by SUM(Sales) would be based on each product's sum of sales across all states. For example, if you take the result of the Running Total calculation you added above, you can see the effect of Restarting every by doing the following: Click the SUM(Sales) field on the Marks card and choose Edit table calculation . In the Table Calculation dialog box, choose Specific Dimensions . Notice that two dimensions are now checked in the list box of dimensions: Quarter of Order Date and Month of Order Date . These are the addressing fields, and because more than one field is being used for addressing, Restarting every is now available. The choices available from the At the level drop-down list are: None Specifies that the calculation should be performed at the level of greatest granularity. This is the default option. This option does not change the view. Quarter of Order Date Specifies that the calculation should be performed at the quarter level. If you choose Quarter of Order Date, the view updates to show the effect of this change: The calculation now restarts after every quarter. If you click out of the Table Calculations dialog box (to dismiss the highlighting) you can see this more clearly. Click the X in the upper-right corner of the Table Calculations dialog box to close it. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. To do this, first add the primary table calculation, as shown above. Then continue as follows: Click the SUM(Sales) field on the Marks card and select Edit table calculation . In the Table Calculation dialog box, click Add Secondary Calculation . The Table Calculation dialog box expands to show a second panel: In the second panel, choose Percent Difference From as the Secondary Calculation Type . You do not need to change the Compute Using selection: Table (Across) is the right option. Click the X in the upper-right corner to dismiss the Table Calculation dialog box. Now your view shows what you needed: a year-over-year percent difference of a running total: See Also Create a table calculation The basics: addressing and partitioning Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.2. Create quick table calculations,2.2.4. Difference and percent of difference,https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations_definebasic_runningtotal.htm,"Table Calculation Types Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article describes the types of table calculations available in Tableau and when to use them. It uses simple examples to demonstrate how each calculation transforms data in a table. For more information on how to create  and configure table calculations, see Create a table calculation . Difference From calculation A Difference From table calculation computes the difference between the current value and another value in the table for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. You can see that in January, there was a 368 USD difference between sales in 2012 and 2013, and a 26,161 USD difference between sales in 2013 and 2014. Tip : When calculating year-over-year growth, the first year doesn't have a previous year to compare to, so the column is left blank. Hide the column that you don’t want to show to keep the calculation intact. For details, see Hide rows and columns . Why? If you filtered out the first year to remove it from the view, it would also remove it from the calculation so the second year doesn't have a previous year to compare to and is left blank. Instead of filtering, hiding the column keeps the calculation intact. Moving calculation For each mark in the view, a Moving Calculation table calculation (sometimes referred to as a rolling calculation) determines the value for a mark in the view by performing an aggregation (sum, average, minimum, or maximum) across a specified number of values before and/or after the current value. A moving calculation is typically used to smooth short-term fluctuations in your data so that you can see long-term trends. For example, with securities data there are so many fluctuations every day that it is hard to see the big picture through all the ups and downs. You can use a moving calculation to define a range of values to summarize using an aggregation of your choice. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Moving calculation to find out how sales totals are trending over time. To do this, you can transform each monthly total so that it averages the monthly total for it and the two previous months over time. You can see the average sales over time. For example, the value listed for December 2011 is the average sales for October, November, and December, 2011. The value listed for January, 2012 is the average sales for November and December, 2011, and January, 2012. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. For an example showing how to create a secondary calculation, see Running Total calculation . Percent Difference From calculation A Percent Difference From table calculation computes the difference between the current value and another value in the table as a percentage for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. Values are calculated as percentages. You can see that between January and February, 2011, there was a -66% difference in sales, but between February and March, 2011, there was a huge improvement of 1,058% sales. Percent From calculation A Percent From table calculation computes a value as a percentage of some other value—typically, as a percentage of the previous value in the table—for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent From table calculation to calculate the percentage of a previous value. For example, you can calculate what percentage of sales in January 2011, was made in February 2011. You can see that February, 2011 made 34% of the sales made in January, 2011; March, 2011 made 1,158% of the sales made in February, and so on. Percent of Total calculation For each mark in the view, a Percent of Total table calculation computes a value as a percentage of all values in the current partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent of Total table calculation to calculate the percentage of total sales each month makes within a quarter. For example, you can see that January, 2011 makes up 18.73% of sales made in Q1. Or you can calculate the percentage of total sales each month makes within a year. For example, you can see that January, 2011 makes up 2.88% of sales made in 2011. Percentile calculation For each mark in the view, a Percentile table calculation computes a percentile rank for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percentile table calculation to rank the total sales for each month in a year as a percentage, rather than a whole number (for example, 1 through 10). Since February made a very small amount of sales in 2012 compared to the overall total, it is ranked as 0.0% (or number 1 out of 12, since this example is Ascending, and therefore ranked from least to most). Sales in January, 2012 were a bit higher and were therefore ranked as 9.1% (or number 2 out of 12 months). Since November made the most sales in 2012, it is ranked as 100% (or number 12 out of 12). Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. Rank calculation For each mark in the view, a Rank table calculation computes a ranking for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Rank table calculation to calculate a ranking for each month in a year. You can see that, since November made the most amount of sales in 2012, it is ranked as number 1 (because the rank is in descending order, meaning it is ordered from most to least). Since February made the least amount of sales in 2012, it is ranked number 12. Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. For Rank table calculation, the default value is Descending . Rank Type One issue with Rank calculations is that there may be more than one mark with the same value. What would happen, for example, if Tables in the Central region and Appliances in the South region both had sales of exactly $36,729? Tableau lets you specify how to handle such cases by including an additional field in the Table Calculation dialog box when you set Calculation Type to Rank . The choices are listed below. The number sequence at the beginning of each option  show how each option would rank a hypothetical set of four values where two of the values are identical: Option Result Competition (1, 2, 2, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 2. The next value is then ranked 4. Modified Competition (1, 3, 3, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 3. The next value is then ranked 4. Dense (1, 2, 2, 3) Duplicate values are all given the same rank, which is the next number in the ranking sequence. The next value after the duplicate values is computed as though the duplicate values were a single value. Unique (1, 2, 3, 4) Duplicate values are given unique rankings, according to the direction in which the ranking is being computed. Running Total calculation For each mark in the view, a Running Total table calculation aggregates values cumulatively in a partition. It can do this by summing values, averaging values, or replacing all values with either the lowest or highest actual value. Suppose you are starting with the following text view, which shows sales totals broken out by year (from left to right) and by quarter and month (from top to bottom): Instead of absolute sales values, you want to see a running total of sales for each year, such that each month’s sales are added to all previous months’ sales. Create the Basic View Connect to the Sample - Superstore data source. Click and drag the Order Date field in the Data pane and drag it to the Columns shelf. The default date level is YEAR(Order Date). Click and drag Order Date again and drop it this time on the Rows shelf. Click on the right side of the field to open the context menu. Then choose Quarter . You will see two options named Quarter . Be sure to choose the first one. The field should now read QUARTER(Order Date) . Note: If you are creating the view on the web, the menu looks a bit different. Click and drag Order Date a third time and drop it on the Rows shelf to the right of QUARTER(Order Date) . Click on the right side of the field to open the context menu and this time choose Month (again, choose the first of two options named Month ). The field should now read MONTH(Order Date) . Drag Sales from the Data pane and drop it on Text on the Marks card. You now have the basic view, showing Sales by Order Date over a four-year period, by month, quarter, and year. Add a Running Total table calculation to the basic view Click the SUM(Sales) field on the Marks card and choose Add table calculation . In the Table Calculation dialog box, choose Running Total as the Calculation Type . Choose Table (Down) from the Compute Using list. The highlighting in the view shows how this Compute Using value sets the scope of the calculation in the view: Comparing the values in the original text view with the values in this view shows that the result is correct. The monthly values ascend steadily and the December value (484,247) is the same value you see if you show column grand totals (from the Analysis menu, select Totals > Show column grand totals ). Click the X in the upper-right corner of the Table Calculations dialog box to close it. The Running Total doesn’t have to be a sum For a Running Total table calculation, Tableau can update values cumulatively in other ways than summing. Choose one of the options from the drop-down list just below the Calculation Type field: Option Meaning Sum Each value is added to the previous value. Average The running total averages the current and all previous values. Minimum All values are replaced with the lowest value in the original partition. Maximum All values are replaced with the highest value in the original partition. Restarting every option The Restarting every option is only available when you select Specific Dimensions in the Table Calculations dialog box and when more than one dimension is selected in the field immediately below the Compute Using options—that is, when more than one dimension is defined as an addressing field. This option is not available when you’re defining a table calculation with Compute Using . You can use this setting to set a break (that is, restart of the calculation) in the view, based on a particular dimension. Restarting every can be useful in the following situations: With dates or other hierarchies, if you restart every month, as you bring in Year or Quarter, Tableau knows to partition automatically. With non-hierarchies, Restarting every affects the sorting.  If you want to address on Products and partition by State , but you want the products sorted by SUM(Sales) within each state, you need to include States as an addressing field under Specific Dimensions, but then restart every state.  Otherwise, the sort by SUM(Sales) would be based on each product's sum of sales across all states. For example, if you take the result of the Running Total calculation you added above, you can see the effect of Restarting every by doing the following: Click the SUM(Sales) field on the Marks card and choose Edit table calculation . In the Table Calculation dialog box, choose Specific Dimensions . Notice that two dimensions are now checked in the list box of dimensions: Quarter of Order Date and Month of Order Date . These are the addressing fields, and because more than one field is being used for addressing, Restarting every is now available. The choices available from the At the level drop-down list are: None Specifies that the calculation should be performed at the level of greatest granularity. This is the default option. This option does not change the view. Quarter of Order Date Specifies that the calculation should be performed at the quarter level. If you choose Quarter of Order Date, the view updates to show the effect of this change: The calculation now restarts after every quarter. If you click out of the Table Calculations dialog box (to dismiss the highlighting) you can see this more clearly. Click the X in the upper-right corner of the Table Calculations dialog box to close it. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. To do this, first add the primary table calculation, as shown above. Then continue as follows: Click the SUM(Sales) field on the Marks card and select Edit table calculation . In the Table Calculation dialog box, click Add Secondary Calculation . The Table Calculation dialog box expands to show a second panel: In the second panel, choose Percent Difference From as the Secondary Calculation Type . You do not need to change the Compute Using selection: Table (Across) is the right option. Click the X in the upper-right corner to dismiss the Table Calculation dialog box. Now your view shows what you needed: a year-over-year percent difference of a running total: See Also Create a table calculation The basics: addressing and partitioning Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.2. Create quick table calculations,2.2.5. Percentile,https://help.tableau.com/current/pro/desktop/en-us/calculations_tablecalculations_definebasic_runningtotal.htm,"Table Calculation Types Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article describes the types of table calculations available in Tableau and when to use them. It uses simple examples to demonstrate how each calculation transforms data in a table. For more information on how to create  and configure table calculations, see Create a table calculation . Difference From calculation A Difference From table calculation computes the difference between the current value and another value in the table for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. You can see that in January, there was a 368 USD difference between sales in 2012 and 2013, and a 26,161 USD difference between sales in 2013 and 2014. Tip : When calculating year-over-year growth, the first year doesn't have a previous year to compare to, so the column is left blank. Hide the column that you don’t want to show to keep the calculation intact. For details, see Hide rows and columns . Why? If you filtered out the first year to remove it from the view, it would also remove it from the calculation so the second year doesn't have a previous year to compare to and is left blank. Instead of filtering, hiding the column keeps the calculation intact. Moving calculation For each mark in the view, a Moving Calculation table calculation (sometimes referred to as a rolling calculation) determines the value for a mark in the view by performing an aggregation (sum, average, minimum, or maximum) across a specified number of values before and/or after the current value. A moving calculation is typically used to smooth short-term fluctuations in your data so that you can see long-term trends. For example, with securities data there are so many fluctuations every day that it is hard to see the big picture through all the ups and downs. You can use a moving calculation to define a range of values to summarize using an aggregation of your choice. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Moving calculation to find out how sales totals are trending over time. To do this, you can transform each monthly total so that it averages the monthly total for it and the two previous months over time. You can see the average sales over time. For example, the value listed for December 2011 is the average sales for October, November, and December, 2011. The value listed for January, 2012 is the average sales for November and December, 2011, and January, 2012. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. For an example showing how to create a secondary calculation, see Running Total calculation . Percent Difference From calculation A Percent Difference From table calculation computes the difference between the current value and another value in the table as a percentage for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent Difference From table calculation to calculate how sales fluctuate  (how much they go up or down) between the years for each month. Values are calculated as percentages. You can see that between January and February, 2011, there was a -66% difference in sales, but between February and March, 2011, there was a huge improvement of 1,058% sales. Percent From calculation A Percent From table calculation computes a value as a percentage of some other value—typically, as a percentage of the previous value in the table—for each mark in the visualization. With a Difference From , Percent Difference From , or Percent From calculation, there are always two values to consider: the current value, and the value from which the difference should be calculated. In most cases, you want to calculate the difference between the current value and the previous value, as in the procedure above. But in some cases you may want something different. To specify from which value the difference should be calculated: Right-click a measure in the view and select Add Table Calculation . In the Table Calculation dialog box, for Relative to , select one of the following options: Previous Calculates the difference between the current value and the previous value in the partition. This is the default value. Next Calculates the difference between the current value and the next value in the partition. First Calculates the difference between the current value and the first value in the partition. Last Calculates the difference between the current value and the last value in the partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent From table calculation to calculate the percentage of a previous value. For example, you can calculate what percentage of sales in January 2011, was made in February 2011. You can see that February, 2011 made 34% of the sales made in January, 2011; March, 2011 made 1,158% of the sales made in February, and so on. Percent of Total calculation For each mark in the view, a Percent of Total table calculation computes a value as a percentage of all values in the current partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percent of Total table calculation to calculate the percentage of total sales each month makes within a quarter. For example, you can see that January, 2011 makes up 18.73% of sales made in Q1. Or you can calculate the percentage of total sales each month makes within a year. For example, you can see that January, 2011 makes up 2.88% of sales made in 2011. Percentile calculation For each mark in the view, a Percentile table calculation computes a percentile rank for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Percentile table calculation to rank the total sales for each month in a year as a percentage, rather than a whole number (for example, 1 through 10). Since February made a very small amount of sales in 2012 compared to the overall total, it is ranked as 0.0% (or number 1 out of 12, since this example is Ascending, and therefore ranked from least to most). Sales in January, 2012 were a bit higher and were therefore ranked as 9.1% (or number 2 out of 12 months). Since November made the most sales in 2012, it is ranked as 100% (or number 12 out of 12). Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. Rank calculation For each mark in the view, a Rank table calculation computes a ranking for each value in a partition. Example Consider the text table below. It shows the total sales per month for 2011, 2012, 2013, and 2014 for a large store chain. You can use a Rank table calculation to calculate a ranking for each month in a year. You can see that, since November made the most amount of sales in 2012, it is ranked as number 1 (because the rank is in descending order, meaning it is ordered from most to least). Since February made the least amount of sales in 2012, it is ranked number 12. Descending vs. Ascending Ascending order ranks values from least to most. Descending order ranks values from most to least. For Rank table calculation, the default value is Descending . Rank Type One issue with Rank calculations is that there may be more than one mark with the same value. What would happen, for example, if Tables in the Central region and Appliances in the South region both had sales of exactly $36,729? Tableau lets you specify how to handle such cases by including an additional field in the Table Calculation dialog box when you set Calculation Type to Rank . The choices are listed below. The number sequence at the beginning of each option  show how each option would rank a hypothetical set of four values where two of the values are identical: Option Result Competition (1, 2, 2, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 2. The next value is then ranked 4. Modified Competition (1, 3, 3, 4) Identical values are assigned an identical rank. The highest value is ranked 1 and then the next two, identical values, are both are ranked 3. The next value is then ranked 4. Dense (1, 2, 2, 3) Duplicate values are all given the same rank, which is the next number in the ranking sequence. The next value after the duplicate values is computed as though the duplicate values were a single value. Unique (1, 2, 3, 4) Duplicate values are given unique rankings, according to the direction in which the ranking is being computed. Running Total calculation For each mark in the view, a Running Total table calculation aggregates values cumulatively in a partition. It can do this by summing values, averaging values, or replacing all values with either the lowest or highest actual value. Suppose you are starting with the following text view, which shows sales totals broken out by year (from left to right) and by quarter and month (from top to bottom): Instead of absolute sales values, you want to see a running total of sales for each year, such that each month’s sales are added to all previous months’ sales. Create the Basic View Connect to the Sample - Superstore data source. Click and drag the Order Date field in the Data pane and drag it to the Columns shelf. The default date level is YEAR(Order Date). Click and drag Order Date again and drop it this time on the Rows shelf. Click on the right side of the field to open the context menu. Then choose Quarter . You will see two options named Quarter . Be sure to choose the first one. The field should now read QUARTER(Order Date) . Note: If you are creating the view on the web, the menu looks a bit different. Click and drag Order Date a third time and drop it on the Rows shelf to the right of QUARTER(Order Date) . Click on the right side of the field to open the context menu and this time choose Month (again, choose the first of two options named Month ). The field should now read MONTH(Order Date) . Drag Sales from the Data pane and drop it on Text on the Marks card. You now have the basic view, showing Sales by Order Date over a four-year period, by month, quarter, and year. Add a Running Total table calculation to the basic view Click the SUM(Sales) field on the Marks card and choose Add table calculation . In the Table Calculation dialog box, choose Running Total as the Calculation Type . Choose Table (Down) from the Compute Using list. The highlighting in the view shows how this Compute Using value sets the scope of the calculation in the view: Comparing the values in the original text view with the values in this view shows that the result is correct. The monthly values ascend steadily and the December value (484,247) is the same value you see if you show column grand totals (from the Analysis menu, select Totals > Show column grand totals ). Click the X in the upper-right corner of the Table Calculations dialog box to close it. The Running Total doesn’t have to be a sum For a Running Total table calculation, Tableau can update values cumulatively in other ways than summing. Choose one of the options from the drop-down list just below the Calculation Type field: Option Meaning Sum Each value is added to the previous value. Average The running total averages the current and all previous values. Minimum All values are replaced with the lowest value in the original partition. Maximum All values are replaced with the highest value in the original partition. Restarting every option The Restarting every option is only available when you select Specific Dimensions in the Table Calculations dialog box and when more than one dimension is selected in the field immediately below the Compute Using options—that is, when more than one dimension is defined as an addressing field. This option is not available when you’re defining a table calculation with Compute Using . You can use this setting to set a break (that is, restart of the calculation) in the view, based on a particular dimension. Restarting every can be useful in the following situations: With dates or other hierarchies, if you restart every month, as you bring in Year or Quarter, Tableau knows to partition automatically. With non-hierarchies, Restarting every affects the sorting.  If you want to address on Products and partition by State , but you want the products sorted by SUM(Sales) within each state, you need to include States as an addressing field under Specific Dimensions, but then restart every state.  Otherwise, the sort by SUM(Sales) would be based on each product's sum of sales across all states. For example, if you take the result of the Running Total calculation you added above, you can see the effect of Restarting every by doing the following: Click the SUM(Sales) field on the Marks card and choose Edit table calculation . In the Table Calculation dialog box, choose Specific Dimensions . Notice that two dimensions are now checked in the list box of dimensions: Quarter of Order Date and Month of Order Date . These are the addressing fields, and because more than one field is being used for addressing, Restarting every is now available. The choices available from the At the level drop-down list are: None Specifies that the calculation should be performed at the level of greatest granularity. This is the default option. This option does not change the view. Quarter of Order Date Specifies that the calculation should be performed at the quarter level. If you choose Quarter of Order Date, the view updates to show the effect of this change: The calculation now restarts after every quarter. If you click out of the Table Calculations dialog box (to dismiss the highlighting) you can see this more clearly. Click the X in the upper-right corner of the Table Calculations dialog box to close it. Add Secondary Calculation With Running Total and Moving Calculation table calculations, you have the option to transform values twice to obtain the result you want—that is, to add a secondary table calculation on top of the primary table calculation. For example, you could add an initial table calculation to calculate the running total for sales per month within each individual year, and then a secondary calculation to calculate the year-over-year percent difference for each month from one year to the next. To do this, first add the primary table calculation, as shown above. Then continue as follows: Click the SUM(Sales) field on the Marks card and select Edit table calculation . In the Table Calculation dialog box, click Add Secondary Calculation . The Table Calculation dialog box expands to show a second panel: In the second panel, choose Percent Difference From as the Secondary Calculation Type . You do not need to change the Compute Using selection: Table (Across) is the right option. Click the X in the upper-right corner to dismiss the Table Calculation dialog box. Now your view shows what you needed: a year-over-year percent difference of a running total: See Also Create a table calculation The basics: addressing and partitioning Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.2. Create quick table calculations,2.2.6. Compound growth rate,https://kb.tableau.com/articles/HowTo/calculating-compounded-annual-growth-rate,"Published: 07 Mar 2015 Last Modified Date: 20 Jul 2023 Question How to calculate a compound annual growth rate. Environment Tableau Desktop Answer The following instructions can be reviewed in the workbook attached below. Step 1 - Create a Parameter Click the drop-down arrow to the right of Dimensions on the Data pane and select Create Parameter. Name the parameter ""N Years"" In Data Type > select Integer In Current Value > input 2 Leave the Display format and Allowable values as they are. Click OK . Step 2 - Create a Calculated Field Select Analysis > Create Calculated Field > name it ""CAGR"". Enter in the formula below: POWER(ZN(SUM([Sales]))/LOOKUP(ZN(SUM([Sales])),-[N Years]), ZN(1/[N Years])) - 1 Click OK . Step 3 - Build the view Drag ""Order Date"" to Columns and drill down to ""Quarter"" Drag ""Sales"" to Rows Drag ""CAGR"" to Rows Right-click on ""CAGR"" and select Dual Axis Right-click on ""CAGR"" and select Edit Table Calculation > Choose Specific Dimension > Choose Year of Order Date only From the Sales Card, drag Sales to Details and select a chart as desired (in this example, the Bar chart is selected) From the CAGR Card, drag CAGR to Details and select a chart as desired (in this example, the Line chart is selected) Right-click the measure in the CAGR Card and select Edit Table Calculation > Choose Specific Dimension > Choose Year of Order Date Drag Sales to ToolTip if desired Step 4 (optional) - View the data in a crosstab Righ-click the sheet and select Duplicate as Crosstab Swap Rows and Columns as desired Move “Year of Order Date” to the right side To view these steps in action, see the video below: Additional Information Compound annual growth rate is calculated using the following formula, w here N is the number of years: ((End Value/Beginning Value)^(1/n)) – 1 Value at current date / Value at beginning date To the power of (1/number of periods between the two dates) Minus 1 Note: You can also confirm that your CAGR calculation is correct by using this third party website: http://www.investopedia.com/calculator/cagr.aspx Did this article resolve the issue? Thank you for providing your feedback on the effectiveness of the article. Click here to return to our Support page. Open new Case Open a new case Continue Searching Click here to go to our Support page. Knowledge Base Get detailed answers and how-to step-by-step instructions for your issues and technical questions. Community Find and share solutions with our active community through forums, user groups and ideas. Product Help Browse a complete list of product manuals and guides. Available online, offline and PDF formats. Training and Tutorials Learn how to master Tableau’s products with our on-demand, live or class room training."
Domain 2: Explore and Analyze Data,2.3. Create custom table calculations,2.3.1. Year to date,https://kb.tableau.com/articles/howto/creating-year-to-date-and-month-to-date-calculations,"Published: 11 Mar 2017 Last Modified Date: 20 Jul 2023 Question How to create and display Year to Date and Month to Date calculations. Environment Tableau Desktop Answer Option 1 (YTD) Select Analysis > Create Calculated Field Name the field YTD Sales, enter the following calculation, then click OK: [Order Date] <= TODAY() AND DATETRUNC( ""year"", [Order Date]) = DATETRUNC(""year"", TODAY() ) Drag YTD onto the filter shelf and select ""True"" Option 2 (MTD) Select Analysis > Create Calculated Field Name the field MTD Sales, enter the following calculation, then click OK: [Order Date] <= TODAY() AND DATETRUNC( ""month"", [Order Date]) = DATETRUNC(""month"", TODAY() ) Drag MTD onto the filter shelf and select ""True"" Option 3 (Dynamic MTD/YTD) Create a parameter and name it "" YTD/MTD "" - String Create a parameter and name it ""Anchor Date"" - Date Create a parameter and name it ""Offset"" - Int Select Analysis > Create Calculated Field Name the field Dynamic Sales, enter the following calculation, then click OK: [Order Date] <= DATEADD( [Date Part],[Offset], [Anchor Date] ) AND DATETRUNC( [Date Part], [Order Date]) = DATETRUNC([Date Part], DATEADD([Date Part], [Offset], [Anchor Date] )) Drag MTD onto the filter shelf and select ""True"" Additional Information To view the steps showed in the below video, please expand the above section. Note: the video has no sound. Did this article resolve the issue? Thank you for providing your feedback on the effectiveness of the article. Click here to return to our Support page. Open new Case Open a new case Continue Searching Click here to go to our Support page. Knowledge Base Get detailed answers and how-to step-by-step instructions for your issues and technical questions. Community Find and share solutions with our active community through forums, user groups and ideas. Product Help Browse a complete list of product manuals and guides. Available online, offline and PDF formats. Training and Tutorials Learn how to master Tableau’s products with our on-demand, live or class room training."
Domain 2: Explore and Analyze Data,2.3. Create custom table calculations,2.3.2. Month to date,https://kb.tableau.com/articles/howto/creating-year-to-date-and-month-to-date-calculations,"Published: 11 Mar 2017 Last Modified Date: 20 Jul 2023 Question How to create and display Year to Date and Month to Date calculations. Environment Tableau Desktop Answer Option 1 (YTD) Select Analysis > Create Calculated Field Name the field YTD Sales, enter the following calculation, then click OK: [Order Date] <= TODAY() AND DATETRUNC( ""year"", [Order Date]) = DATETRUNC(""year"", TODAY() ) Drag YTD onto the filter shelf and select ""True"" Option 2 (MTD) Select Analysis > Create Calculated Field Name the field MTD Sales, enter the following calculation, then click OK: [Order Date] <= TODAY() AND DATETRUNC( ""month"", [Order Date]) = DATETRUNC(""month"", TODAY() ) Drag MTD onto the filter shelf and select ""True"" Option 3 (Dynamic MTD/YTD) Create a parameter and name it "" YTD/MTD "" - String Create a parameter and name it ""Anchor Date"" - Date Create a parameter and name it ""Offset"" - Int Select Analysis > Create Calculated Field Name the field Dynamic Sales, enter the following calculation, then click OK: [Order Date] <= DATEADD( [Date Part],[Offset], [Anchor Date] ) AND DATETRUNC( [Date Part], [Order Date]) = DATETRUNC([Date Part], DATEADD([Date Part], [Offset], [Anchor Date] )) Drag MTD onto the filter shelf and select ""True"" Additional Information To view the steps showed in the below video, please expand the above section. Note: the video has no sound. Did this article resolve the issue? Thank you for providing your feedback on the effectiveness of the article. Click here to return to our Support page. Open new Case Open a new case Continue Searching Click here to go to our Support page. Knowledge Base Get detailed answers and how-to step-by-step instructions for your issues and technical questions. Community Find and share solutions with our active community through forums, user groups and ideas. Product Help Browse a complete list of product manuals and guides. Available online, offline and PDF formats. Training and Tutorials Learn how to master Tableau’s products with our on-demand, live or class room training."
Domain 2: Explore and Analyze Data,2.3. Create custom table calculations,2.3.3. Year over year,https://kb.tableau.com/articles/HowTo/calculating-year-over-year-growth-with-individual-measures,"Published: 28 Oct 2013 Last Modified Date: 20 Jul 2023 Question How to calculate year-over-year growth when figures are individual measures. For example, in the formula below, Year 1 and Year 2 are separate measures. Environment Tableau Desktop Answer Create a calculated field with a formula similar to the following: SUM([<Year 2>] - [<Year 1>])/ SUM([<Year 1>]) Did this article resolve the issue? Thank you for providing your feedback on the effectiveness of the article. Click here to return to our Support page. Open new Case Open a new case Continue Searching Click here to go to our Support page. Knowledge Base Get detailed answers and how-to step-by-step instructions for your issues and technical questions. Community Find and share solutions with our active community through forums, user groups and ideas. Product Help Browse a complete list of product manuals and guides. Available online, offline and PDF formats. Training and Tutorials Learn how to master Tableau’s products with our on-demand, live or class room training."
Domain 2: Explore and Analyze Data,2.3. Create custom table calculations,2.3.4. Index,https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm,"Table Calculation Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces table calculation functions and their uses in Tableau. It also demonstrates how to create a table calculation using the calculation editor. Why use table calculation functions Table calculation functions allow you to perform computations on values in a table. For example, you can calculate the percent of total an individual sale is for the year, or for several years. Table calculation functions available in Tableau FIRST( ) Returns the number of rows from the current row to the first row in the partition. For example, the view below shows quarterly sales. When FIRST() is computed within the Date partition, the offset of the first row from the second row is -1. Example When the current row index is 3, FIRST() = -2 . INDEX( ) Returns the index of the current row in the partition, without any sorting with regard to value. The first row index starts at 1. For example, the table below shows quarterly sales. When INDEX() is computed within the Date partition, the index of each row is 1, 2, 3, 4..., etc. Example For the third row in the partition, INDEX() = 3 . LAST( ) Returns the number of rows from the current row to the last row in the partition. For example, the table below shows quarterly sales. When LAST() is computed within the Date partition, the offset of the last row from the second row is 5. Example When the current row index is 3 of 7, LAST() = 4 . LOOKUP(expression, [offset]) Returns the value of the expression in a target row, specified as a relative offset from the current row. Use FIRST() + n and LAST() - n as part of your offset definition for a target relative to the first/last rows in the partition. If offset is omitted, the row to compare to can be set on the field menu. This function returns NULL if the target row cannot be determined. The view below shows quarterly sales. When LOOKUP (SUM(Sales), 2) is computed within the Date partition, each row shows the sales value from 2 quarters into the future. Example LOOKUP(SUM([Profit]), FIRST()+2) computes the SUM(Profit) in the third row of the partition. MODEL_EXTENSION_BOOL (model_name, arguments, expression) Returns the boolean result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_BOOL (""isProfitable"",""inputSales"", ""inputCosts"", SUM([Sales]), SUM([Costs])) MODEL_EXTENSION_INT (model_name, arguments, expression) Returns an integer result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_INT (""getPopulation"", ""inputCity"", ""inputState"", MAX([City]), MAX ([State])) MODEL_EXTENSION_REAL (model_name, arguments, expression) Returns a real result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_REAL (""profitRatio"", ""inputSales"", ""inputCosts"", SUM([Sales]), SUM([Costs])) MODEL_EXTENSION_STRING (model_name, arguments, expression) Returns the string result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_STR (""mostPopulatedCity"", ""inputCountry"", ""inputYear"", MAX ([Country]), MAX([Year])) MODEL_PERCENTILE(target_expression, predictor_expression(s)) Returns the probability (between 0 and 1) of the expected value being less than or equal to the observed mark, defined by the target expression and other predictors. This is the Posterior Predictive Distribution Function, also known as the Cumulative Distribution Function (CDF). This function is the inverse of MODEL_QUANTILE. For information on predictive modeling functions, see How Predictive Modeling Functions Work in Tableau . Example The following formula returns the quantile of the mark for sum of sales, adjusted for count of orders. MODEL_PERCENTILE(SUM([Sales]), COUNT([Orders])) MODEL_QUANTILE(quantile, target_expression, predictor_expression(s)) Returns a target numeric value within the probable range defined by the target expression and other predictors, at a specified quantile. This is the Posterior Predictive Quantile. This function is the inverse of MODEL_PERCENTILE. For information on predictive modeling functions, see How Predictive Modeling Functions Work in Tableau . Example The following formula returns the median (0.5) predicted sum of sales, adjusted for count of orders. MODEL_QUANTILE(0.5, SUM([Sales]), COUNT([Orders])) PREVIOUS_VALUE(expression) Returns the 				value of this calculation in the previous row. Returns the given 			expression if the current row is the first row of the partition. Example SUM([Profit]) * PREVIOUS_VALUE(1) computes the running product of SUM(Profit). RANK(expression, ['asc' | 'desc']) Returns the standard competition rank for the current row in the partition. Identical values are assigned an identical rank.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 2, 2, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . Example The following image shows the effect of the various ranking functions (RANK, RANK_DENSE, RANK_MODIFIED, RANK_PERCENTILE, and RANK_UNIQUE) on a set of values. The data set contains information on 14 students (StudentA through StudentN); the Age column shows the current age of each student (all students are between 17 and 20 years of age). The remaining columns show the effect of each rank function on the set of age values, always assuming the default order (ascending or descending) for the function. RANK_DENSE(expression, ['asc' | 'desc']) Returns the dense rank for the current row in the partition. Identical values are assigned an identical rank, but no gaps are inserted into the number sequence.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (3, 2, 2, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_MODIFIED(expression, ['asc' | 'desc']) Returns the modified competition rank for the current row in the partition. Identical values are assigned an identical rank.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 3, 3, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_PERCENTILE(expression, ['asc' | 'desc']) Returns the percentile rank for the current row in the partition. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is ascending. With this function, the set of values (6, 9, 9, 14) would be ranked (0.00, 0.67, 0.67, 1.00). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_UNIQUE(expression, ['asc' | 'desc']) Returns the unique rank for the current row in the partition. Identical values are assigned different ranks. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 2, 3, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RUNNING_AVG(expression) Returns the running average of the given expression, from the first row in the partition to the current row. The view below shows quarterly sales. When RUNNING_AVG(SUM([Sales]) is computed within the Date partition, the result is a running average of the sales values for each quarter. Example RUNNING_AVG(SUM([Profit])) computes the running average of SUM(Profit). RUNNING_COUNT(expression) Returns the running count of the given expression, from the first row in the partition to the current row. Example RUNNING_COUNT(SUM([Profit])) computes the running count of SUM(Profit). RUNNING_MAX(expression) Returns the running maximum of the given expression, from the first row in the partition to the current row. Example RUNNING_MAX(SUM([Profit])) computes the running maximum of SUM(Profit). RUNNING_MIN(expression) Returns the running minimum of the given expression, from the first row in the partition to the current row. Example RUNNING_MIN(SUM([Profit])) computes the running minimum of SUM(Profit). RUNNING_SUM(expression) Returns the running sum of the given expression, from the first row in the partition to the current row. Example RUNNING_SUM(SUM([Profit])) computes the running sum of SUM(Profit) SIZE() Returns the number of rows in the partition. For example, the view below shows quarterly sales. Within the Date partition, there are seven rows so the Size() of the Date partition is 7. Example SIZE() = 5 when the current partition contains five rows. SCRIPT_BOOL Returns a Boolean result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.). In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_BOOL(""is.finite(.arg1)"", SUM([Profit])) The next example returns True for store IDs in Washington state, and False otherwise. This example could be the definition for a calculated field titled IsStoreInWA. SCRIPT_BOOL('grepl("".*_WA"", .arg1, perl=TRUE)',ATTR([Store ID])) A command for Python would take this form: SCRIPT_BOOL(""return map(lambda x : x > 0, _arg1)"", SUM([Profit])) SCRIPT_INT Returns an integer result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_INT(""is.finite(.arg1)"", SUM([Profit])) In the next example, k-means clustering is used to create three clusters: SCRIPT_INT('result <- kmeans(data.frame(.arg1,.arg2,.arg3,.arg4), 3);result$cluster;', SUM([Petal length]), SUM([Petal width]),SUM([Sepal length]),SUM([Sepal width])) A command for Python would take this form: SCRIPT_INT(""return map(lambda x : int(x * 5), _arg1)"", SUM([Profit])) SCRIPT_REAL Returns a real result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_REAL(""is.finite(.arg1)"", SUM([Profit])) The next example converts temperature values from Celsius to Fahrenheit. SCRIPT_REAL('library(udunits2);ud.convert(.arg1, ""celsius"", ""degree_fahrenheit"")',AVG([Temperature])) A command for Python would take this form: SCRIPT_REAL(""return map(lambda x : x * 0.5, _arg1)"", SUM([Profit])) SCRIPT_STR Returns a string result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example,  .arg1 is equal to SUM([Profit]): SCRIPT_STR(""is.finite(.arg1)"", SUM([Profit])) The next example extracts a state abbreviation from a more complicated string (in the original form 13XSL_CA, A13_WA): SCRIPT_STR('gsub("".*_"", """", .arg1)',ATTR([Store ID])) A command for Python would take this form: SCRIPT_STR(""return map(lambda x : x[:2], _arg1)"", ATTR([Region])) TOTAL(expression) Returns the total for the given expression in a table calculation partition. Example Assume you are starting with this view: You open the calculation editor and create a new field which you name Totality : You then drop Totality on Text, to replace SUM(Sales) . Your view changes such that it sums values based on the default Compute Using value: This raises the question, What is the default Compute Using value? If you right-click (Control-click on a Mac) Totality in the Data pane and choose Edit , there is now an additional bit of information available: The default Compute Using value is Table (Across) . The result is that Totality is summing the values across each row of your table. Thus, the value that you see across each row is the sum of the values from the original version of the table. The values in the 2011/Q1 row in the original table were $8601,  $6579, $44262, and $15006. The values in the table after Totality replaces SUM(Sales) are all $74,448, which is the sum of the four original values. Notice the triangle next to Totality after you drop it on Text: This indicates that this field is using a table calculation. You can right-click the field and choose Edit Table Calculation to redirect your function to a different Compute Using value. For example, you could set it to Table (Down) . In that case, your table would look like this: WINDOW_AVG(expression, [start, end]) Returns the average of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window average within the Date partition returns the average sales across all dates. Example WINDOW_AVG(SUM([Profit]), FIRST()+1, 0) computes the average of SUM(Profit) from the second row to the current row. WINDOW_CORR(expression1, expression2, [start, end]) Returns the Pearson correlation coefficient of two expressions within the window. The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is used. The Pearson correlation measures the linear relationship between two variables. Results range from -1 to +1 inclusive, where 1 denotes an exact positive linear relationship, as when a positive change in one variable implies a positive change of corresponding magnitude in the other, 0 denotes no linear relationship between the variance, and −1 is an exact negative relationship. There is an equivalent aggregation fuction: CORR. See Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the Pearson correlation of SUM(Profit) and SUM(Sales) from the five previous rows to the current row. WINDOW_CORR(SUM[Profit]), SUM([Sales]), -5, 0) WINDOW_COUNT(expression, [start, end]) Returns the count of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_COUNT(SUM([Profit]), FIRST()+1, 0) computes the count of SUM(Profit) from the second row to the current row WINDOW_COVAR(expression1, expression2, [start, end]) Returns the sample covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end arguments are omitted, the window is the entire partition. Sample covariance uses the number of non-null data points n - 1 to normalize the covariance calculation, rather than n, which is used by the population covariance (with the WINDOW_COVARP function). Sample covariance is the appropriate choice when the data is a random sample that is being used to estimate the covariance for a larger population. There is an equivalent aggregation fuction: COVAR. See Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the sample covariance of SUM(Profit) and SUM(Sales) from the two previous rows to the current row. WINDOW_COVAR(SUM([Profit]), SUM([Sales]), -2, 0) WINDOW_COVARP(expression1, expression2, [start, end]) Returns the population covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is used. Population covariance is sample covariance multiplied by (n-1)/n, where n is the total number of non-null data points. Population covariance is the appropriate choice when there is data available for all items of interest as opposed to when there is only a random subset of items, in which case sample covariance (with the WINDOW_COVAR function) is appropriate. There is an equivalent aggregation fuction: COVARP. Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the population covariance of SUM(Profit) and SUM(Sales) from the two previous rows to the current row. WINDOW_COVARP(SUM([Profit]), SUM([Sales]), -2, 0) WINDOW_MEDIAN(expression, [start, end]) Returns the median of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly profit. A window median within the Date partition returns the median profit across all dates. Example WINDOW_MEDIAN(SUM([Profit]), FIRST()+1, 0) computes the median of SUM(Profit) from the second row to the current row. WINDOW_MAX(expression, [start, end]) Returns the maximum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window maximum within the Date partition returns the maximum sales across all dates. Example WINDOW_MAX(SUM([Profit]), FIRST()+1, 0) computes the maximum of SUM(Profit) from the second row to the current row. WINDOW_MIN(expression, [start, end]) Returns the minimum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window minimum within the Date partition returns the minimum sales across all dates. Example WINDOW_MIN(SUM([Profit]), FIRST()+1, 0) computes the minimum of SUM(Profit) from the second row to the current row. WINDOW_PERCENTILE(expression, number, [start, end]) Returns the value corresponding to the specified percentile within the window.  The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_PERCENTILE(SUM([Profit]), 0.75, -2, 0) returns the 75th percentile for SUM(Profit) from the two previous rows to the current row. WINDOW_STDEV(expression, [start, end]) Returns the sample standard deviation of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_STDEV(SUM([Profit]), FIRST()+1, 0) computes the standard deviation of SUM(Profit) from the second row to the current row. WINDOW_STDEVP(expression, [start, end]) Returns the biased standard deviation of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_STDEVP(SUM([Profit]), FIRST()+1, 0) computes the standard deviation of SUM(Profit) from the second row to the current row. WINDOW_SUM(expression, [start, end]) Returns the sum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window sum computed within the Date partition returns the summation of sales across all quarters. Example WINDOW_SUM(SUM([Profit]), FIRST()+1, 0) computes the sum of SUM(Profit) from the second row to the current row. WINDOW_VAR(expression, [start, end]) Returns the sample variance of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_VAR((SUM([Profit])), FIRST()+1, 0) computes the variance of SUM(Profit) from the second row to the current row. WINDOW_VARP(expression, [start, end]) Returns the biased variance of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_VARP(SUM([Profit]), FIRST()+1, 0) computes the variance of SUM(Profit) from the second row to the current row. Create a table calculation using the calculation editor Follow along with the steps below to learn how to create a table calculation using the calculation editor. Note : There are several ways to create table calculations in Tableau. This example demonstrates only one of those ways. For more information, see Transform Values with Table Calculations (Link opens in a new window) . Step 1: Create the visualization In Tableau Desktop, connect to the Sample-Superstore saved data source, which comes with Tableau. Navigate to a worksheet. From the Data pane, under Dimensions, drag Order Date to the Columns shelf. From the Data pane, under Dimensions, drag Sub-Category to the Rows shelf. From the Data pane, under Measures, drag Sales to Text on the Marks card. Your visualization updates to a text table. Step 2: Create the table calculation Select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field, Running Sum of Profit. Enter the following formula: RUNNING_SUM(SUM([Profit])) This formula calculates the running sum of profit sales. It is computed across the entire table. When finished, click OK . The new table calculation field appears under Measures in the Data pane. Just like your other fields, you can use it in one or more visualizations. Step 3: Use the table calculation in the visualization From the Data pane, under Measures, drag Running Sum of Profit to Color on the Marks card. On the Marks card, click the Mark Type drop-down and select Square . The visualization updates to a highlight table: Step 4: Edit the table calculation On the Marks card, right-click Running Sum of Profit and select Edit Table Calculation . In the Table Calculation dialog box that opens, under Compute Using, select Table (down) . The visualization updates to the following: See Also Create a table calculation (Link opens in a new window) Table Calculation Types Customize Table Calculations (Link opens in a new window) Quick Table Calculations Functions in Tableau Tableau Functions (by Category) Tableau Functions (Alphabetical) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.3. Create custom table calculations,2.3.5. Ranking,https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm,"Table Calculation Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces table calculation functions and their uses in Tableau. It also demonstrates how to create a table calculation using the calculation editor. Why use table calculation functions Table calculation functions allow you to perform computations on values in a table. For example, you can calculate the percent of total an individual sale is for the year, or for several years. Table calculation functions available in Tableau FIRST( ) Returns the number of rows from the current row to the first row in the partition. For example, the view below shows quarterly sales. When FIRST() is computed within the Date partition, the offset of the first row from the second row is -1. Example When the current row index is 3, FIRST() = -2 . INDEX( ) Returns the index of the current row in the partition, without any sorting with regard to value. The first row index starts at 1. For example, the table below shows quarterly sales. When INDEX() is computed within the Date partition, the index of each row is 1, 2, 3, 4..., etc. Example For the third row in the partition, INDEX() = 3 . LAST( ) Returns the number of rows from the current row to the last row in the partition. For example, the table below shows quarterly sales. When LAST() is computed within the Date partition, the offset of the last row from the second row is 5. Example When the current row index is 3 of 7, LAST() = 4 . LOOKUP(expression, [offset]) Returns the value of the expression in a target row, specified as a relative offset from the current row. Use FIRST() + n and LAST() - n as part of your offset definition for a target relative to the first/last rows in the partition. If offset is omitted, the row to compare to can be set on the field menu. This function returns NULL if the target row cannot be determined. The view below shows quarterly sales. When LOOKUP (SUM(Sales), 2) is computed within the Date partition, each row shows the sales value from 2 quarters into the future. Example LOOKUP(SUM([Profit]), FIRST()+2) computes the SUM(Profit) in the third row of the partition. MODEL_EXTENSION_BOOL (model_name, arguments, expression) Returns the boolean result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_BOOL (""isProfitable"",""inputSales"", ""inputCosts"", SUM([Sales]), SUM([Costs])) MODEL_EXTENSION_INT (model_name, arguments, expression) Returns an integer result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_INT (""getPopulation"", ""inputCity"", ""inputState"", MAX([City]), MAX ([State])) MODEL_EXTENSION_REAL (model_name, arguments, expression) Returns a real result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_REAL (""profitRatio"", ""inputSales"", ""inputCosts"", SUM([Sales]), SUM([Costs])) MODEL_EXTENSION_STRING (model_name, arguments, expression) Returns the string result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_STR (""mostPopulatedCity"", ""inputCountry"", ""inputYear"", MAX ([Country]), MAX([Year])) MODEL_PERCENTILE(target_expression, predictor_expression(s)) Returns the probability (between 0 and 1) of the expected value being less than or equal to the observed mark, defined by the target expression and other predictors. This is the Posterior Predictive Distribution Function, also known as the Cumulative Distribution Function (CDF). This function is the inverse of MODEL_QUANTILE. For information on predictive modeling functions, see How Predictive Modeling Functions Work in Tableau . Example The following formula returns the quantile of the mark for sum of sales, adjusted for count of orders. MODEL_PERCENTILE(SUM([Sales]), COUNT([Orders])) MODEL_QUANTILE(quantile, target_expression, predictor_expression(s)) Returns a target numeric value within the probable range defined by the target expression and other predictors, at a specified quantile. This is the Posterior Predictive Quantile. This function is the inverse of MODEL_PERCENTILE. For information on predictive modeling functions, see How Predictive Modeling Functions Work in Tableau . Example The following formula returns the median (0.5) predicted sum of sales, adjusted for count of orders. MODEL_QUANTILE(0.5, SUM([Sales]), COUNT([Orders])) PREVIOUS_VALUE(expression) Returns the 				value of this calculation in the previous row. Returns the given 			expression if the current row is the first row of the partition. Example SUM([Profit]) * PREVIOUS_VALUE(1) computes the running product of SUM(Profit). RANK(expression, ['asc' | 'desc']) Returns the standard competition rank for the current row in the partition. Identical values are assigned an identical rank.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 2, 2, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . Example The following image shows the effect of the various ranking functions (RANK, RANK_DENSE, RANK_MODIFIED, RANK_PERCENTILE, and RANK_UNIQUE) on a set of values. The data set contains information on 14 students (StudentA through StudentN); the Age column shows the current age of each student (all students are between 17 and 20 years of age). The remaining columns show the effect of each rank function on the set of age values, always assuming the default order (ascending or descending) for the function. RANK_DENSE(expression, ['asc' | 'desc']) Returns the dense rank for the current row in the partition. Identical values are assigned an identical rank, but no gaps are inserted into the number sequence.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (3, 2, 2, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_MODIFIED(expression, ['asc' | 'desc']) Returns the modified competition rank for the current row in the partition. Identical values are assigned an identical rank.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 3, 3, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_PERCENTILE(expression, ['asc' | 'desc']) Returns the percentile rank for the current row in the partition. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is ascending. With this function, the set of values (6, 9, 9, 14) would be ranked (0.00, 0.67, 0.67, 1.00). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_UNIQUE(expression, ['asc' | 'desc']) Returns the unique rank for the current row in the partition. Identical values are assigned different ranks. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 2, 3, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RUNNING_AVG(expression) Returns the running average of the given expression, from the first row in the partition to the current row. The view below shows quarterly sales. When RUNNING_AVG(SUM([Sales]) is computed within the Date partition, the result is a running average of the sales values for each quarter. Example RUNNING_AVG(SUM([Profit])) computes the running average of SUM(Profit). RUNNING_COUNT(expression) Returns the running count of the given expression, from the first row in the partition to the current row. Example RUNNING_COUNT(SUM([Profit])) computes the running count of SUM(Profit). RUNNING_MAX(expression) Returns the running maximum of the given expression, from the first row in the partition to the current row. Example RUNNING_MAX(SUM([Profit])) computes the running maximum of SUM(Profit). RUNNING_MIN(expression) Returns the running minimum of the given expression, from the first row in the partition to the current row. Example RUNNING_MIN(SUM([Profit])) computes the running minimum of SUM(Profit). RUNNING_SUM(expression) Returns the running sum of the given expression, from the first row in the partition to the current row. Example RUNNING_SUM(SUM([Profit])) computes the running sum of SUM(Profit) SIZE() Returns the number of rows in the partition. For example, the view below shows quarterly sales. Within the Date partition, there are seven rows so the Size() of the Date partition is 7. Example SIZE() = 5 when the current partition contains five rows. SCRIPT_BOOL Returns a Boolean result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.). In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_BOOL(""is.finite(.arg1)"", SUM([Profit])) The next example returns True for store IDs in Washington state, and False otherwise. This example could be the definition for a calculated field titled IsStoreInWA. SCRIPT_BOOL('grepl("".*_WA"", .arg1, perl=TRUE)',ATTR([Store ID])) A command for Python would take this form: SCRIPT_BOOL(""return map(lambda x : x > 0, _arg1)"", SUM([Profit])) SCRIPT_INT Returns an integer result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_INT(""is.finite(.arg1)"", SUM([Profit])) In the next example, k-means clustering is used to create three clusters: SCRIPT_INT('result <- kmeans(data.frame(.arg1,.arg2,.arg3,.arg4), 3);result$cluster;', SUM([Petal length]), SUM([Petal width]),SUM([Sepal length]),SUM([Sepal width])) A command for Python would take this form: SCRIPT_INT(""return map(lambda x : int(x * 5), _arg1)"", SUM([Profit])) SCRIPT_REAL Returns a real result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_REAL(""is.finite(.arg1)"", SUM([Profit])) The next example converts temperature values from Celsius to Fahrenheit. SCRIPT_REAL('library(udunits2);ud.convert(.arg1, ""celsius"", ""degree_fahrenheit"")',AVG([Temperature])) A command for Python would take this form: SCRIPT_REAL(""return map(lambda x : x * 0.5, _arg1)"", SUM([Profit])) SCRIPT_STR Returns a string result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example,  .arg1 is equal to SUM([Profit]): SCRIPT_STR(""is.finite(.arg1)"", SUM([Profit])) The next example extracts a state abbreviation from a more complicated string (in the original form 13XSL_CA, A13_WA): SCRIPT_STR('gsub("".*_"", """", .arg1)',ATTR([Store ID])) A command for Python would take this form: SCRIPT_STR(""return map(lambda x : x[:2], _arg1)"", ATTR([Region])) TOTAL(expression) Returns the total for the given expression in a table calculation partition. Example Assume you are starting with this view: You open the calculation editor and create a new field which you name Totality : You then drop Totality on Text, to replace SUM(Sales) . Your view changes such that it sums values based on the default Compute Using value: This raises the question, What is the default Compute Using value? If you right-click (Control-click on a Mac) Totality in the Data pane and choose Edit , there is now an additional bit of information available: The default Compute Using value is Table (Across) . The result is that Totality is summing the values across each row of your table. Thus, the value that you see across each row is the sum of the values from the original version of the table. The values in the 2011/Q1 row in the original table were $8601,  $6579, $44262, and $15006. The values in the table after Totality replaces SUM(Sales) are all $74,448, which is the sum of the four original values. Notice the triangle next to Totality after you drop it on Text: This indicates that this field is using a table calculation. You can right-click the field and choose Edit Table Calculation to redirect your function to a different Compute Using value. For example, you could set it to Table (Down) . In that case, your table would look like this: WINDOW_AVG(expression, [start, end]) Returns the average of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window average within the Date partition returns the average sales across all dates. Example WINDOW_AVG(SUM([Profit]), FIRST()+1, 0) computes the average of SUM(Profit) from the second row to the current row. WINDOW_CORR(expression1, expression2, [start, end]) Returns the Pearson correlation coefficient of two expressions within the window. The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is used. The Pearson correlation measures the linear relationship between two variables. Results range from -1 to +1 inclusive, where 1 denotes an exact positive linear relationship, as when a positive change in one variable implies a positive change of corresponding magnitude in the other, 0 denotes no linear relationship between the variance, and −1 is an exact negative relationship. There is an equivalent aggregation fuction: CORR. See Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the Pearson correlation of SUM(Profit) and SUM(Sales) from the five previous rows to the current row. WINDOW_CORR(SUM[Profit]), SUM([Sales]), -5, 0) WINDOW_COUNT(expression, [start, end]) Returns the count of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_COUNT(SUM([Profit]), FIRST()+1, 0) computes the count of SUM(Profit) from the second row to the current row WINDOW_COVAR(expression1, expression2, [start, end]) Returns the sample covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end arguments are omitted, the window is the entire partition. Sample covariance uses the number of non-null data points n - 1 to normalize the covariance calculation, rather than n, which is used by the population covariance (with the WINDOW_COVARP function). Sample covariance is the appropriate choice when the data is a random sample that is being used to estimate the covariance for a larger population. There is an equivalent aggregation fuction: COVAR. See Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the sample covariance of SUM(Profit) and SUM(Sales) from the two previous rows to the current row. WINDOW_COVAR(SUM([Profit]), SUM([Sales]), -2, 0) WINDOW_COVARP(expression1, expression2, [start, end]) Returns the population covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is used. Population covariance is sample covariance multiplied by (n-1)/n, where n is the total number of non-null data points. Population covariance is the appropriate choice when there is data available for all items of interest as opposed to when there is only a random subset of items, in which case sample covariance (with the WINDOW_COVAR function) is appropriate. There is an equivalent aggregation fuction: COVARP. Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the population covariance of SUM(Profit) and SUM(Sales) from the two previous rows to the current row. WINDOW_COVARP(SUM([Profit]), SUM([Sales]), -2, 0) WINDOW_MEDIAN(expression, [start, end]) Returns the median of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly profit. A window median within the Date partition returns the median profit across all dates. Example WINDOW_MEDIAN(SUM([Profit]), FIRST()+1, 0) computes the median of SUM(Profit) from the second row to the current row. WINDOW_MAX(expression, [start, end]) Returns the maximum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window maximum within the Date partition returns the maximum sales across all dates. Example WINDOW_MAX(SUM([Profit]), FIRST()+1, 0) computes the maximum of SUM(Profit) from the second row to the current row. WINDOW_MIN(expression, [start, end]) Returns the minimum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window minimum within the Date partition returns the minimum sales across all dates. Example WINDOW_MIN(SUM([Profit]), FIRST()+1, 0) computes the minimum of SUM(Profit) from the second row to the current row. WINDOW_PERCENTILE(expression, number, [start, end]) Returns the value corresponding to the specified percentile within the window.  The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_PERCENTILE(SUM([Profit]), 0.75, -2, 0) returns the 75th percentile for SUM(Profit) from the two previous rows to the current row. WINDOW_STDEV(expression, [start, end]) Returns the sample standard deviation of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_STDEV(SUM([Profit]), FIRST()+1, 0) computes the standard deviation of SUM(Profit) from the second row to the current row. WINDOW_STDEVP(expression, [start, end]) Returns the biased standard deviation of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_STDEVP(SUM([Profit]), FIRST()+1, 0) computes the standard deviation of SUM(Profit) from the second row to the current row. WINDOW_SUM(expression, [start, end]) Returns the sum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window sum computed within the Date partition returns the summation of sales across all quarters. Example WINDOW_SUM(SUM([Profit]), FIRST()+1, 0) computes the sum of SUM(Profit) from the second row to the current row. WINDOW_VAR(expression, [start, end]) Returns the sample variance of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_VAR((SUM([Profit])), FIRST()+1, 0) computes the variance of SUM(Profit) from the second row to the current row. WINDOW_VARP(expression, [start, end]) Returns the biased variance of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_VARP(SUM([Profit]), FIRST()+1, 0) computes the variance of SUM(Profit) from the second row to the current row. Create a table calculation using the calculation editor Follow along with the steps below to learn how to create a table calculation using the calculation editor. Note : There are several ways to create table calculations in Tableau. This example demonstrates only one of those ways. For more information, see Transform Values with Table Calculations (Link opens in a new window) . Step 1: Create the visualization In Tableau Desktop, connect to the Sample-Superstore saved data source, which comes with Tableau. Navigate to a worksheet. From the Data pane, under Dimensions, drag Order Date to the Columns shelf. From the Data pane, under Dimensions, drag Sub-Category to the Rows shelf. From the Data pane, under Measures, drag Sales to Text on the Marks card. Your visualization updates to a text table. Step 2: Create the table calculation Select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field, Running Sum of Profit. Enter the following formula: RUNNING_SUM(SUM([Profit])) This formula calculates the running sum of profit sales. It is computed across the entire table. When finished, click OK . The new table calculation field appears under Measures in the Data pane. Just like your other fields, you can use it in one or more visualizations. Step 3: Use the table calculation in the visualization From the Data pane, under Measures, drag Running Sum of Profit to Color on the Marks card. On the Marks card, click the Mark Type drop-down and select Square . The visualization updates to a highlight table: Step 4: Edit the table calculation On the Marks card, right-click Running Sum of Profit and select Edit Table Calculation . In the Table Calculation dialog box that opens, under Compute Using, select Table (down) . The visualization updates to the following: See Also Create a table calculation (Link opens in a new window) Table Calculation Types Customize Table Calculations (Link opens in a new window) Quick Table Calculations Functions in Tableau Tableau Functions (by Category) Tableau Functions (Alphabetical) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.3. Create custom table calculations,2.3.6. First-last,https://help.tableau.com/current/pro/desktop/en-us/functions_functions_tablecalculation.htm,"Table Calculation Functions Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article introduces table calculation functions and their uses in Tableau. It also demonstrates how to create a table calculation using the calculation editor. Why use table calculation functions Table calculation functions allow you to perform computations on values in a table. For example, you can calculate the percent of total an individual sale is for the year, or for several years. Table calculation functions available in Tableau FIRST( ) Returns the number of rows from the current row to the first row in the partition. For example, the view below shows quarterly sales. When FIRST() is computed within the Date partition, the offset of the first row from the second row is -1. Example When the current row index is 3, FIRST() = -2 . INDEX( ) Returns the index of the current row in the partition, without any sorting with regard to value. The first row index starts at 1. For example, the table below shows quarterly sales. When INDEX() is computed within the Date partition, the index of each row is 1, 2, 3, 4..., etc. Example For the third row in the partition, INDEX() = 3 . LAST( ) Returns the number of rows from the current row to the last row in the partition. For example, the table below shows quarterly sales. When LAST() is computed within the Date partition, the offset of the last row from the second row is 5. Example When the current row index is 3 of 7, LAST() = 4 . LOOKUP(expression, [offset]) Returns the value of the expression in a target row, specified as a relative offset from the current row. Use FIRST() + n and LAST() - n as part of your offset definition for a target relative to the first/last rows in the partition. If offset is omitted, the row to compare to can be set on the field menu. This function returns NULL if the target row cannot be determined. The view below shows quarterly sales. When LOOKUP (SUM(Sales), 2) is computed within the Date partition, each row shows the sales value from 2 quarters into the future. Example LOOKUP(SUM([Profit]), FIRST()+2) computes the SUM(Profit) in the third row of the partition. MODEL_EXTENSION_BOOL (model_name, arguments, expression) Returns the boolean result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_BOOL (""isProfitable"",""inputSales"", ""inputCosts"", SUM([Sales]), SUM([Costs])) MODEL_EXTENSION_INT (model_name, arguments, expression) Returns an integer result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_INT (""getPopulation"", ""inputCity"", ""inputState"", MAX([City]), MAX ([State])) MODEL_EXTENSION_REAL (model_name, arguments, expression) Returns a real result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_REAL (""profitRatio"", ""inputSales"", ""inputCosts"", SUM([Sales]), SUM([Costs])) MODEL_EXTENSION_STRING (model_name, arguments, expression) Returns the string result of an expression as calculated by a named model deployed on a TabPy external service. Model_name is the name of the deployed analytics model you want to use. Each argument is a single string that sets the input values that the deployed model accepts, and is defined by the analytics model. Use expressions to define the values that are sent from Tableau to the analytics model. Be sure to use aggregation functions (SUM, AVG, etc.) to aggregate the results. When using the function, the data types and order of the expressions must match that of the input arguments. Example MODEL_EXTENSION_STR (""mostPopulatedCity"", ""inputCountry"", ""inputYear"", MAX ([Country]), MAX([Year])) MODEL_PERCENTILE(target_expression, predictor_expression(s)) Returns the probability (between 0 and 1) of the expected value being less than or equal to the observed mark, defined by the target expression and other predictors. This is the Posterior Predictive Distribution Function, also known as the Cumulative Distribution Function (CDF). This function is the inverse of MODEL_QUANTILE. For information on predictive modeling functions, see How Predictive Modeling Functions Work in Tableau . Example The following formula returns the quantile of the mark for sum of sales, adjusted for count of orders. MODEL_PERCENTILE(SUM([Sales]), COUNT([Orders])) MODEL_QUANTILE(quantile, target_expression, predictor_expression(s)) Returns a target numeric value within the probable range defined by the target expression and other predictors, at a specified quantile. This is the Posterior Predictive Quantile. This function is the inverse of MODEL_PERCENTILE. For information on predictive modeling functions, see How Predictive Modeling Functions Work in Tableau . Example The following formula returns the median (0.5) predicted sum of sales, adjusted for count of orders. MODEL_QUANTILE(0.5, SUM([Sales]), COUNT([Orders])) PREVIOUS_VALUE(expression) Returns the 				value of this calculation in the previous row. Returns the given 			expression if the current row is the first row of the partition. Example SUM([Profit]) * PREVIOUS_VALUE(1) computes the running product of SUM(Profit). RANK(expression, ['asc' | 'desc']) Returns the standard competition rank for the current row in the partition. Identical values are assigned an identical rank.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 2, 2, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . Example The following image shows the effect of the various ranking functions (RANK, RANK_DENSE, RANK_MODIFIED, RANK_PERCENTILE, and RANK_UNIQUE) on a set of values. The data set contains information on 14 students (StudentA through StudentN); the Age column shows the current age of each student (all students are between 17 and 20 years of age). The remaining columns show the effect of each rank function on the set of age values, always assuming the default order (ascending or descending) for the function. RANK_DENSE(expression, ['asc' | 'desc']) Returns the dense rank for the current row in the partition. Identical values are assigned an identical rank, but no gaps are inserted into the number sequence.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (3, 2, 2, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_MODIFIED(expression, ['asc' | 'desc']) Returns the modified competition rank for the current row in the partition. Identical values are assigned an identical rank.  Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 3, 3, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_PERCENTILE(expression, ['asc' | 'desc']) Returns the percentile rank for the current row in the partition. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is ascending. With this function, the set of values (6, 9, 9, 14) would be ranked (0.00, 0.67, 0.67, 1.00). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RANK_UNIQUE(expression, ['asc' | 'desc']) Returns the unique rank for the current row in the partition. Identical values are assigned different ranks. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default is descending. With this function, the set of values (6, 9, 9, 14) would be ranked (4, 2, 3, 1). Nulls are ignored in ranking functions. They are not numbered and they do not count against the total number of records in  percentile rank calculations. For information on different ranking options, see Rank calculation . RUNNING_AVG(expression) Returns the running average of the given expression, from the first row in the partition to the current row. The view below shows quarterly sales. When RUNNING_AVG(SUM([Sales]) is computed within the Date partition, the result is a running average of the sales values for each quarter. Example RUNNING_AVG(SUM([Profit])) computes the running average of SUM(Profit). RUNNING_COUNT(expression) Returns the running count of the given expression, from the first row in the partition to the current row. Example RUNNING_COUNT(SUM([Profit])) computes the running count of SUM(Profit). RUNNING_MAX(expression) Returns the running maximum of the given expression, from the first row in the partition to the current row. Example RUNNING_MAX(SUM([Profit])) computes the running maximum of SUM(Profit). RUNNING_MIN(expression) Returns the running minimum of the given expression, from the first row in the partition to the current row. Example RUNNING_MIN(SUM([Profit])) computes the running minimum of SUM(Profit). RUNNING_SUM(expression) Returns the running sum of the given expression, from the first row in the partition to the current row. Example RUNNING_SUM(SUM([Profit])) computes the running sum of SUM(Profit) SIZE() Returns the number of rows in the partition. For example, the view below shows quarterly sales. Within the Date partition, there are seven rows so the Size() of the Date partition is 7. Example SIZE() = 5 when the current partition contains five rows. SCRIPT_BOOL Returns a Boolean result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.). In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_BOOL(""is.finite(.arg1)"", SUM([Profit])) The next example returns True for store IDs in Washington state, and False otherwise. This example could be the definition for a calculated field titled IsStoreInWA. SCRIPT_BOOL('grepl("".*_WA"", .arg1, perl=TRUE)',ATTR([Store ID])) A command for Python would take this form: SCRIPT_BOOL(""return map(lambda x : x > 0, _arg1)"", SUM([Profit])) SCRIPT_INT Returns an integer result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_INT(""is.finite(.arg1)"", SUM([Profit])) In the next example, k-means clustering is used to create three clusters: SCRIPT_INT('result <- kmeans(data.frame(.arg1,.arg2,.arg3,.arg4), 3);result$cluster;', SUM([Petal length]), SUM([Petal width]),SUM([Sepal length]),SUM([Sepal width])) A command for Python would take this form: SCRIPT_INT(""return map(lambda x : int(x * 5), _arg1)"", SUM([Profit])) SCRIPT_REAL Returns a real result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example, .arg1 is equal to SUM([Profit]): SCRIPT_REAL(""is.finite(.arg1)"", SUM([Profit])) The next example converts temperature values from Celsius to Fahrenheit. SCRIPT_REAL('library(udunits2);ud.convert(.arg1, ""celsius"", ""degree_fahrenheit"")',AVG([Temperature])) A command for Python would take this form: SCRIPT_REAL(""return map(lambda x : x * 0.5, _arg1)"", SUM([Profit])) SCRIPT_STR Returns a string result from the specified expression. The expression is passed directly to a running analytics extension service instance. In R expressions, use .arg n (with a leading period) to reference parameters (.arg1, .arg2, etc.) In Python expressions, use _arg n (with a leading underscore). Examples In this R example,  .arg1 is equal to SUM([Profit]): SCRIPT_STR(""is.finite(.arg1)"", SUM([Profit])) The next example extracts a state abbreviation from a more complicated string (in the original form 13XSL_CA, A13_WA): SCRIPT_STR('gsub("".*_"", """", .arg1)',ATTR([Store ID])) A command for Python would take this form: SCRIPT_STR(""return map(lambda x : x[:2], _arg1)"", ATTR([Region])) TOTAL(expression) Returns the total for the given expression in a table calculation partition. Example Assume you are starting with this view: You open the calculation editor and create a new field which you name Totality : You then drop Totality on Text, to replace SUM(Sales) . Your view changes such that it sums values based on the default Compute Using value: This raises the question, What is the default Compute Using value? If you right-click (Control-click on a Mac) Totality in the Data pane and choose Edit , there is now an additional bit of information available: The default Compute Using value is Table (Across) . The result is that Totality is summing the values across each row of your table. Thus, the value that you see across each row is the sum of the values from the original version of the table. The values in the 2011/Q1 row in the original table were $8601,  $6579, $44262, and $15006. The values in the table after Totality replaces SUM(Sales) are all $74,448, which is the sum of the four original values. Notice the triangle next to Totality after you drop it on Text: This indicates that this field is using a table calculation. You can right-click the field and choose Edit Table Calculation to redirect your function to a different Compute Using value. For example, you could set it to Table (Down) . In that case, your table would look like this: WINDOW_AVG(expression, [start, end]) Returns the average of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window average within the Date partition returns the average sales across all dates. Example WINDOW_AVG(SUM([Profit]), FIRST()+1, 0) computes the average of SUM(Profit) from the second row to the current row. WINDOW_CORR(expression1, expression2, [start, end]) Returns the Pearson correlation coefficient of two expressions within the window. The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is used. The Pearson correlation measures the linear relationship between two variables. Results range from -1 to +1 inclusive, where 1 denotes an exact positive linear relationship, as when a positive change in one variable implies a positive change of corresponding magnitude in the other, 0 denotes no linear relationship between the variance, and −1 is an exact negative relationship. There is an equivalent aggregation fuction: CORR. See Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the Pearson correlation of SUM(Profit) and SUM(Sales) from the five previous rows to the current row. WINDOW_CORR(SUM[Profit]), SUM([Sales]), -5, 0) WINDOW_COUNT(expression, [start, end]) Returns the count of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_COUNT(SUM([Profit]), FIRST()+1, 0) computes the count of SUM(Profit) from the second row to the current row WINDOW_COVAR(expression1, expression2, [start, end]) Returns the sample covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end arguments are omitted, the window is the entire partition. Sample covariance uses the number of non-null data points n - 1 to normalize the covariance calculation, rather than n, which is used by the population covariance (with the WINDOW_COVARP function). Sample covariance is the appropriate choice when the data is a random sample that is being used to estimate the covariance for a larger population. There is an equivalent aggregation fuction: COVAR. See Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the sample covariance of SUM(Profit) and SUM(Sales) from the two previous rows to the current row. WINDOW_COVAR(SUM([Profit]), SUM([Sales]), -2, 0) WINDOW_COVARP(expression1, expression2, [start, end]) Returns the population covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is used. Population covariance is sample covariance multiplied by (n-1)/n, where n is the total number of non-null data points. Population covariance is the appropriate choice when there is data available for all items of interest as opposed to when there is only a random subset of items, in which case sample covariance (with the WINDOW_COVAR function) is appropriate. There is an equivalent aggregation fuction: COVARP. Tableau Functions (Alphabetical) (Link opens in a new window) . Example The following formula returns the population covariance of SUM(Profit) and SUM(Sales) from the two previous rows to the current row. WINDOW_COVARP(SUM([Profit]), SUM([Sales]), -2, 0) WINDOW_MEDIAN(expression, [start, end]) Returns the median of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly profit. A window median within the Date partition returns the median profit across all dates. Example WINDOW_MEDIAN(SUM([Profit]), FIRST()+1, 0) computes the median of SUM(Profit) from the second row to the current row. WINDOW_MAX(expression, [start, end]) Returns the maximum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window maximum within the Date partition returns the maximum sales across all dates. Example WINDOW_MAX(SUM([Profit]), FIRST()+1, 0) computes the maximum of SUM(Profit) from the second row to the current row. WINDOW_MIN(expression, [start, end]) Returns the minimum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window minimum within the Date partition returns the minimum sales across all dates. Example WINDOW_MIN(SUM([Profit]), FIRST()+1, 0) computes the minimum of SUM(Profit) from the second row to the current row. WINDOW_PERCENTILE(expression, number, [start, end]) Returns the value corresponding to the specified percentile within the window.  The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_PERCENTILE(SUM([Profit]), 0.75, -2, 0) returns the 75th percentile for SUM(Profit) from the two previous rows to the current row. WINDOW_STDEV(expression, [start, end]) Returns the sample standard deviation of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_STDEV(SUM([Profit]), FIRST()+1, 0) computes the standard deviation of SUM(Profit) from the second row to the current row. WINDOW_STDEVP(expression, [start, end]) Returns the biased standard deviation of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_STDEVP(SUM([Profit]), FIRST()+1, 0) computes the standard deviation of SUM(Profit) from the second row to the current row. WINDOW_SUM(expression, [start, end]) Returns the sum of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. For example, the view below shows quarterly sales. A window sum computed within the Date partition returns the summation of sales across all quarters. Example WINDOW_SUM(SUM([Profit]), FIRST()+1, 0) computes the sum of SUM(Profit) from the second row to the current row. WINDOW_VAR(expression, [start, end]) Returns the sample variance of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_VAR((SUM([Profit])), FIRST()+1, 0) computes the variance of SUM(Profit) from the second row to the current row. WINDOW_VARP(expression, [start, end]) Returns the biased variance of the expression within the window. The window is defined by means of offsets from the current row. Use FIRST()+n and LAST()-n for offsets from the first or last row in the partition. If the start and end are omitted, the entire partition is used. Example WINDOW_VARP(SUM([Profit]), FIRST()+1, 0) computes the variance of SUM(Profit) from the second row to the current row. Create a table calculation using the calculation editor Follow along with the steps below to learn how to create a table calculation using the calculation editor. Note : There are several ways to create table calculations in Tableau. This example demonstrates only one of those ways. For more information, see Transform Values with Table Calculations (Link opens in a new window) . Step 1: Create the visualization In Tableau Desktop, connect to the Sample-Superstore saved data source, which comes with Tableau. Navigate to a worksheet. From the Data pane, under Dimensions, drag Order Date to the Columns shelf. From the Data pane, under Dimensions, drag Sub-Category to the Rows shelf. From the Data pane, under Measures, drag Sales to Text on the Marks card. Your visualization updates to a text table. Step 2: Create the table calculation Select Analysis > Create Calculated Field . In the calculation editor that opens, do the following: Name the calculated field, Running Sum of Profit. Enter the following formula: RUNNING_SUM(SUM([Profit])) This formula calculates the running sum of profit sales. It is computed across the entire table. When finished, click OK . The new table calculation field appears under Measures in the Data pane. Just like your other fields, you can use it in one or more visualizations. Step 3: Use the table calculation in the visualization From the Data pane, under Measures, drag Running Sum of Profit to Color on the Marks card. On the Marks card, click the Mark Type drop-down and select Square . The visualization updates to a highlight table: Step 4: Edit the table calculation On the Marks card, right-click Running Sum of Profit and select Edit Table Calculation . In the Table Calculation dialog box that opens, under Compute Using, select Table (down) . The visualization updates to the following: See Also Create a table calculation (Link opens in a new window) Table Calculation Types Customize Table Calculations (Link opens in a new window) Quick Table Calculations Functions in Tableau Tableau Functions (by Category) Tableau Functions (Alphabetical) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,2.4.1. Apply filters to dimensions and measures,https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,2.4.1. Apply filters to dimensions and measures,https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,"2.4.2. Configure filter settings including Top N, Bottom N, include, exclude, wildcard, and conditional",https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,"2.4.2. Configure filter settings including Top N, Bottom N, include, exclude, wildcard, and conditional",https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,"2.4.2. Configure filter settings including Top N, Bottom N, include, exclude, wildcard, and conditional",https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,"2.4.2. Configure filter settings including Top N, Bottom N, include, exclude, wildcard, and conditional",https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,"2.4.2. Configure filter settings including Top N, Bottom N, include, exclude, wildcard, and conditional",https://help.tableau.com/current/pro/desktop/en-us/filtering.htm,"Filter Data from Your Views Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filtering is an essential part of analyzing data. This article describes the many ways you can filter data from your view. It also describes how you can  display interactive filters in the view, and format filters in the view. Filtering Order of Operations Before you begin filtering data in Tableau, it's important to understand the order in which Tableau executes filters in your workbook. Tableau performs actions on your view in a very specific order; this is called the Order of Operations. Filters are executed in the following order: Extract filters Data source filters Context filters Filters on dimensions (whether on the Filters shelf or in filter cards in the view) Filters on measures (whether on the Filters shelf or in filter cards in the view) To learn more, see Tableau's Order of Operations (Link opens in a new window) . Note : When you drag a discrete dimension to the Filters shelf, the Filter dialog box offers four tabs for filtering: General, Wildcard, Condition, and Top. The settings on each of these tabs are additive starting with the General tab; what you set on each tab will affect the filter results on each tab to the right. For details on the Filter dialog box, see Drag dimensions, measures, and date fields to the Filters shelf and Filter categorical data (dimensions) . Select to keep or exclude data points in your view You can filter individual data points (marks), or a selection of data points from your view. For example, if you have a scatter plot with outliers, you can exclude them from the view so you can better focus on the rest of the data. To filter marks from the view, select a single mark (data point) or click and drag in the view to select several marks. On the tooltip that appears, you can: Select Keep Only to keep only the selected marks in the view. Select Exclude to remove the selected marks from the view. Note: These filtering options are not available if a Wildcard Match filter is already specified for the same field. See Drag dimensions, measures, and date fields to the Filters shelf (Link opens in a new window) to learn more about Wildcard Match filters. Select headers to filter data You can also select headers to filter them from your view. To filter entire rows or columns of data from your view, select the header in the view. On the tooltip that appears, select to Exclude or Keep Only the selected data. When you select a table header that is part of a hierarchy, all of the next level headers are also selected. For example, the view shown below consists of two unrelated dimensions placed on the Columns shelf, and two levels of the same hierarchy placed on the Rows shelf. The selected row headers include the Furniture member of the Category dimension, and the Binders and Labels members of the Sub-category dimension. When Furniture is selected, all members from the next (inner) level in the hierarchy are automatically selected. In this case, that means the Bookcases, Chairs, Furnishings, and Tables members. Drag dimensions, measures, and date fields to the Filters shelf Another way to create a filter is to drag a field directly from the Data pane to the Filters shelf. When you add a field to the Filters shelf, the Filter dialog box opens so you can define the filter. The Filter dialog box differs depending on whether you are filtering categorical data (dimensions), quantitative data (measures), or date fields. Filter categorical data (dimensions) Dimensions contain discrete categorical data, so filtering this type of field generally involves selecting the values to include or exclude. When you drag a dimension from the Data pane to the Filters shelf in Tableau Desktop, the following Filter dialog box appears: General : Use the General tab to select the values you want to include or exclude. Wildcard (Tableau Desktop only): Use the Wildcard tab to define a pattern to filter on.  For example, when filtering on email addresses you might want to only include emails from a specific domain. You can define a wildcard filter that ends with ""@gmail.com"" to only include Google email addresses. Condition : Use the Condition tab in the Filter dialog box to define rules to filter by. For example, in a view showing the average Unit Price for a collection of products, you may want to only show the Products that have an average unit price that is greater than or equal to $25. You can use the built-in controls to write a condition or you can write a custom formula. Top : Use the Top tab in the Filter dialog box to define a formula that computes the data that will be included in the view. For example, in a view that shows the average Time to Ship for a collection of products, you can decide to only show the top 15 (or bottom) products by Sales. Rather than having to define a specific range for Sales (e.g., greater than $100,000), you can define a limit (top 15) that is relative to the other members in the field (products). Important Note : Each tab adds additional definitions to your filter. For example, you can select to exclude values under the General tab, and also add limits under the Top tab. Selections and configurations from both tabs are applied to your filter. At any time,  you can see the definitions of your filter under Summary on the General tab. Filter quantitative data (measures) Measures contain quantitative data, so filtering this type of field generally involves selecting a range of values that you want to include. When you drag a measure from the Data pane to the Filters shelf in Tableau Desktop, the following dialog box appears: Select how you want to aggregate the field, and then click Next . In the subsequent dialog box, you're given the option to  create four types of quantitative filters: Range of Values : Select the Range of Values option to specify the minimum and maximum values of the range to include in the view. The values you specify are included in the range. At Least : Select the At Least option to include all values that are greater than or equal to a specified minimum value. This type of filter is useful when the data changes often so specifying an upper limit may not be possible. At Most : Select the At Most option to include all values that are less than or equal to a specified maximum value. This type of filter is useful when the data changes often so specifying a lower limit may not be possible. Special : Select the Special option to filter on Null values. Include only Null values, Non-null values, or All Values. Note: If you have a large data source, filtering measures can lead to a significant degradation in performance. It is sometimes much more efficient to filter by creating a set containing the measure and then apply a filter to the set. For more information about creating sets, see Create Sets (Link opens in a new window) . Filter dates When you drag a date field from the Data pane to the Filters shelf in Tableau Desktop, the following Filter Field dialog box appears: You can select whether you want to filter on a relative date; filter between a range of dates; or select discrete dates or individual dates to filter from the view. Filter relative dates : Click Relative dates to define a range of dates that updates based on the date and time you open the view. For example, you may want to see Year to Date sales, all records from the past 30 days, or bugs closed last week. Relative date filters can also be relative to a specific anchor date rather than today. Filter a range of dates : Select Range of dates to define a fixed range of dates to filter. For example, you may want to see all orders placed between March 1, 2009 and June 12, 2009. Filter discrete dates : Select a discrete date value in the dialog box if you want to include entire date levels. For example, if you select Quarters, you can choose to filter specific quarters (e.g. Q1, Q2, Q3, Q4)  from your view, regardless of the year. Latest date preset : If you want to ensure that only the most recent date in a data source is selected in the filter when the workbook is shared or opened, select a discrete date such as Month/Day/Year or Individual Dates and then, on the General tab, select Filter to latest date value when workbook is opened . Notes : When you filter to the latest date value, this setting applies only to data source filters in a workbook. In the order of operations, the latest date filter  is global to the workbook, while context filters apply per worksheet. The latest date is determined just after the workbook opens for first use, after data source filters, but before context filters. At that point the date is set, and the latest date preset is used as a dimension filter. If you are using additional filters in views (including relative date filters and context filters), the latest date value setting may result in an empty view with no data when those additional filters do not select data from the latest date in the database. On Tableau Server and Tableau Cloud, presets are applied when the view first loads in the browser, but not when the browser or data is refreshed. Filter individual dates : Select Individual dates to filter specific dates from your view. Additional date filter options : When you select Relative dates or Range of dates, the Filter dialog box opens. In that dialog box, you can define a Starting date or Ending date. You can also select Special to include null dates, non-null dates, or all dates. Filter table calculations To create a table calculation filter, create a calculated field, and then place that field on the Filters shelf. Filters based on table calculations do not filter out underlying data in the data set, because table calculation filters are applied last in the order of operations. This means Tableau evaluates any table calculations in the view first, and then applies table calculation filters on the results in the current view. Apply table calculation filter to totals When you show totals in a view and you want a table calculation filter to apply to the totals, you can select Apply to totals in the drop-down menu for that filter (on the Filters shelf). This option lets you decide when a table calculation filter should be applied to totals. This options is available when you show totals in the view, and you add a table calculation filter to the view. Select Apply to totals to apply the table calculation filter to all of the results in the table, including the totals. Display interactive filters in the view When an interactive filter is shown, you can quickly include or exclude data in the view. Note : In web authoring, interactive filters are automatically added to the view when you drag a field to the Filters shelf. To show a filter in the view: In the view, click the field drop-down menu   and select Show Filter . The field is automatically added to the Filters shelf (if it is not already being filtered), and a filter card appears in the view. Interact with the card to filter your data. Note: In Tableau Desktop, you can add an interactive filter to the view for a field that is not currently used in the view. To do so, In the Data pane, click the field drop-down menu, and then select Show Filter . Set options for filter card interaction and appearance After you show a filter, there are many different options that let you control how the filter works and appears. You can access these options by clicking the drop-down menu in the upper right corner of the filter card in the view. Some options are available for all types of filters, and others depend on whether you’re filtering a categorical field (dimension) or a quantitative field (measure). You can customize how filters appear in the view, in dashboards, or when published to Tableau Server or Tableau Cloud . Here are some of the general filter card options: Edit Filter - This option opens the main Filter dialog box so you can further refine the filter by adding conditions and limits. Remove Filter - Removes the filter from the Filters shelf and removes the filter card from the view. Apply to worksheets - Allows you to specify whether the filter should apply to only the current worksheet or be shared across multiple worksheets. For more information, see Apply Filters to Multiple Worksheets . Format Filters (Tableau Desktop only) - Customize the font and colors of all your filter cards in the view. Only relevant values - Specifies which values to show in the filter. When you select this option other filters are considered and only values that pass these filters are shown. For example, a filter on State will only show the Eastern states when a filter on Region is set. You can use the toggle at the top of the filter card to switch between this option and the All Values in Database option. All values in hierarchy - Specifies 					which values to show in the filter. When you create a filter from a hierarchical field, this option is selected by default. Filter values are displayed based on relevance of the parent/child relationships in the hierarchy. All values in database - Specifies which values to show in the filter. When you select this option all values in the database are shown regardless of the other filters on the view. All values in context (Tableau Desktop only) - When one of the filters in the view is a context filter, select this option on a different filter to only display values that pass through the context filter. For more information, see Use Context Filters . Include values - When this option is selected, the selections in the filter card are included in the view. Exclude values - When this option is selected, the selections in the filter card are excluded from the view. Hide Card (Tableau Desktop only) - Hides the filter card but does not remove the filter from the Filters shelf. Filter card modes You can control the appearance and interaction of your filter card in the view by selecting a filter card mode. To select a filter card mode, in the view, click the drop-down menu on the filter card and then select a mode from the list. The types of filter card modes you see in the list of options depend on whether your filter is on a dimension or a measure. Below you can find brief descriptions of the types of filter card modes available for dimensions and measures. For dimensions, you can choose from the following filter modes: Single Value (List) : Displays the values of the filter as a list of radio buttons where only a single value can be selected at a time. Single Value (Dropdown) : Displays the values of the filter in a drop-down list where only a single value can be selected at a time. Single Value (Slider) : Displays the values of the filter along the range of a slider. Only a single value can be selected at a time. This option is useful for dimensions that have an implicit order such as dates. Multiple Values (List) :Displays the values in the filter as a list of check boxes where multiple values can be selected. Multiple Values(Dropdown) : Displays the values of the filter in a drop-down list where multiple values can be selected. Multiple Values (Custom List) : Displays a text box where you can type a few characters and search for the value. Alternatively, you can type or paste a list of values into the text box to create a custom list of values to include. Wildcard Match : Displays a text box where you can type a few characters. All values that match those characters are automatically selected. You can use the asterisk character as a wildcard character. For example, you can type “tab*” to select all values that begin with the letters “tab”. Pattern Match is not case sensitive. If you are using a multidimensional data source, this option is only available when filtering single level hierarchies and attributes. For measures, you can choose from the following filter modes: Range of Values/Dates : shows the filtered values as a pair of sliders that you can adjust to include or exclude more values. Click on the upper and lower limit readouts to enter the values manually. The darker area inside the slider range is called the data bar. It indicates the range in which data points actually lie in the view. Use this indicator to determine a filter that makes sense for the data in your data source. For example, you may filter the Sales field to only include values between $200,000 and $500,000 but your view only contains values between $250,000 and $320,000. The range of data you can see in the view is indicated by the data bar while the sliders show you the range of the filter. Note: Data bars only show in filters where the filtered field is also used in the view (e.g., on Columns, Rows, or on the Marks card, and son on) and are at the same aggregation level as the field on the Filters shelf. For example, a filter on SUM(Sales) will only display data bars if the SUM(Sales) field is used in the view. It won't show if AVG(Sales) is used in the view. Even though in both scenarios, the filtered field, Sales is used in the view; in the latter case the aggregation is different than the aggregation of the filter. At Least/Starting Date :  shows a single slider with a fixed minimum value. Use this option to create a filter using an open ended range. At Most/Ending Date : shows a slider with a fixed maximum value. Use this option to create a filter using an open ended range. Relative to Now : this option shows a control where you can define a dynamic date range that updates based on when you open the view. The option is only available for filters on continuous date fields. Browse periods : shows common date ranges such as past day, week, month, three months, one year, and five years. This option is only available for filters on continuous date fields. Note : When you expose a filter for Measure Values or Measure Names as a single value list, selecting All will automatically convert the filter to a multiple values list. For information on Measure Values and Measure Names, see Measure Values and Measure Names . Customize filter cards In addition to the general filter options and the filter modes, you control how your filter appears in the worksheet, on dashboards, or when published to the web even further in Tableau Desktop. To customize filters, click the filter card drop-down menu and select Customize . You can select from the following options: Show “All” Value - toggles whether to show the “All” option that displays by default in multiple values and single value lists. Show Search Button - toggles whether to show the search button at the top of the filter. Show Include/Exclude - toggles whether to show the Include Values and Exclude Values commands on the filter card menu. When shown, users can switch the filter between include and exclude modes. Show Control Types - toggles whether to let users change the type of quick filter shown. For example, when shown, a user can change a multiple values list to a compact list. Show More/Fewer button - toggles whether to show the More/Fewer button at the top of the filter. Show All Values button - toggles whether to display the Show All Values button on the filter card. Whenever data is excluded in the filter, the small red ""x"" appears on the Show All Values button. When all values are showing, the red ""x"" disappears. Show Apply Button - toggles whether to show the Apply button at the bottom of the filter. When shown, changes to the filter are only applied after you click the button.   Pending changes are indicated with a green color. This option is only available in multiple values lists and dropdowns. This options is available in web authoring. Show Readouts - controls whether the minimum and maximum values are displayed as text above a range of values. The readouts can be used to manually type a new value instead of using the sliders. Show Slider - controls whether the slider displays. When this option is cleared, the filter only displays the readouts. Show Null Controls - shows a drop-down list that lets you control how the filter handles null values. You can select from values in a range; values in a range and null values; null values only, non-null values, or all values. Note: Not all of the above options are available for views published to Tableau Server or Tableau Cloud. See Also Filter Data from Data Sources (Link opens in a new window) Restrict Access at the Data Row Level (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,2.4.3. Add filters to context,https://help.tableau.com/current/pro/desktop/en-us/filtering_context.htm,"Use Context Filters Applies to: Tableau Cloud, Tableau Desktop, Tableau Server By default, all filters that you set in Tableau are computed independently. That is, each filter accesses all rows in your data source without regard to other filters. However, you can set one or more categorical filters as context filters for the view. You can think of a context filter as being an independent filter. Any other filters that you set are defined as dependent filters because they process only the data that passes through the context filter. You may create a context filter to: Force a filter to be carried out first. Create a dependent numerical or top N filter. You can set a context filter to include only the data of interest, and then set a numerical or a top N filter. For example, suppose you’re in charge of breakfast products for a large grocery chain. Your task is to find the top 10 breakfast products by profitability for all stores. If the data source is very large, you can set a context filter to include only breakfast products. Then you can create a top 10 filter by profit as a dependent filter, which would process only the data that passes through the context filter. Create Context Filters To create a context filter, select Add to Context from the context menu of an existing categorical filter. The context is computed once to generate the view. All other filters are then computed relative to the context. Context filters: Appear at the top of the Filters shelf. Are identified by a gray color on the Filters shelf. Cannot be rearranged on the shelf. As shown below, the Ship Mode dimension is set to be the context for a view. The Region filter is computed using only the data that passes through Ship Mode . You can modify a context filter by: Removing the field from the Filters shelf – If other context filters remain on the shelf, a new context is computed. Editing the filter – A new context is computed each time you edit a context filter. Selecting Remove from Context – The filter remains on the shelf as a standard  filter. If other context filters remain on the shelf, a new context is computed. Speed up Context Filters To improve performance of context filters, especially on large data sources, follow these general rules. Using a single context filter that significantly reduces the size of the data set is much better than applying many context filters. Complete all of your data modeling before creating a context. Changes in the data model, such as converting dimensions to measures, require recomputing the context. Set the necessary filters for the context and create the context before adding fields to other shelves. Doing this work first makes the queries that are run when you drop fields on other shelves much faster. If you want to set a context filter on a date you can use a continuous date. However, using date bins like YEAR(date) or context filters on discrete dates are very effective. Note : Context filters can adversely affect any query performance improvements when you use the Assume Referential Integrity option in the Data menu of the data source. For more information, see Assuming Referential Integrity for Joins . Example: Create Context Filters This example walks you through how to create a context filter. First you’ll filter a view to show the top 10 products by sales. Then you’ll create a context filter on product category so you can see the top 10 furniture products. Use the Sample - Superstore data source to create the initial view shown below. The view shows the sales for all sub-categories, sorted with the highest sale at the top. Now create a Top 10 filter to just show the top selling products. You can create this filter by dragging the Sub-Category field to the Filters shelf. In the Filter dialog box, switch to the Top tab and define a filter that is Top 10 by Sum of Sales. See Filter Data from Your Views (Link opens in a new window) to learn more about defining a Top N filter. When you click OK , you’ll see that the view is filtered to show the top 10 product sub-categories in terms of sales. Now, let’s add another filter to show only furniture products. Drag the Category field to the Filters shelf and select only Furniture . When finished, click OK . The view is filtered but instead of 10 products, it now shows 3. This is because by default all filters are evaluated separately and the view shows the intersection of the results. So this view shows that three of the top 10 overall products are furniture products. To find out what the top 10 furniture products are we need to make the Category filter a context filter. Right-click the field on the Filters shelf and select Add to Context . The filter is marked as a context filter and the view updates to show the top four furniture products. Why not 10? Because only four of the sub-categories contain furniture. But we now know that the Top 10 filter is being evaluated on the results of that context. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.4. Create and use filters,2.4.4. Apply filters to multiple sheets and data sources,https://help.tableau.com/current/pro/desktop/en-us/filtering_global.htm,"Apply Filters to Multiple Worksheets Applies to: Tableau Cloud, Tableau Desktop, Tableau Server When you add a filter to a worksheet, by default it applies to the current worksheet. Sometimes, however, you might want to apply the filter to other worksheets in the workbook. You can select specific worksheets to apply the filter to or apply it globally to all worksheets that use the same data source or related data sources. For example, you might have a filter that only includes a specific region or product of interest. Rather than adding this filter every time you create a new worksheet, you can simply create the filter once and then apply it to multiple worksheets. For examples of global filters, see The Global Filters Tab (Link opens in a new window) on Ryan Sleeper's (Link opens in a new window) website, and Dashboard Design: Adding Interactivity (Link opens in a new window) on the Interworks blog (Link opens in a new window) . Apply filters to all worksheets that use a related primary data source This option applies the filter to all worksheets that use related data sources as their primary data source. Note: To apply a filter to worksheets that use a related primary data source in web authoring, relationships between the data sources must be set up in Tableau Desktop, and then published to the web. For more information, see Filter Data Across Multiple Data Sources (Link opens in a new window) . To apply a filter to all worksheets using a related primary data source: On the Filters shelf, right-click the field and select Apply to Worksheets > All Using Related Data Sources . Filters that use this option are global across the workbook. Filters that apply to all related data sources are marked with an  icon. The filter is automatically created on any existing worksheets, and on any new worksheets you create that use a related data source. Any changes you make to the filter affects all of those worksheets. Apply filters to all worksheets that use the current primary data source This option applies the filter to all worksheets that use the current worksheet's primary data source as their primary data source. To apply a filter to all worksheets using the current primary data source: On the Filters shelf,  right-click the field and select Apply to Worksheets > All Using This Data Source . Filters that use this option are global across the workbook. Filters that apply to all worksheets are marked with a data source icon . The filter is automatically created on any new worksheets you create after you drag a field to the view. Any changes you make to the filter affects all of those worksheets. Note: If you are blending multiple data sources in a view, All Using This Data Source adds the filter to all sheets that use the same primary data source in the current sheet. The sheets that the filter gets applied to is not based on the filter field’s data source. Apply filters to select worksheets This option opens a dialog box where you can select from a list of worksheets that use the same data source or related data sources. To apply a filter to select worksheets: On the Filters shelf,  right-click the field and select Apply to Worksheets > Selected Worksheets . In the Apply Filter to Worksheets dialog box, select the worksheets that you want to apply the filter. If any of the sheets already contain a filter on the same field, the dialog box will provide details about the filter. If you select the sheet, the current filter will override any existing filter selections. Filters that apply to a selection of worksheets are marked with the worksheet icon . Any changes you make to the filter affect all of the selected worksheets. Apply filters to the current worksheet only This option only applies to the current worksheet. This option is selected by default when you create new filters. Filters that are local to the current worksheet are shown without any additional icons. To apply a filter to the current worksheet only: On the Filters shelf,  right-click the field and select Apply to Worksheets > Only This Worksheet . If you apply a filter to all worksheets or selected worksheets and then change the setting to apply the filter to just the current worksheet, the filters are not removed from all other worksheets. Rather, the filters are disconnected and they are all made local to their respective worksheets. You can go to each worksheet and remove the filter or modify selections. Filter all worksheets on a dashboard This option applies the filter to all worksheets in the dashboard that use the same data source or related data sources as their primary data source. To filter all worksheets on a dashboard: In a dashboard, click the drop-down menu on a filter card and select Apply to Worksheets > Selected worksheets . In the Apply Filter to Worksheets dialog box, click All on dashboard , and then click OK . Note: In previous versions of Tableau Desktop , the All Using This Data Source option was called Make Global and the Only This Worksheet option was Make Local. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.5. Create parameters to enable interactivity,2.5.1. In calculations,https://help.tableau.com/current/pro/desktop/en-us/parameters_create.htm,"Create Parameters Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server A parameter is a workbook variable such as a number, date, or string that can replace a constant value in a calculation, filter, or reference line. For example, you may create a calculated field that returns True if Sales is greater than $500,000 and otherwise returns False. You can replace the constant value of “500000” in the formula with a parameter. Then, using the parameter control, you can dynamically change the threshold in your calculation. To use a parameter, you must: Set up the initial parameter. Use the parameter in an element such as a calculation, filter, or reference line. Adjust the parameter value by: Showing the parameter control Using a parameter action Setting a dynamic parameter to update automatically Create a parameter To create a parameter from the Data pane: In the Data pane, click the drop-down arrow in the upper right corner and select Create Parameter . In the Create Parameter dialog box, give the field a Name . Specify the data type for the values it accepts: Optional: Specify a current value. This is the default value for the parameter. Optional: Specify a value when the workbook opens. Specify the display format to use in the parameter control (Tableau Desktop only). Specify how the parameter accepts values. You can select from the following options: All : The parameter control is a simple text field. List : The parameter control provides a list of possible values for you to select from. If you select List, you must specify the list of values. Click in the left column to type your list of values, or you can add members of a field or paste from the clipboard by selecting Add values from . Range : The parameter control lets you select values within a specified range. If you select Range, you must specify a minimum, maximum, and step size. The step size controls the jumps between values, such as letting you choose each number (5, 6, 7...) or going from 5 to 10 to 15. The availability of these options is determined by the data type. For example, a string parameter doesn't support Range. To refresh the parameter’s list of values (or domain) whenever the workbook opens, select List or Range , and then select When the workbook opens . Notice that some options are grayed out because the workbook is dynamically pulling values from the data source. When finished, click OK . The parameter is now listed in the Parameters section at the bottom of the Data pane. Edit a parameter You can edit parameters from the Data pane or the parameter control. Editing is for things like changing the allowable range or the data type. To simply change the value or a parameter, use the parameter control. See Show a parameter control in the viz . To edit a parameter: Do one of the following: Right-click the parameter in the Data pane and select Edit . Select Edit Parameter on the parameter control menu. In the Edit Parameter dialog box, make your changes. Click OK . The parameter is updated along with any elements that use it. Delete a parameter To delete a parameter, right-click it in the Data pane and select Delete . Any calculated fields that use the deleted parameter become invalid. Use a parameter A parameter won't do anything until its tied to an element in the viz. Parameters can be referenced in calculations, filters, and reference lines. Parameters are global across the workbook and can be used in any worksheet. Once the element references the parameter, be sure to Show a parameter control in the viz (or set up a parameter action, or a dynamic parameter). If there's no way to change the value of the parameter, it doesn't do any good to have it set up in the first place. Use a parameter in a calculation Parameters give you a way to dynamically modify values in a calculation. Rather than manually editing the calculation (and all dependent calculations), you can use a parameter. Then when you want to change the value, you open the parameter control, change the value, and all calculations that use that parameter are updated. To use a parameter in a calculation, type the name of the parameter and it appears in the suggested options, just like typing a field name. You can also drag the parameter from the Data pane and drop it in the calculation editor. Use a parameter in a filter Parameters give you a way to dynamically modify values in a Top N filter. Rather than manually setting the number of values you want to show in the filter, you can use a parameter. A list of parameters is available in the drop-down lists on the Top tab of the Filter dialog box. Select the parameter you want to use in the filter. Use a parameter in a reference line Parameters give you a way to dynamically modify a reference line, band, or box. For example, instead of showing a reference line at a fixed location on the axis, you can reference a parameter. Then you can use the parameter control to move the reference line. A list of parameters is available in the Value drop-down list in the Add Reference Line, Band, or Box dialog box. Select the parameter you want to use. The reference line is drawn at the Current Value specified by the parameter. Show a parameter control in the viz The parameter control is a worksheet card that lets you modify the parameter value. Parameter controls are similar to filter cards in that they contain controls that modify the view. You can open parameter controls on worksheets and dashboards and they’re included when you save to the web or publish to Tableau Server. To open the parameter control, right-click (Control-click) the parameter in the Data pane and select Show Parameter . Like other cards, parameter controls have a menu that you can open using the drop-down arrow in the upper right corner of the card. Use this menu to customize the display of the control. For example, you can show a list of values as radio buttons, a compact list, a slider, or a type in field. The options available on this menu depend on the data type of the parameter and whether it accepts all, a list, or a range of values. Make a dynamic parameter Parameter actions You can make your parameters more dynamic and interactive by using them in Parameter Actions . Parameter actions let your audience change a parameter value through direct interaction with a viz, such as clicking or selecting a mark. Dynamic current value You can create a parameter that’s can refresh its current value to the result of a calculation, a list of values (based on a field), or a range of values. This refresh happens each time the workbook is opened or whenever you select Refresh from the data source’s context menu. Use a calculation as the current value of a parameter If the current value is the result of a calculation, it must be a single-value, view-independent calculation. If the calculation's result could be more than one value, the workbook can't choose a default value. The calculation must also be view-independent so that the value won’t change as the viz changes. To do this, you can use a FIXED level of detail (LOD) expression that isn’t dependent on the structure of the viz. All parts of the calculation must be inside the FIXED LOD expression. If you use a FIXED LOD expression as the default value and are using context filters, the dynamic parameter won’t reflect any context filters. For more information on LOD expressions, see Create Level of Detail Expressions in Tableau . Troubleshoot parameters Here are a few scenarios when a default parameter value or a refreshable list of parameter values (domain) won’t update as expected: The default field returns a value whose data is incompatible with the parameter’s data type. The default field for the parameter's current value doesn’t return a single value. The default field returns null. The default field is in a data source that isn't connected. The default field was deleted. The user cancels the query to the data source while Tableau is attempting to connect. In Tableau Desktop, these queries are initially evaluated when the workbook is opened and Tableau connects to the fields’ data sources for the first time. You can also evaluate the queries by refreshing the data source. To do this, press F5, or open the data source’s context menu and select Refresh . On Tableau Server and Tableau Cloud, you can refresh the data source by clicking the Data Source Refresh button in the toolbar. In this case, however, remember that the value returned depends on the server's cache policies. If the default fields fail to return values, the parameter behaves as follows: The current value keeps the latest valid value. The list of values are empty because Tableau doesn’t serialize the values returned from the query in the workbook. The current value must be in the list of values for it to be assigned to the parameter. If the list of values is empty, the parameter will get assigned a fallback value according to the data type (1 for integer, 1.0 for float, """" for string, and the current date for date and datetime). Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.5. Create parameters to enable interactivity,2.5.2. With filters,https://help.tableau.com/current/pro/desktop/en-us/parameters_create.htm,"Create Parameters Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server A parameter is a workbook variable such as a number, date, or string that can replace a constant value in a calculation, filter, or reference line. For example, you may create a calculated field that returns True if Sales is greater than $500,000 and otherwise returns False. You can replace the constant value of “500000” in the formula with a parameter. Then, using the parameter control, you can dynamically change the threshold in your calculation. To use a parameter, you must: Set up the initial parameter. Use the parameter in an element such as a calculation, filter, or reference line. Adjust the parameter value by: Showing the parameter control Using a parameter action Setting a dynamic parameter to update automatically Create a parameter To create a parameter from the Data pane: In the Data pane, click the drop-down arrow in the upper right corner and select Create Parameter . In the Create Parameter dialog box, give the field a Name . Specify the data type for the values it accepts: Optional: Specify a current value. This is the default value for the parameter. Optional: Specify a value when the workbook opens. Specify the display format to use in the parameter control (Tableau Desktop only). Specify how the parameter accepts values. You can select from the following options: All : The parameter control is a simple text field. List : The parameter control provides a list of possible values for you to select from. If you select List, you must specify the list of values. Click in the left column to type your list of values, or you can add members of a field or paste from the clipboard by selecting Add values from . Range : The parameter control lets you select values within a specified range. If you select Range, you must specify a minimum, maximum, and step size. The step size controls the jumps between values, such as letting you choose each number (5, 6, 7...) or going from 5 to 10 to 15. The availability of these options is determined by the data type. For example, a string parameter doesn't support Range. To refresh the parameter’s list of values (or domain) whenever the workbook opens, select List or Range , and then select When the workbook opens . Notice that some options are grayed out because the workbook is dynamically pulling values from the data source. When finished, click OK . The parameter is now listed in the Parameters section at the bottom of the Data pane. Edit a parameter You can edit parameters from the Data pane or the parameter control. Editing is for things like changing the allowable range or the data type. To simply change the value or a parameter, use the parameter control. See Show a parameter control in the viz . To edit a parameter: Do one of the following: Right-click the parameter in the Data pane and select Edit . Select Edit Parameter on the parameter control menu. In the Edit Parameter dialog box, make your changes. Click OK . The parameter is updated along with any elements that use it. Delete a parameter To delete a parameter, right-click it in the Data pane and select Delete . Any calculated fields that use the deleted parameter become invalid. Use a parameter A parameter won't do anything until its tied to an element in the viz. Parameters can be referenced in calculations, filters, and reference lines. Parameters are global across the workbook and can be used in any worksheet. Once the element references the parameter, be sure to Show a parameter control in the viz (or set up a parameter action, or a dynamic parameter). If there's no way to change the value of the parameter, it doesn't do any good to have it set up in the first place. Use a parameter in a calculation Parameters give you a way to dynamically modify values in a calculation. Rather than manually editing the calculation (and all dependent calculations), you can use a parameter. Then when you want to change the value, you open the parameter control, change the value, and all calculations that use that parameter are updated. To use a parameter in a calculation, type the name of the parameter and it appears in the suggested options, just like typing a field name. You can also drag the parameter from the Data pane and drop it in the calculation editor. Use a parameter in a filter Parameters give you a way to dynamically modify values in a Top N filter. Rather than manually setting the number of values you want to show in the filter, you can use a parameter. A list of parameters is available in the drop-down lists on the Top tab of the Filter dialog box. Select the parameter you want to use in the filter. Use a parameter in a reference line Parameters give you a way to dynamically modify a reference line, band, or box. For example, instead of showing a reference line at a fixed location on the axis, you can reference a parameter. Then you can use the parameter control to move the reference line. A list of parameters is available in the Value drop-down list in the Add Reference Line, Band, or Box dialog box. Select the parameter you want to use. The reference line is drawn at the Current Value specified by the parameter. Show a parameter control in the viz The parameter control is a worksheet card that lets you modify the parameter value. Parameter controls are similar to filter cards in that they contain controls that modify the view. You can open parameter controls on worksheets and dashboards and they’re included when you save to the web or publish to Tableau Server. To open the parameter control, right-click (Control-click) the parameter in the Data pane and select Show Parameter . Like other cards, parameter controls have a menu that you can open using the drop-down arrow in the upper right corner of the card. Use this menu to customize the display of the control. For example, you can show a list of values as radio buttons, a compact list, a slider, or a type in field. The options available on this menu depend on the data type of the parameter and whether it accepts all, a list, or a range of values. Make a dynamic parameter Parameter actions You can make your parameters more dynamic and interactive by using them in Parameter Actions . Parameter actions let your audience change a parameter value through direct interaction with a viz, such as clicking or selecting a mark. Dynamic current value You can create a parameter that’s can refresh its current value to the result of a calculation, a list of values (based on a field), or a range of values. This refresh happens each time the workbook is opened or whenever you select Refresh from the data source’s context menu. Use a calculation as the current value of a parameter If the current value is the result of a calculation, it must be a single-value, view-independent calculation. If the calculation's result could be more than one value, the workbook can't choose a default value. The calculation must also be view-independent so that the value won’t change as the viz changes. To do this, you can use a FIXED level of detail (LOD) expression that isn’t dependent on the structure of the viz. All parts of the calculation must be inside the FIXED LOD expression. If you use a FIXED LOD expression as the default value and are using context filters, the dynamic parameter won’t reflect any context filters. For more information on LOD expressions, see Create Level of Detail Expressions in Tableau . Troubleshoot parameters Here are a few scenarios when a default parameter value or a refreshable list of parameter values (domain) won’t update as expected: The default field returns a value whose data is incompatible with the parameter’s data type. The default field for the parameter's current value doesn’t return a single value. The default field returns null. The default field is in a data source that isn't connected. The default field was deleted. The user cancels the query to the data source while Tableau is attempting to connect. In Tableau Desktop, these queries are initially evaluated when the workbook is opened and Tableau connects to the fields’ data sources for the first time. You can also evaluate the queries by refreshing the data source. To do this, press F5, or open the data source’s context menu and select Refresh . On Tableau Server and Tableau Cloud, you can refresh the data source by clicking the Data Source Refresh button in the toolbar. In this case, however, remember that the value returned depends on the server's cache policies. If the default fields fail to return values, the parameter behaves as follows: The current value keeps the latest valid value. The list of values are empty because Tableau doesn’t serialize the values returned from the query in the workbook. The current value must be in the list of values for it to be assigned to the parameter. If the list of values is empty, the parameter will get assigned a fallback value according to the data type (1 for integer, 1.0 for float, """" for string, and the current date for date and datetime). Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.5. Create parameters to enable interactivity,2.5.3. With reference lines,https://help.tableau.com/current/pro/desktop/en-us/parameters_create.htm,"Create Parameters Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server A parameter is a workbook variable such as a number, date, or string that can replace a constant value in a calculation, filter, or reference line. For example, you may create a calculated field that returns True if Sales is greater than $500,000 and otherwise returns False. You can replace the constant value of “500000” in the formula with a parameter. Then, using the parameter control, you can dynamically change the threshold in your calculation. To use a parameter, you must: Set up the initial parameter. Use the parameter in an element such as a calculation, filter, or reference line. Adjust the parameter value by: Showing the parameter control Using a parameter action Setting a dynamic parameter to update automatically Create a parameter To create a parameter from the Data pane: In the Data pane, click the drop-down arrow in the upper right corner and select Create Parameter . In the Create Parameter dialog box, give the field a Name . Specify the data type for the values it accepts: Optional: Specify a current value. This is the default value for the parameter. Optional: Specify a value when the workbook opens. Specify the display format to use in the parameter control (Tableau Desktop only). Specify how the parameter accepts values. You can select from the following options: All : The parameter control is a simple text field. List : The parameter control provides a list of possible values for you to select from. If you select List, you must specify the list of values. Click in the left column to type your list of values, or you can add members of a field or paste from the clipboard by selecting Add values from . Range : The parameter control lets you select values within a specified range. If you select Range, you must specify a minimum, maximum, and step size. The step size controls the jumps between values, such as letting you choose each number (5, 6, 7...) or going from 5 to 10 to 15. The availability of these options is determined by the data type. For example, a string parameter doesn't support Range. To refresh the parameter’s list of values (or domain) whenever the workbook opens, select List or Range , and then select When the workbook opens . Notice that some options are grayed out because the workbook is dynamically pulling values from the data source. When finished, click OK . The parameter is now listed in the Parameters section at the bottom of the Data pane. Edit a parameter You can edit parameters from the Data pane or the parameter control. Editing is for things like changing the allowable range or the data type. To simply change the value or a parameter, use the parameter control. See Show a parameter control in the viz . To edit a parameter: Do one of the following: Right-click the parameter in the Data pane and select Edit . Select Edit Parameter on the parameter control menu. In the Edit Parameter dialog box, make your changes. Click OK . The parameter is updated along with any elements that use it. Delete a parameter To delete a parameter, right-click it in the Data pane and select Delete . Any calculated fields that use the deleted parameter become invalid. Use a parameter A parameter won't do anything until its tied to an element in the viz. Parameters can be referenced in calculations, filters, and reference lines. Parameters are global across the workbook and can be used in any worksheet. Once the element references the parameter, be sure to Show a parameter control in the viz (or set up a parameter action, or a dynamic parameter). If there's no way to change the value of the parameter, it doesn't do any good to have it set up in the first place. Use a parameter in a calculation Parameters give you a way to dynamically modify values in a calculation. Rather than manually editing the calculation (and all dependent calculations), you can use a parameter. Then when you want to change the value, you open the parameter control, change the value, and all calculations that use that parameter are updated. To use a parameter in a calculation, type the name of the parameter and it appears in the suggested options, just like typing a field name. You can also drag the parameter from the Data pane and drop it in the calculation editor. Use a parameter in a filter Parameters give you a way to dynamically modify values in a Top N filter. Rather than manually setting the number of values you want to show in the filter, you can use a parameter. A list of parameters is available in the drop-down lists on the Top tab of the Filter dialog box. Select the parameter you want to use in the filter. Use a parameter in a reference line Parameters give you a way to dynamically modify a reference line, band, or box. For example, instead of showing a reference line at a fixed location on the axis, you can reference a parameter. Then you can use the parameter control to move the reference line. A list of parameters is available in the Value drop-down list in the Add Reference Line, Band, or Box dialog box. Select the parameter you want to use. The reference line is drawn at the Current Value specified by the parameter. Show a parameter control in the viz The parameter control is a worksheet card that lets you modify the parameter value. Parameter controls are similar to filter cards in that they contain controls that modify the view. You can open parameter controls on worksheets and dashboards and they’re included when you save to the web or publish to Tableau Server. To open the parameter control, right-click (Control-click) the parameter in the Data pane and select Show Parameter . Like other cards, parameter controls have a menu that you can open using the drop-down arrow in the upper right corner of the card. Use this menu to customize the display of the control. For example, you can show a list of values as radio buttons, a compact list, a slider, or a type in field. The options available on this menu depend on the data type of the parameter and whether it accepts all, a list, or a range of values. Make a dynamic parameter Parameter actions You can make your parameters more dynamic and interactive by using them in Parameter Actions . Parameter actions let your audience change a parameter value through direct interaction with a viz, such as clicking or selecting a mark. Dynamic current value You can create a parameter that’s can refresh its current value to the result of a calculation, a list of values (based on a field), or a range of values. This refresh happens each time the workbook is opened or whenever you select Refresh from the data source’s context menu. Use a calculation as the current value of a parameter If the current value is the result of a calculation, it must be a single-value, view-independent calculation. If the calculation's result could be more than one value, the workbook can't choose a default value. The calculation must also be view-independent so that the value won’t change as the viz changes. To do this, you can use a FIXED level of detail (LOD) expression that isn’t dependent on the structure of the viz. All parts of the calculation must be inside the FIXED LOD expression. If you use a FIXED LOD expression as the default value and are using context filters, the dynamic parameter won’t reflect any context filters. For more information on LOD expressions, see Create Level of Detail Expressions in Tableau . Troubleshoot parameters Here are a few scenarios when a default parameter value or a refreshable list of parameter values (domain) won’t update as expected: The default field returns a value whose data is incompatible with the parameter’s data type. The default field for the parameter's current value doesn’t return a single value. The default field returns null. The default field is in a data source that isn't connected. The default field was deleted. The user cancels the query to the data source while Tableau is attempting to connect. In Tableau Desktop, these queries are initially evaluated when the workbook is opened and Tableau connects to the fields’ data sources for the first time. You can also evaluate the queries by refreshing the data source. To do this, press F5, or open the data source’s context menu and select Refresh . On Tableau Server and Tableau Cloud, you can refresh the data source by clicking the Data Source Refresh button in the toolbar. In this case, however, remember that the value returned depends on the server's cache policies. If the default fields fail to return values, the parameter behaves as follows: The current value keeps the latest valid value. The list of values are empty because Tableau doesn’t serialize the values returned from the query in the workbook. The current value must be in the list of values for it to be assigned to the parameter. If the list of values is empty, the parameter will get assigned a fallback value according to the data type (1 for integer, 1.0 for float, """" for string, and the current date for date and datetime). Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.6. Structure the data,2.6.1. Sets,https://help.tableau.com/current/pro/desktop/en-us/sortgroup_sets_create.htm,"Create Sets Applies to: Tableau Cloud, Tableau Desktop, Tableau Server You can use sets to compare and ask questions about a subset of data. Sets are custom fields that define a subset of data based on some conditions. You can make sets more dynamic and interactive by using them in Set Actions . Set actions let your audience interact directly with a viz or dashboard to control aspects of their analysis. When someone selects marks in the view, set actions can change the values in a set. In addition to a Set Action, you can also allow users to change the membership of a set by using a filter-like interface known as a Set Control, which makes it easy for you to designate inputs into calculations that drive interactive analysis. For details, see Show a set control in the view . Create a dynamic set There are two types of sets: dynamic sets and fixed sets. The members of a dynamic set  change when the underlying data changes. Dynamic sets can only be based on a single dimension. To create a dynamic set: In the Data pane, right-click a dimension and select Create > Set . In the Create Set dialog box, configure your set. You can configure your set using the following tabs: General : Use the General tab to select one or more values that will be considered when computing the set. You can alternatively select the Use all option to always consider all members even when new members are added or removed. Condition : Use the Condition tab to define rules that determine which members to include in the set. For example, you might specify a condition that is based on  total sales that only includes products with sales over $100,000. Note : Set conditions work the same as filter conditions. See Filter Data from Your Views (Link opens in a new window) to learn more. Top : Use the Top tab to define limits on what members to include in the set. For example, you might specify a limit that is based on total sales that only includes the top 5 products based on their sales. Note : Set limits work the same as Filter limits. See Filter Data from Your Views (Link opens in a new window) to learn more. When finished, click OK . The new set is added to the bottom of the Data pane, under the Sets section. A set icon indicates the field is a set. Create a fixed set The members of a fixed set  do not change, even if the underlying data changes. A fixed set can be based on a single dimension or multiple dimensions. To create a fixed set: In the visualization, select one or more marks (or headers) in the view. Right-click the mark(s) and select Create Set . In the Create Set dialog box, type a name for the set. Optionally complete any of the following: By default, the set includes the members listed in the dialog box. You can select the option to Exclude these members instead. When you exclude, the set will include all of the members you didn't select. Remove any dimensions that you don't want to be considered by clicking the red ""x"" icon that appears when you hover over a column heading . Remove any specific rows that you don't want to include in the set by clicking the red ""x"" icon that appears when you hover over the row . If the marks you selected represent multiple dimensions, each member of the set will be a combination of those dimensions. You can specify the character that separates the dimension values. To do so, for Separate members by , enter a character of your choice. Select Add to Filters shelf to automatically move the set to the Filters shelf once it is created. When finished, click OK . The new set is added to the bottom of the Data pane, under the Sets section. A set icon indicates the field is a set. Add or remove data points from sets If you created a set using specific data points, you can add more data to or subtract data from the set. To add or remove data points from a set: In the visualization, select the data points you want to add or remove. In the tooltip that appears, click the Sets drop-down menu icon, and then select Add to [set name] or Remove from [set name] to add or remove data from a particular set. Use sets in the visualization After you create a set, it displays at the bottom of the Data pane in the Sets section. You can  drag it into the viz like any other field. When you drag a set to the viz in Tableau Desktop, you can choose to show the members of the set or aggregate the members into In/Out categories. In Tableau Server or Tableau Cloud you can only aggregate the members of the set into In/Out categories. Show In/Out members in a set In most cases, when you drag a set to the viz, Tableau displays the set using the In/Out mode. This mode separates the set into two categories: In - The members in the set. Out - The members that aren't part of the set. For example, in a set defined for the top 25 customers, the top customers would be part of the In category and all other customers would be part of the Out category. Using the In/Out mode makes it easy to compare the members in the set to everything else. To show In/Out members in the visualization: In Tableau Desktop, right-click the set in the visualization workspace and select Show In/Out of Set . When a set is in In/Out mode, the field on the shelf is prefaced by the text, ""IN/OUT"", followed by the set name. Note: In/Out mode is not available in workbooks created before version 8.2 that use Microsoft Excel or text file data sources, workbooks that use the legacy connection, or workbooks that use Microsoft Access data sources. Show members in a set As an alternative to showing the set using In/Out mode, you can list the members in the set. Showing the members in the set automatically adds a filter to the view that includes only the members of the set. To switch a set to list the individual members: In the visualization workspace, right-click the set and select Show Members in Set . Note: To  display the fully qualified member names for cubes, right-click the set in the Data pane and select Qualify Member Names . Let users change set values Add a set action You can use set actions to give your audience more control over their analysis of your visualization. Set actions take an existing set and update the values contained in that set based on a user’s action in the viz. As the author, you can use a set or sets that you have already created to define the scope of the set action. For details on how to create and use set actions, see Set Actions . Show a set control in the view To give your audience the ability to quickly modify members of a set, you can also display a Set Control. A set control is a worksheet card that is very similar to a parameter control or filter card. You can add set controls to worksheets and dashboards and they are included when you publish to Tableau Server or Tableau Cloud, or save to the web on Tableau Public. To display the set control, right-click (Control-click) the set in the Data pane and select Show Set . Like other cards, set controls have a menu that you can open using the drop-down arrow in the upper right corner of the card. Use this menu to customize the display of the control, which supports both single-value and multiple-value selection modes. For example, you can show radio buttons for individual selection, or a drop-down list that supports multiple selections. Note: You can only display a set control for dynamic sets—not fixed sets. This is by design, as fixed sets aren’t meant to change in membership. In addition, if the dynamic set is not in play in the view (that is, if it’s not referenced in a calculation or instantiated on the sheet), the context menu item will be disabled, reminding you to add the set to the view. Combine sets You can combine two sets to compare the members. When you combine sets you create a new set containing either the combination of all members, just the members that exist in both, or members that exist in one set but not the other. Combining sets allows you to answer complex questions and compare cohorts of your data. For example, to determine the percentage of customers who purchased both last year and this year, you can combine two sets containing the customers from each year and return only the customers that exist in both sets. To combine two sets, they must be based on the same dimensions. That is, you can combine a set containing the top customers with another set containing the customers that purchased last year. However, you cannot combine the top customers set with a top products set. To combine sets: In the Data pane, under Sets, select the two sets you want to combine. Right-click the sets and select Create Combined Set . In the Create Set dialog box, do the following Type a name for the new combined set. Verify that the two sets you want to combine are selected in the two drop-down menus. Select one of the following options for how to combine the sets: All Members in Both Sets - the combined set will contain all of the members from both sets. Shared Members in Both Sets - the combined set will only contain members that exist in both sets. Except Shared Members - the combined set will contain all members from the specified set that don't exist in the second set.  These options are equivalent to subtracting one set from another. For example, if the first set contains Apples, Oranges, and Pears and the second set contains Pears and Nuts; combining the first set except the shared members would contain just Apples and Oranges. Pears is removed because it exists in the second set. Optionally specify a character that will separate the members if the sets represent multiple dimensions. When finished, click OK . Note: This functionality is not available in workbooks created before version 8.2 that use Microsoft Excel or text file data sources, workbooks that use the legacy connection, or workbooks that use Microsoft Access data sources. Examples of sets There are many ways you can use sets to answer complex questions and compare cohorts of data. Below are some examples of ways you can use sets to define and compare subsets of data. How do members of a set contribute to the total? You may have all kinds of questions surrounding how the members in a set contribute to the overall total. For example, what percent of total sales come from repeat customers? You can answer these types of questions using the IN/OUT mode for a set. The example below uses sales data to create a set for customers who have  purchased 5,000 USD or more in products. Create the set Right-click (control-click on Mac) the Customer Name dimension in the Data pane and select Create > Set . In the Create Set dialog box, type a name for the set. In this example, we'll call the set, ""Customers"" Select the Use all option so the condition always applies to all values even when new customers are added. On the Condition tab, click By field , and then define a condition that only includes customers when Sum of Sales is greater than or equal to 5,000 . Click OK . Create the visualization Drag the new set from the Sets area at the bottom of the Data pane to the Rows shelf. Drag Sales to the Columns shelf. The view now shows the total sales for customers who have purchased more than 5,000 USD of product and the total sales for all other customers. Finally, click on the drop-down arrow on the Sum (Sales) field on the Column shelf and select Quick Table Calculation > Percent of Total on the context menu. The view now shows that customers with sales greater than or equal to 5,000 make up about 39% of the overall sales. How many members of a set exist in another set? Another common use of sets is to compare subsets of data or cohorts. For example, you may wonder how many customers that purchased last year also purchased this year. Or if a customer purchased a specific product, what other products did they buy? You can answer these types of questions by creating multiple sets and combining them. The example below uses sales data to determine how many customers who  purchased in 2012 also purchased in 2013. Create a combined set Drag the Customer Name field to the Rows shelf. Drag the Order Date field to the Filters shelf. In the Filter Field dialog box, select Years and click Next . In the Filter dialog box, select 2012 and click OK . Back in the view, press CTRL + A (Command-A on a Mac) on your keyboard to select all of the customers. Right-click (control-click on Mac) the selection and select Create Set . In the Create Set dialog box that opens, type a name for the set. In this example, we'll call the set ""Customers (2012)"". Click OK . On the Filters shelf, right-click (control-click on Mac) Order Date and select Edit Filter . In the Filter dialog box, change the filter to only include 2013 instead of 2012 , and then click OK . Again, press CTRL + A (Command-A on a Mac) on your keyboard to select all of the customers. In the view, right-click (control-click on Mac) the selection and select Create Set . In the Create set dialog box that opens, type a name for the set. This set will be called ""Customers (2013)"". Click OK . In the Data pane, select both the Customers 2012 and Customers 2013 by holding the Ctrl key (Command key on a Mac) on your keyboard as you select. Right-click (control-click on Mac) the selection and select Create Combined Set . In the Create Set dialog box, type a name for the new set. In this example, we'll call the set ""Customers (2012 & 2013)"". Make sure the correct two sets are selected in the drop-down menus. Select the option to include Shared Members in Both Sets . Click OK . Create the visualization At the bottom of the workbook, click the New Worksheet icon. In the new worksheet, drag the Customer Name dimension to the Rows shelf. Click the drop-down arrow on the Customer Name field on the Rows shelf and select Measure > Count (Distinct) from the context menu. Finally, from the Sets area of the Data pane, drag the Customers (2012 & 2013) field to the Filters shelf. You can see that 437 customers purchased products in both 2012 and 2013. Hierarchical sets and descendants A hierarchical set filters data to the selected members and all of their descendants. They are unique to  multidimensional (cube) data sources and are defined within the data source prior to connecting to Tableau Desktop. When you create sets in Tableau from a cube data source, descendants and any hierarchical structures are automatically included with the selected members. For example, a set named Dairy is created from the Product hierarchy. As shown below, it includes only the Dairy product department. Consider the following view. The Product Department dimension is placed on the Rows shelf and the Store Sales measure is placed on the Columns shelf. If you place the Dairy set on the Filters shelf, you can see that the view is filtered to include only the Dairy product categories. As shown below, you can drill down into Product Department to reveal the Product Category , Product Subcategory , and Brand Name levels. As these descendants are revealed, row headers are added to the view. This is because a set filter allows you to view the levels of detail contained within the filtered members. Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.6. Structure the data,2.6.2. Bins,https://help.tableau.com/current/pro/desktop/en-us/calculations_bins.htm,"Create Bins from a Continuous Measure Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Sometimes it's useful to convert a continuous measure (or a numeric dimension) into bins. Any discrete field in Tableau can be considered as a set of bins. For example, suppose you create a view with Profit on Rows and State on Columns . You could consider the State field as a set of bins—each profit value is sorted into a bin corresponding to the state from which the value was recorded. But if you want to see values for Profit assigned to bins without reference to a dimension, you can create a numeric bin, with each individual bin corresponding to a range of values. Note: You can bin data only for relational data sources and binned fields cannot be used in calculations. However, it is possible to create a calculated field that will replicate a bin of a specific size.  For example: (FLOOR([Sales]/1000)*1000) will create bins with a size of 1000. By dragging this calculation to the dimensions pane, you can use these bins with cube data sources and calculated fields. When you create bins from a measure you create a new dimension. That's because you are creating a field with a limited and discrete set of possible values out of a field with an unlimited, continuous range of values. However, once the dimension is created, you can convert it to a continuous dimension. This can be useful, for example, if you want to create a histogram. See Create a Histogram from a Binned Dimension . Create a Binned Dimension: In the Data pane, right-click (control-click on Mac) a measure  and select Create > Bins . In the Create Bins dialog box, accept the proposed New field name or specify a different name for the new field. On the web, the dialog box is named Edit Bins and has a slightly different appearance, but the options are the same. Either enter a value in the Size of bins field or have Tableau calculate a value for you. If Tableau can perform the optimizing calculation quickly enough, the value you see initially in Size of bins is Tableau's estimate of the optimal bin size. If Tableau cannot perform the optimizing calculation quickly, the Size of bins field defaults to 10. In this case you can click Suggest Bin Size to have Tableau perform the optimizing calculation. The formula that Tableau uses to calculate an optimal bin size is Number of Bins = 3 + log 2 (n) * log(n) In the formula, n is the number of distinct rows in the table. The size of each bin is determined by dividing the difference between the smallest and the largest values by the number of bins. The four read-only fields in the lower part of the Create Bins dialog box show you the data that Tableau uses to suggest a bin size. You can also consider these values if you want to set a bin size manually. The values are: Min The field's minimum value. Max The field's maximum value. Diff The difference between the field's minimum and maximum values. CntD The number of distinct values (rows) in the data. After you click OK to dismiss the Create Bins dialog box, a new binned field appears in the Dimensions area of the Data pane. When you add a binned dimension to the view, each bin acts as an equal-sized container that summarizes data for a specific range of values. Column or row headers are created, where each bin label designates the lower limit of the range of numbers that is assigned to the bin. Note that the lower limit is inclusive. Create a Histogram from a Binned Dimension If you create a binned dimension, you can use it as the starting point for creating a histogram. Using the Sales (bin) dimension created according to the instructions above, use the following steps to create a histogram. Note : A quicker way to create a histogram is using Show Me. See Build a Histogram in the Build-It-Yourself Exercises section for information on creating a histogram using Show Me. Click the Sales (bin) dimension in the Data pane and choose Convert to continuous . Drag the Sales (bin) dimension from the Data pane and drop it on the Columns shelf. Drag the original Sales field from the Measures area of the Data pane and drop it on the Rows shelf. Click SUM(Sales) on Rows and change the aggregation from Sum to Count. The result is a histogram: Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.6. Structure the data,2.6.3. Hierarchies,https://help.tableau.com/current/pro/desktop/en-us/qs_hierarchies.htm,"Create Hierarchies Applies to: Tableau Cloud, Tableau Desktop, Tableau Server When you connect to a data source, Tableau automatically separates date fields into hierarchies so you can easily break down the viz. You can also create your own custom hierarchies. For example, if you have a set of fields named Region, State, and County, you can create a hierarchy from these fields so that you can quickly drill down between levels in the viz. Create a hierarchy To create a hierarchy: In the Data pane, drag a field and drop it directly on top of another field. Note: When you want to create a hierarchy from a field inside a folder, right-click (control-click on a Mac) the field and then select Create Hierarchy . When prompted, enter a name for the hierarchy and click OK . Drag additional fields into the hierarchy as needed. You can also re-order fields in the hierarchy by dragging them to a new position. Drill up or down in a hierarchy When you add a field from a hierarchy to the visualization, you can quickly drill up or down in the hierarchy to add or subtract more levels of detail. To drill up or down in a hierarchy in Tableau Desktop or in web authoring: In the visualization, click the + or - icon on the hierarchy field. When you are editing or viewing the visualization on the web, you have the option of clicking the + or - icon next to a field label. Remove a hierarchy To remove a hierarchy: In the Data pane, right-click (control-click on a Mac) the hierarchy and select Remove Hierarchy . The fields in the hierarchy are removed from the hierarchy and the hierarchy disappears from the Data pane. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.6. Structure the data,2.6.4. Groups,https://help.tableau.com/current/pro/desktop/en-us/sortgroup_groups_creating.htm,"Group Your Data Applies to: Tableau Cloud, Tableau Desktop, Tableau Server You can create a group to combine related members in a field. For example, if you are working with a view that shows average test scores by major, you might want to group certain majors together to create major categories. English and History might be combined into a group called Liberal Arts Majors, while Biology and Physics might be grouped as Science Majors. Groups are useful for both correcting data errors (e.g., combining CA, Calif., and California into one data point) as well as answering ""what if"" type questions (e.g., ""What if we combined the East and West regions?). Create a group There are multiple ways to create a group. You can create a group from a field in the Data pane, or  by selecting data in the view and then clicking the group icon. Create a group by selecting data in the view In the view, select one or more data points and then, on the tooltip that appears, click the group icon . Note : You can also select the group icon on the toolbar at the top of the workspace. If there are multiple levels of detail in the view, you must select a level to group the members. You can select to group all dimensions, or just one. Create a group from a field in the Data pane In the Data pane, right-click a field and select Create > Group . In the Create Group dialog box, select several members that you want to group, and then click Group . The selected members are combined into a single group. A default name is created using the combined member names. To rename the group, select it in the list and click Rename . Tip : You can search for members using the Find option near the bottom-right of the dialog box. (Tableau Desktop only) Include an Other Group When you create groups in Tableau, you have the option to group all remaining, or non-grouped members in an Other group. The Include Other option is useful for highlighting certain groups or comparing specific groups against everything else. For example, if have a view that shows sales versus profit product category, you might want to highlight the high and low performing categories in the view, and group all the other categories into an ""Other"" group. Includes Other Does not include Other To include an Other group: In the Data pane, right-click the group field and select Edit Group . In the Edit Group dialog box, select Include 'Other' . Edit a Group After you have created a grouped field,  you can add and remove members from the groups, create new groups, change the default group names, and change the name of the grouped field. You can make some changes  directly in the view, and others through the Edit Group dialog box. To add members to an existing group: In the Data pane, right-click the group field, and then click Edit Group . In the Edit Group dialog box, select one or more members and drag them into the group you want. Click OK . To remove members from an existing group: In the Data pane, right-click the group field, and then click Edit Group . In the Edit Group dialog box, select one or more members, and then click Ungroup . The members are removed from the current group. If you have an Other group, the members are added to it. Click OK . To create a new group in a group field: In the Data pane, right-click the group field, and then click Edit Group . In the Edit Group dialog box, select one or more members, and then click Group . Click OK . Note: To rename a group, select the group in the Edit Group dialog box, and then click Rename . See also Color a View Using Groups (Link opens in a new window) Correct Data Errors or Combine Dimension Members by Grouping Your Data (Link opens in a new window) Other articles in this section Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.7. Map data geographically,2.7.1. Create symbol maps,https://help.tableau.com/current/pro/desktop/en-us/maps_howto_symbol.htm,"Create  Maps that Show Quantitative Values in Tableau Applies to: Tableau Desktop You can create maps in Tableau Desktop that show quantitative values. These types of maps are called proportional symbol maps. Proportional symbol maps are great for showing quantitative values for individual locations. They can show one or two quantitative values per location (one value encoded with size, and, if necessary, another encoded with color). For example, you can plot earthquakes recorded between 1981 to 2014 around the world, and size them by magnitude. You can also color the data points by magnitude  for additional visual detail. This topic illustrates how to create a proportional symbol map using an example. Follow the example to learn how to set up your data source and build the view for a proportional symbol map. Your data source To create a proportional symbol map, your data source should include the following types of information: Quantitative values Latitude and Longitude coordinates or location names (if recognized by Tableau) It's also recommended that your data contain a large variation of values; otherwise, your symbols will appear approximately the same size in the view. The following table is a snippet of the Earthquake data source, which is included in the Create Proportional Symbol Maps in Tableau Example Workbook (Link opens in a new window) on Tableau Public. It contains columns for earthquake magnitude and magnitude to the power of ten, and columns for latitude and longitude vales. It also contains a column for the date and earthquake ID for added clarity and organization. Earthquake Date Time ID Magnitude Magnitude^10 Latitude Longitude 1/1/73 centennial19730101114235 6.00000 17,488,747.04 -35.570 -15.427 1/2/73 pde19730102005320300_66 5.50000 25,329,516.21 -9.854 117.427 1/3/73 pde19730103022942800_33 4.80000 6,492,506.21 1.548 126.305 1/4/73 pde19730104003142000_33 4.50000 3,405,062.89 41.305 -29.272 1/5/73 pde19730105003948200_36 4.70000 5,259,913.22 0.683 -80.018 1/6/73 pde19730106061852300_83 4.90000 7,979,226.63 -22.354 -69.310 Basic  map building blocks: Columns shelf : Longitude (continuous measure, longitude geographic role assigned) Rows shelf : Latitude (continuous measure, latitude geographic role assigned) Detail : One or more dimension fields Size : A measure field (aggregated) Mark type : Automatic Build the map view To follow along with this example, download  the Create Proportional Symbol Maps in Tableau Example Workbook (Link opens in a new window) from Tableau Public, and open it in Tableau Desktop. Open a new worksheet. In the Data pane, double-click Latitude and Longitude . Latitude is added to the Rows shelf, and Longitude is added to the Columns shelf. A map view with one data point is created. From the Data pane, drag ID to Detail on the Marks card. If a warning dialog appears, click Add all members . A lower level of detail is added to the view. From the Data pane, drag Magnitude^10 to Size on the Marks card. Note that the Magnitude^10 field is used to encode size instead of the Magnitude field. This is because Magnitude^10 contains a wider range of values, so the differences between values can be seen visually. You now have a proportional symbol map. The larger data points represent earthquakes with larger magnitudes, and the smaller data points represent earthquakes with smaller magnitudes. In most cases, this is as far as you need to go to show quantitative values for single locations. However, in this case, since there are so many data points in the view, more visual detail is needed to help you differentiate between the earthquake magnitudes and to help you spot any trends. From the Data pane, drag Magnitude to Color on the Marks card. On the Marks card, click Color > Edit Colors . In the Edit Colors dialog box, do the following: Click the color drop-down and select the Orange-Blue Diverging palette from the list. Select Stepped Color , and then enter 8 . This creates eight colors: four shades of orange, and four shades of blue. Select Reversed . This reverses the palette so that orange represents a higher magnitude than blue. Click Advanced , select Center , and then enter 7 . This shifts the color palette and ensures that any earthquake over 7.0 magnitude will appear orange in color, and any earthquake under 7.0 magnitude will appear blue in color. Click OK . On the Marks card, click Color again, and then do the following: For Opacity , enter 70% . Under Effects, click the Border drop-down menu and select a dark blue border color. The map view updates with new colors. The dark orange data points represent earthquakes with higher magnitudes, while the dark blue data points represent earthquakes with lower magnitudes. The opacity of the marks is at 70% so you can see where the data points overlap. On the Marks card, right-click the ID field and select Sort . In the Sort dialog box, do the following: For Sort By, select Field , and then click the drop-down and select Magnitude . For Sort Order, select Descending . Click OK . This sorts the data points in the view so that the larger magnitudes appear on top. Your proportional symbol map is now complete. Point location and attribute meaning It's important to note that symbols on a map can sometimes be misinterpreted as representing actual ground area. For example, if you have a map view that plots earth impact craters across North America, and sizes each symbol by the diameter (in kilometers) of the impact area, you might get a map view that looks like this: In this particular case, it could be very easy to interpret the size of these data points as representing the actual ground area of the craters. Your audience might assume that most of southwestern Montana, a state in the US, was destroyed by a crater, which is not accurate. In reality, the crater in Montana was simply one of the larger craters in the data source and has been sized accordingly. To avoid misinterpretations, it might be helpful to include annotations or explanations of what the size actually represents. Even if it seems obvious. See Also: Mapping Concepts in Tableau (Link opens in a new window) Assign Geographic Roles (Link opens in a new window) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.7. Map data geographically,2.7.2. Create heat maps,https://help.tableau.com/current/pro/desktop/en-us/maps_howto_heatmap.htm,"Create Heatmaps that Show Trends or Density in Tableau You can create maps in Tableau that reveal  patterns or relative concentrations that might otherwise be hidden due to overlapping marks on a map. One common map type for this is a density map, also called a heatmap. Tableau creates density maps by grouping overlaying marks and color-coding them based on the number of marks in the group. Density maps help you identify locations with greater or fewer numbers of data points. They are most effective when working with a data set containing many data points where there’s substantial overlap between the marks on the map. Your data source To create a density map, your data source should contain point geometry, latitude and longitude coordinates, or location names (if recognized as location names by Tableau). Tableau can recognize location names and create a density map using the point locations assigned to Tableau geocoding locations, but density maps are most effective when the location data is very precise, such as location coordinates in a limited space. Density marks work best where the specific locations change continuously and smoothly across space, rather than values constrained to discrete locations like borough or neighborhood. Basic map building blocks: Columns shelf : Longitude (continuous dimension, longitude geographic role assigned) Rows shelf : Latitude (continuous dimension, latitude geographic role assigned) Detail: One or more fields with many underlying data points Mark type : Density Build the map view You can choose Density from the mark type drop-down and Tableau will compute a density surface on your view. The density surface recomputes as you zoom or filter data on the remaining marks. When using Pages or a small multiples view, the Density is computed across the full domain of the data for comparative analysis. To follow along with this example, download the Create Heatmaps in Tableau Example Workbook (Link opens in a new window) (click Download in the upper right hand corner), and open it in Tableau Desktop. Open a new worksheet and connect to your data source. In the data source used in this example, the fields are named Pickup Latitude and Pickup Longitude. Ensure that the Pickup Latitude geographic role is assigned to your latitude field, an the Pickup Longitude geographic role is assigned to your longitude field. For more information, see Assign a geographic role to a field (Link opens in a new window) . In the Data pane, select both Pickup Latitude and Pickup Longitude and drag them onto the canvas. The Latitude and Longitude fields are added to the Columns and Rows shelves, and a map view with one data point is created. Next, add distinct marks to the view. Right-click (Control-click on Mac) ID and drag it onto Detail on the Marks card. Because each pickup has its own ID, this action breaks up the marks and distinguishes one pickup from another on our map. There will be a warning letting you know that the field added may contain more than the recommended maximum of 1000. Select Add all members . The map view updates to show marks for every pickup location in your data source. Since every location is within Manhattan, the map will zoom to focus on Manhattan in New York City. Note : You might need to filter some data points from your view to create the level of zoom desired. On the Marks card, change the mark type to density by selecting the drop-down menu to the right of Automatic and select Density . Your basic density map is created. You can see that midtown is the most popular area for taxi pickups, and you can adjust the focus further by using the zoom tool. Density will recompute as you zoom in or out. You can select an individual data point from anywhere in your density map. These marks have size (10 pixels) and color (blue) applied by default. Size and color are not adjustable for underlying marks. Zoom around the map to analyze your data. Selection, tooltips, labels, and hovering all work based on the marks in the zoom of the view. Density maps have no fixed or constant display and will always recompute as you zoom. Adjust the appearance You can adjust the color, intensity, and size of your marks to help you analyze the data on your density map. Color : Adjust the colors of your density map by selecting Color from the Marks card. Choose from ten density color palettes or any of the existing color palettes.  The density color palettes are tailored for working on either  light or dark base maps. Note: If your data source contains negative values, those values will also appear when a measure field is added to Color . Use a diverging color palette to make a clear distinction between positive and negative values. Intensity: In the Color menu, use the Intensity slider to increase or decrease the vividness of your map. For example, increasing density lowers the ""max heat"" spots in your data, so that more appear. In the following image, the low intensity map is set at 50%, and the high intensity map is set at 75%. Size : You can use the Size shelf to adjust the size of the density marks. Click the Size to show the size slider. Adjust the slider to  increase or decrease  the size of the marks group that makes your density map. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.7. Map data geographically,2.7.3. Create density maps,https://help.tableau.com/current/pro/desktop/en-us/maps_howto_heatmap.htm,"Create Heatmaps that Show Trends or Density in Tableau You can create maps in Tableau that reveal  patterns or relative concentrations that might otherwise be hidden due to overlapping marks on a map. One common map type for this is a density map, also called a heatmap. Tableau creates density maps by grouping overlaying marks and color-coding them based on the number of marks in the group. Density maps help you identify locations with greater or fewer numbers of data points. They are most effective when working with a data set containing many data points where there’s substantial overlap between the marks on the map. Your data source To create a density map, your data source should contain point geometry, latitude and longitude coordinates, or location names (if recognized as location names by Tableau). Tableau can recognize location names and create a density map using the point locations assigned to Tableau geocoding locations, but density maps are most effective when the location data is very precise, such as location coordinates in a limited space. Density marks work best where the specific locations change continuously and smoothly across space, rather than values constrained to discrete locations like borough or neighborhood. Basic map building blocks: Columns shelf : Longitude (continuous dimension, longitude geographic role assigned) Rows shelf : Latitude (continuous dimension, latitude geographic role assigned) Detail: One or more fields with many underlying data points Mark type : Density Build the map view You can choose Density from the mark type drop-down and Tableau will compute a density surface on your view. The density surface recomputes as you zoom or filter data on the remaining marks. When using Pages or a small multiples view, the Density is computed across the full domain of the data for comparative analysis. To follow along with this example, download the Create Heatmaps in Tableau Example Workbook (Link opens in a new window) (click Download in the upper right hand corner), and open it in Tableau Desktop. Open a new worksheet and connect to your data source. In the data source used in this example, the fields are named Pickup Latitude and Pickup Longitude. Ensure that the Pickup Latitude geographic role is assigned to your latitude field, an the Pickup Longitude geographic role is assigned to your longitude field. For more information, see Assign a geographic role to a field (Link opens in a new window) . In the Data pane, select both Pickup Latitude and Pickup Longitude and drag them onto the canvas. The Latitude and Longitude fields are added to the Columns and Rows shelves, and a map view with one data point is created. Next, add distinct marks to the view. Right-click (Control-click on Mac) ID and drag it onto Detail on the Marks card. Because each pickup has its own ID, this action breaks up the marks and distinguishes one pickup from another on our map. There will be a warning letting you know that the field added may contain more than the recommended maximum of 1000. Select Add all members . The map view updates to show marks for every pickup location in your data source. Since every location is within Manhattan, the map will zoom to focus on Manhattan in New York City. Note : You might need to filter some data points from your view to create the level of zoom desired. On the Marks card, change the mark type to density by selecting the drop-down menu to the right of Automatic and select Density . Your basic density map is created. You can see that midtown is the most popular area for taxi pickups, and you can adjust the focus further by using the zoom tool. Density will recompute as you zoom in or out. You can select an individual data point from anywhere in your density map. These marks have size (10 pixels) and color (blue) applied by default. Size and color are not adjustable for underlying marks. Zoom around the map to analyze your data. Selection, tooltips, labels, and hovering all work based on the marks in the zoom of the view. Density maps have no fixed or constant display and will always recompute as you zoom. Adjust the appearance You can adjust the color, intensity, and size of your marks to help you analyze the data on your density map. Color : Adjust the colors of your density map by selecting Color from the Marks card. Choose from ten density color palettes or any of the existing color palettes.  The density color palettes are tailored for working on either  light or dark base maps. Note: If your data source contains negative values, those values will also appear when a measure field is added to Color . Use a diverging color palette to make a clear distinction between positive and negative values. Intensity: In the Color menu, use the Intensity slider to increase or decrease the vividness of your map. For example, increasing density lowers the ""max heat"" spots in your data, so that more appear. In the following image, the low intensity map is set at 50%, and the high intensity map is set at 75%. Size : You can use the Size shelf to adjust the size of the density marks. Click the Size to show the size slider. Adjust the slider to  increase or decrease  the size of the marks group that makes your density map. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,2.7. Map data geographically,2.7.4. Create choropleth maps (filled maps),https://help.tableau.com/current/pro/desktop/en-us/maps_build.htm#Choropleth,"Mapping Concepts in Tableau Applies to: Tableau Desktop If you want to analyze your data geographically, you can plot your data on a map in Tableau. This topic explains why and when you should put your data on a map visualization. It also describes some of the types of maps you can create in Tableau, with links to topics that demonstrate how to create each one. If you're new to maps in Tableau, this is a great place to start learning. Why put your data on a map? There are many reasons to put your data on a map. Perhaps you have some location data in your data source? Or maybe you think a map could really make your data pop? Both of those are good enough reasons to create a map visualization, but it’s important to keep in mind that maps, like any other type of visualization, serve a particular purpose: they answer spatial questions. You make a map in Tableau because you have a spatial question, and you need to use a map to understand the trends or patterns in your data. But what is a spatial question? Some examples might be: Which state has the most farmers markets? Where are the regions in the U.S. with the high obesity rates? Which metro station is the busiest for each metro line in my city? Where did the storms move over time? Where are people checking out and returning bikes from their local bike share program? All of these are spatial questions. However, is a map the best way to answer them? When should you use a map to represent your data? If you have a spatial question, a map view might be a great way to answer it. However, that might not always be the case. Take for example, the first question from the previous list: Which state has the most farmers markets? If you had a data source with a list of farmers markets per state, you might create a map view like the one below. Can you easily tell the difference between New York and California? Which one has more farmers markets? What if you create a bar chart instead? Now is it easy to spot the state with the most farmers markets? The above example is one of many where a different type of visualization would be better to answer a spatial question than a map. So when do you know if you should use a map view? One general rule is to ask yourself whether  you could answer your question faster, or easier with another visualization. If the answer is yes, then perhaps a map view isn’t the best visualization for the data you’re using. If the answer is no, then take the following into account: Maps that answer questions well have both appropriate data representation, and attractive data representation. In other words: the data isn’t misleading, and the map is appealing. If your map is beautiful, but the data is misleading, or not insightful, you run the risk of people misinterpreting your data. That’s why it’s important to create maps that represent your data accurately, as well as attractively. What types of maps can you build in Tableau? With Tableau, you can create the following common map types: Proportional symbol maps Choropleth maps (filled maps) Point distribution maps Density maps (heatmaps) Flow maps (path maps) Spider maps (origin-destination maps) Proportional symbol maps Proportional symbol maps are great for showing quantitative data for individual locations. For example, you can plot earthquakes around the world and size them by magnitude. For more information about proportional symbol maps, and to learn how to create them in Tableau, see Create  Maps that Show Quantitative Values in Tableau (Link opens in a new window) . Choropleth maps (filled maps) Also known as filled maps in Tableau, Choropleth maps are great for showing ratio data. For example, if you want to see obesity rates for every county across the United States, you might consider creating a choropleth map to see if you can spot any spatial trends. For more information about Choropleth maps, and to learn how to create them in Tableau, see Create Maps  that Show Ratio or Aggregated Data in Tableau (Link opens in a new window) . Point distribution maps Point distribution maps can be used when you want to show approximate locations and are looking for visual clusters of data. For example, if you want to see where all the hailstorms were in the U.S. last year, you can create a point distribution map to see if you can spot any clusters. For more information about point distribution maps, and to learn how to create them in Tableau, see Create Maps that Highlight Visual Clusters of Data in Tableau (Link opens in a new window) . Density maps (heatmaps) Density maps, also called heatmaps, can be used when you want to show a trend for visual clusters of data. For example, if you want to find out which areas of Manhattan have the most taxi pickups, you can create a density map to see which areas are most popular. For more information about density maps, and to learn how to create them in Tableau, see Create Heatmaps that Show Trends or Density in Tableau . Back to top Flow maps (path maps) You can use flow maps  to connect paths across a map and to see where something went over time. For example, you can track the paths of major storms across the world over a period of time. For more information about flow maps, and to learn how to create them in Tableau, see Create Maps that Show a Path Over Time in Tableau (Link opens in a new window) . Spider maps (origin-destination maps) You can use a spider map to show how an origin location and one or more destination locations interact. For example, you can connect paths between metro stations to plot them on a map, or you can track bike share rides from an origin to one or more destinations. For more information about spider maps, and to learn how to create them in Tableau, see Create Maps that Show Paths Between Origins and Destinations in Tableau (Link opens in a new window) . Resources to help you get started Before you get started with building map views in Tableau, review some of the following resources. Get your geographic data into Tableau Create Tableau Maps from Spatial Files (Link opens in a new window) : If you have Esri Shapefiles, Mapinfo tables, or KML files, start here. Geocode Locations Tableau Does Not Recognize and Plot Them on a Map (Link opens in a new window) : If you have data that Tableau doesn’t recognize, start here. Blend Geographic Data (Link opens in a new window) : If you have geographic data you want to blend with another data source, start here. Format your geographic fields Assign Geographic Roles (Link opens in a new window) : After you bring your geographic data into Tableau, you'll need to format that data for use in Tableau. See also Build-It-Yourself: Build a map view (Link opens in a new window) Customize How Your Map Looks (Link opens in a new window) Use Mapbox Maps (Link opens in a new window) Use Web Map Service (WMS) Servers (Link opens in a new window) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.1. Totals and subtotals,https://help.tableau.com/current/pro/desktop/en-us/calculations_totals_grandtotal_turnon.htm,"Show Totals in a Visualization Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server This article demonstrates how to show grand totals and subtotals in a visualization, as well as how to customize how those totals are calculated and where they appear in the visualization. Show grand totals To show grand totals in a visualization: Click the Analytics pane. In the Analytics pane, under Summarize, drag Totals into the Add Totals dialog, and drop it over either the Row Grand Totals or Column Grand Totals option. Row grand totals appear automatically on the right-side of the visualization. Column grand totals appear automatically at the bottom of the visualization. For information how to move where  totals appear, see Move totals . In order to turn on grand totals: The view must have at least one header – Headers are displayed whenever you place a dimension on the Columns shelf or the Rows shelf. If column headers are displayed, you can calculate grand totals for columns. If row headers are displayed, you can calculate grand totals for rows. Measures must be aggregated – The aggregation determines the values displayed for the totals. See Grand totals and aggregations for more information. Grand totals cannot be applied to continuous dimensions. You can also display totals for graphical views of data. In the figure below, only column totals are calculated because the table contains only column headers. Note: By default, totals are computed on the server if you are connected to a Microsoft Analysis Services data source, and locally if you are connected to an Essbase data source, using the aggregation specified in the cube. Refer to Configure total aggregation to learn more. Options for calculating grand totals When you first turn on grand totals, the totals are computed using disaggregated data in the underlying data source. Consider the following view: The average that you see at the right of the first row under Grand Total is $339. But if you compute the average for the four values you see in the row ($329, $306, $390, $348), the result comes to $343.25, not $339. The discrepancy is due to the fact that Tableau is averaging the data in the underlying data source. In this case there are more than four numbers to average, perhaps many more. The result is derived by averaging all values that have the properties Ship Mode = First Class, Category = Furniture, without regard to region. To see totals that correspond to the numbers you see in your view requires two averaging operations in Tableau: first, values for the individual marks (or cells) in the view must be derived—for example, by averaging all values that have the properties Ship Mode = First Class, Category = Furniture, and Region = Central. Then the results for each region must be derived, by averaging the results for the individual marks. Fortunately, you do not need to perform two operations. To display a result of this type, from the Analysis menu choose Totals > Total All Using > Average . Now the average is performed on the values you see, and not on the disaggregated date in the data source: This kind of total is sometimes referred to as a two-pass total, because the average you see in the grand total column is aggregated twice--once to derive the column or row value, and then again across column or rows to derive the grand total. Grand totals and aggregations When you turn on grand totals, the initial values are computing using the current aggregation for the fields in the view. In this case, totals are based on the underlying data rather than the data in the view. For example, if you are totaling the SUM(Profit) for several products, the grand total will be the sum of the sums of profit. For aggregations such as SUM, you can easily verify the grand total because a summation of a group of sums is still a summation. However, be aware that your results may be unexpected when using other aggregations, especially custom aggregations. For details, See Configure total aggregation . You can verify any calculation such as an aggregation or a grand total by viewing the underlying disaggregated data. The following table summarizes the standard aggregations and the grand totals that are calculated by default when, from the Analysis menu, Totals > Total All Using is set to the default value Automatic . Note : Only Automatic totals are available for table calculations and fields from a secondary data source. Total aggregations cannot be applied to table calculations or fields from a secondary data source. For more information, see Showing Grand Totals with Blended Data (Link opens in a new window) and Grand Totals and Subtotals Do Not Show Expected Numbers With Table Calculations (Link opens in a new window) in the Tableau Knowledge Base. Aggregation Calculation Description Sum Shows the sum of the values shown in the row or column. Average Shows the average of the values shown in the row or column. Median Shows the median for the values shown in the row or column. Count; Count Distinct Shows how many values or distinct values are displayed in the rows and columns in the view. Minimum Shows the minimum value shown in the row or column. Maximum Shows the maximum value shown in the row or column. Percentile Shows the average percentile for all values shown in the row or column. Standard Deviation The grand total using standard deviation is the standard deviation of the values shown in the row or column. Variance The grand total using variance is not the variance of the rows and columns in which they reside but rather of the underlying data behind the row or column. Show subtotals To show subtotals in a visualization: Click the Analytics pane. In the Analytics pane, under Summarize, drag Totals into the Add Totals dialog, and drop it over Subtotals . Move totals By default, row grand totals and subtotals appear on the right of the view, and column grand totals and subtotals appear at the bottom of the view. In Tableau Desktop, you can also select to display totals on the left or top of the view. To move row totals to the left of the view: Select Analysis > Totals , and then select Row Totals to Left . To move column totals to the top of the view: Select Analysis > Totals , and then select Column Totals to Top . Configure total aggregation When totals are turned on in the visualization (either  grand totals, subtotals, or both), you can specify how totals should be computed. For example, you can choose to calculate totals using a sum, average, minimum, or maximum. To configure all totals: Select Analysis > Totals > Total All Using , and then select an aggregation from the list. To configure totals for a specific field: Right-click (Control-click on a Mac) a field in the view, select Total using , and then select an aggregation from the list. When you choose Automatic , totals  are based on the underlying data, which is disaggregated, and not on the data in the view. See Options for calculating grand totals . For details on how Tableau computes totals using the current aggregation, see Grand totals and aggregations . When you choose any of the other values ( Sum , Average , Minimum , or Maximum ), all totals are computed using the selected aggregation. The computations are performed on the aggregated data you see in the view. An additional value, Server , may be available. Server computation is not always available and sometimes the totals will be blank for specific members in the view. When using server computation keep in mind the following information: Server computation is only available for ASO cubes. Server computation is not available for dynamic hierarchies. This means that if the members in the view are part of a dimension or hierarchy that is tagged as dynamic, they cannot be included in the set of values you are using to compute the totals and will show up as blank in the view. If you are computing totals for a calculated field whose formula makes assumptions about other calculated members at different levels in the hierarchy, the totals will display as blank in the view. See Also Apply Advanced Analysis to a View (Analytics Pane) Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.2. Reference lines,https://help.tableau.com/current/pro/desktop/en-us/reference_lines.htm,"Reference Lines, Bands, Distributions, and Boxes Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server You can add a reference line, band, distribution, or box plot to identify a specific value, region, or range  on a continuous axis in a Tableau view. For example, if you are analyzing the monthly sales for several products, you can include a reference line at the average sales mark so you can see how each product performed against the average. Tableau lets you add as many reference lines, bands, distributions, and box plots to a view as you require. Types of Reference Lines, Bands, Distributions, and Boxes You can add reference lines, bands, distributions, or (in Tableau Desktop but not on the web) box plots to any continuous axis in the view. Reference Lines - You can add a reference line at a constant or computed value on the axis. Computed values can be based on a specified field. You can also include  confidence intervals with a reference line. Reference Bands - Reference bands shade an area behind the marks in the view between two constant or computed values on the axis. Reference Distributions - Reference distributions add a gradient of shading to indicate the distribution of values along the axis. Distribution can be defined by percentages, percentiles, quantiles (as in the following image), or standard deviation. Reference distributions can also be used to create bullet charts. See Add a Bullet Graph later in this article for specifics. Box Plots - Box plots (also known as box and whisker charts) are a standardized graphic for describing the distribution of values along an axis. Box plots show quartiles (also known as hinges) and whiskers. Tableau provides different box plot styles, and allows you to configure the location of the whiskers and other details. Add a Reference Line You can add a reference line to any continuous axis in the view. To add a reference line: Drag Reference Line from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area offers three options: The view above is from a web editing session. In Tableau Desktop, the process is the same but the user interface looks a bit different. The terms Table , Pane and Cell define the scope for the item: For a more complicated view—for example, if the view contains a line chart with multiple or dual axes—Tableau shows you an expanded drop target area: If you drop the item in one of the three larger boxes in the header (for example, the Table box), a separate reference line is added for each continuous field in the view: But if you drop the item in any of the lower boxes that are aligned with a specific continuous field, the line is added on the corresponding axis, with the specified scope. When you drop the line in the target area, Tableau displays a dialog box: Tableau Desktop version Web version The Line option is already selected at the top of the dialog box. Select a continuous field from the Value field to use as the basis for your reference line. You can also select a parameter. You cannot select a continuous field that isn't currently in the view as the basis for your reference line. If you want to use such a continuous field, do the following: Drag the continuous field  from the Data pane to the Details target on the Marks card. Change the continuous field's aggregation if necessary. This will not change the view, but it will allow you to use that continuous field as the basis for your reference band. Click on the reference line in the view and choose Edit to re-open the Edit Line dialog box. Select an aggregation.  The aggregations that are displayed depend on the continuous field you select: Total - places a line at the aggregate of all the values in either the cell, pane, or the entire view. This option is particularly useful when computing a weighted average rather than an average of averages. It is also useful when working with a calculation with a custom aggregation. The total is computed using the underlying data and behaves the same as selecting one of the totals option the Analysis menu. Sum - places a line at the SUM of all the values in either the cell, pane, or entire view. Constant - places a line at the specified value on the axis. Minimum - places a line at the minimum value. Maximum - places a line at the maximum value. Average - places a line at the average value along the axis. Median - places a line at the median value. Select how you want to label the line: None –select this option to not show a label for the reference line. Value – select this option to show a label  corresponding to the line's value on the axis. Computation – select this option to display the name of the continuous field that is the basis for your reference line and any computation that is performed. Custom – select this option to build a custom label in the text box. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Select how you want the tooltip to appear. None –select this option to not show a tooltip for the reference line. Automatic – select this option to show the default tooltip for the reference line. Custom – select this option to build a custom label in the tooltip. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Specify whether to display the line with a confidence interval, just the line, or just the confidence interval. Confidence interval distribution bands shade the region in which the population average will fall n of the time, where n is the value you select in the drop-down on the right. You can choose one of the listed numeric values or  select a parameter: The higher the value you select, the wider the bands will be. In Tableau Desktop, you can also specify formatting options for the line. Optionally, add a fill color above and below the 				line. When you are displaying a line and a confidence interval, the shading will be darker within the confidence interval, and lighter beyond it: When you are displaying a confidence interval without a line, the fill colors are disregarded, though your settings are retained and then applied if you decide later to show a line. Specify whether to Show recalculated line for highlighted or selected data points . For more information, see Compare marks data with recalculated lines . Add Reference Bands Reference bands are shaded areas behind the marks in the view between two constant or computed values on the axis. You can add reference bands to any continuous axis in the view. To add a reference band: Drag Reference Band from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area would offer just three options: The terms Table , Pane , and Cell define the scope for the item: For a more complicated view—for example, if the view contains multiple or dual axes—Tableau shows you an expanded drop target area that looks like this: If you drop the item in one of the three larger boxes in the header (for example, the Table box), a separate set of bands is added for each continuous field in the view: But if you drop the item in any of the lower boxes aligned with a specific continuous field, the band is added on the corresponding axis, with the specified scope. When you drop the band in the target area, Tableau displays a dialog box: Tableau Desktop version Web version The Band area is already selected at the top of the dialog box. Select two continuous fields to use as the basis for your reference band one in each Value field. You can also select a parameter from the drop-down lists. Do not select the same continuous field and aggregation in both areas. You cannot select a continuous field that isn't currently in the view as the basis for your reference band. If you want to use such a continuous field, do the following: Drag the continuous field  from the Data pane to the Details target on the Marks card. Change the continuous field's aggregation if necessary. This will not change the view, but it will allow you to use that continuous field as the basis for your reference band. Click on the reference band in the view and choose Edit to re-open the Edit Band dialog box, and select the continuous field in in the Value (From) area and one in the Value (To) area. Select a computation for each value. The aggregations that are displayed depend on the continuous field you select: Total - extends the band to a value that is at the aggregate of all the values in either the cell, pane, or the entire view. This option is particularly useful when computing a weighted average rather than an average of averages. It is also useful when working with a calculation with a custom aggregation. The total is computed using the underlying data and behaves the same as selecting one of the totals option the Analysis menu. Sum - extends the band to a value that is  at the SUM of all the values in either the cell, pane, or entire view. Constant - extends the band to a value that is at the specified value on the axis. Minimum - extends the band to a value that is  at the minimum value. Maximum - extends the band to a value that is  at the maximum value. Average - extends the band to a value that is  at the average value along the axis. Median - extends the band to a value that is at the median value. Select how you want to label the bands: None –select this option 						to not show a label for the reference band. Value – select this option to show a label  corresponding to the band's value on the axis. Computation – select this option to display the name of the continuous field that 						is the basis for your reference band and any computation that is performed. Custom – select this option to build a custom label 							in the text box. You can use the menu to the right of the text 						box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Select how you want the tooltip to appear. None –select this option to not show a tooltip for the reference band. Automatic – select this option to show the default tooltip for the reference band. Custom – select this option to build a custom label in the tooltip. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . In Tableau Desktop, you can also specify formatting options for the bands. You can mark the two values with 						a line or select a shading color for the band. Specify whether to Show recalculated line for highlighted or selected data points . For more information, see Compare marks data with recalculated lines . Add Reference Distributions When you add a reference distribution, you specify one, two, or more  values. With one value, the result is a line; with two or more values the result is a set of one, two, or more bands. To add a reference distribution: Drag Distribution Band from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. Select a scope for the distribution. The terms Table , Pane , and Cell define the scope for the item: Select the computation that will be used to create the distribution: Percentages - shades the interval between the specified percentage values. Use a comma to separate two or more percentage values (for example, 60, 80 ), and then specify which measure and aggregation to use for the percentages. Percentiles - shades intervals at the specified percentiles. Choose Enter a value from the Value drop-down list, and then enter two or more numerical values, delimited by commas (for example, 60,80 or 25, 50, 75 ). Quantiles - breaks the view into the specified number of tiles using shading and lines. When you select this computation, you must also specify the number of tiles (from 3 to 10, inclusive). For example, if you select 3, Tableau calculates the boundaries between the first, second and third terciles by calling the general quantile function and asking for the 33.33 and the 66.66 quantiles. It then shades the three terciles differently. Tableau uses estimation type 7 in the R standard to compute quantiles and percentiles. Standard Deviation - places lines and shading to indicated the specified number of standard deviations above and below the mean. When you select this option you must specify the factor, which is the number of standard deviations and whether the computation is on a sample or the population. Specify how you want to label the distribution bands: None –select this option 						to not show a label for the distribution bands. Value – select this option to show a label  corresponding to each distribution band's value on the axis. Computation – select this option to display the name of the continuous field that 						is the basis for your distribution bands and any computation that is performed. Custom – select this option to build a custom label 							in the text box. You can use the menu to the right of the text 						box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Specify whether to Show recalculated band for highlighted or selected data points . For more information, see Compare marks data with recalculated lines in the Tableau Desktop online help. Add a Bullet Graph Reference distributions can also be used to create bullet graphs. A bullet graph is a variation of a bar graph developed to replace dashboard gauges and meters. The bullet graph is generally used to compare a primary measure to one or more other measures in the context of qualitative ranges of performance such as poor, satisfactory, and good. You can create a bullet graph by adding  a distribution to indicate the qualitative ranges of performance, and a line to indicate the target. The following procedure uses Show Me to make this process easier. Select one or more dimensions, and two measures in the Data pane. The bullet graph will compare measure values. For example, budget vs. actual; actual vs. target; etc. Select multiple fields in the Data pane by holding down the Ctrl key as you click fields. If you are using the Superstore sample workbook, you can select the fields show below: Click the Show Me button in the toolbar. Select Bullet Graph in the Show Me pane. Tableau adds a reference distribution that is defined at 60% and 80% of the Average of the measure on Detail. It also adds a reference line that marks the Average of that same measure. The other measure is placed on the Rows shelf. You can edit either of these to change its definition. For example, you may want to add  100% to the set of distribution band values, or draw a line at a constant value. Click on the outer edge or a distribution band, or on the line, and choose Edit . Add a Box Plot In Tableau Desktop, but not on the web, you can add box plots to a continuous axis. Use  box plots, also known as  box-and-whisker plots, to show the distribution of values along an axis. Boxes indicate the middle 50 percent of the data (that is, the middle two quartiles of the data's distribution). You can configure lines, called whiskers ,  to display all points within 1.5 times the interquartile range (in other words, all points within 1.5 times the width of the adjoining box), or all points at the maximum extent of the data, as shown in the following image: Boxplots are also available from the Show Me pane when you have at least one measure in the view: For information on Show Me, see Use Show Me to Start a View To add a box plot: Right-click (Control-click on a Mac) on a quantitative axis and select Add Reference 				Line . In the Add Reference Line, Band, or Box dialog box, select Box Plot . Under Plot Options, specify placement for the whiskers: Data within 1.5 times the IQR - places whiskers at a location that is 1.5 times the interquartile range—that is, 1.5 times further out than the width of the adjoining box. This is also known as a schematic box plot. Maximum extent of the data - places whiskers at the farthest data point (mark) in the distribution. This is also known as a skeletal box plot. Specify whether to Hide underlying marks (except outliers) —that is, whether to hide all marks except those beyond the whiskers. Configure the appearance of the plot by selecting a Style , Fill , Border , and Whiskers . Box Plot Alternatives: Show Me Vs.  Add Reference Line, Band, or Box The difference between adding a box plot using Show Me and adding a box plot using Add Reference Line is that with Show Me, the box plot is your visualization, whereas with Add Reference Line, Band, or Box, you are adding a box plot to an existing visualization. For example, you could create the following view by first selecting a circle view in Show Me, and then adding a box plot from Add Reference Line: Edit Existing Reference Lines, Bands, and Distributions You can edit existing lines, bands, or distributions. To do this, click on a line or on the outer edge of a band and choose Edit to reopen the edit dialog box for that object. Remove Reference Lines, Bands, or Distributions To remove a reference line, band, or distribution, click on a line or on the outer edge of a band and choose Remove . You can also drag a line or band off the view. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.3. Reference bands,https://help.tableau.com/current/pro/desktop/en-us/reference_lines.htm,"Reference Lines, Bands, Distributions, and Boxes Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server You can add a reference line, band, distribution, or box plot to identify a specific value, region, or range  on a continuous axis in a Tableau view. For example, if you are analyzing the monthly sales for several products, you can include a reference line at the average sales mark so you can see how each product performed against the average. Tableau lets you add as many reference lines, bands, distributions, and box plots to a view as you require. Types of Reference Lines, Bands, Distributions, and Boxes You can add reference lines, bands, distributions, or (in Tableau Desktop but not on the web) box plots to any continuous axis in the view. Reference Lines - You can add a reference line at a constant or computed value on the axis. Computed values can be based on a specified field. You can also include  confidence intervals with a reference line. Reference Bands - Reference bands shade an area behind the marks in the view between two constant or computed values on the axis. Reference Distributions - Reference distributions add a gradient of shading to indicate the distribution of values along the axis. Distribution can be defined by percentages, percentiles, quantiles (as in the following image), or standard deviation. Reference distributions can also be used to create bullet charts. See Add a Bullet Graph later in this article for specifics. Box Plots - Box plots (also known as box and whisker charts) are a standardized graphic for describing the distribution of values along an axis. Box plots show quartiles (also known as hinges) and whiskers. Tableau provides different box plot styles, and allows you to configure the location of the whiskers and other details. Add a Reference Line You can add a reference line to any continuous axis in the view. To add a reference line: Drag Reference Line from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area offers three options: The view above is from a web editing session. In Tableau Desktop, the process is the same but the user interface looks a bit different. The terms Table , Pane and Cell define the scope for the item: For a more complicated view—for example, if the view contains a line chart with multiple or dual axes—Tableau shows you an expanded drop target area: If you drop the item in one of the three larger boxes in the header (for example, the Table box), a separate reference line is added for each continuous field in the view: But if you drop the item in any of the lower boxes that are aligned with a specific continuous field, the line is added on the corresponding axis, with the specified scope. When you drop the line in the target area, Tableau displays a dialog box: Tableau Desktop version Web version The Line option is already selected at the top of the dialog box. Select a continuous field from the Value field to use as the basis for your reference line. You can also select a parameter. You cannot select a continuous field that isn't currently in the view as the basis for your reference line. If you want to use such a continuous field, do the following: Drag the continuous field  from the Data pane to the Details target on the Marks card. Change the continuous field's aggregation if necessary. This will not change the view, but it will allow you to use that continuous field as the basis for your reference band. Click on the reference line in the view and choose Edit to re-open the Edit Line dialog box. Select an aggregation.  The aggregations that are displayed depend on the continuous field you select: Total - places a line at the aggregate of all the values in either the cell, pane, or the entire view. This option is particularly useful when computing a weighted average rather than an average of averages. It is also useful when working with a calculation with a custom aggregation. The total is computed using the underlying data and behaves the same as selecting one of the totals option the Analysis menu. Sum - places a line at the SUM of all the values in either the cell, pane, or entire view. Constant - places a line at the specified value on the axis. Minimum - places a line at the minimum value. Maximum - places a line at the maximum value. Average - places a line at the average value along the axis. Median - places a line at the median value. Select how you want to label the line: None –select this option to not show a label for the reference line. Value – select this option to show a label  corresponding to the line's value on the axis. Computation – select this option to display the name of the continuous field that is the basis for your reference line and any computation that is performed. Custom – select this option to build a custom label in the text box. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Select how you want the tooltip to appear. None –select this option to not show a tooltip for the reference line. Automatic – select this option to show the default tooltip for the reference line. Custom – select this option to build a custom label in the tooltip. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Specify whether to display the line with a confidence interval, just the line, or just the confidence interval. Confidence interval distribution bands shade the region in which the population average will fall n of the time, where n is the value you select in the drop-down on the right. You can choose one of the listed numeric values or  select a parameter: The higher the value you select, the wider the bands will be. In Tableau Desktop, you can also specify formatting options for the line. Optionally, add a fill color above and below the 				line. When you are displaying a line and a confidence interval, the shading will be darker within the confidence interval, and lighter beyond it: When you are displaying a confidence interval without a line, the fill colors are disregarded, though your settings are retained and then applied if you decide later to show a line. Specify whether to Show recalculated line for highlighted or selected data points . For more information, see Compare marks data with recalculated lines . Add Reference Bands Reference bands are shaded areas behind the marks in the view between two constant or computed values on the axis. You can add reference bands to any continuous axis in the view. To add a reference band: Drag Reference Band from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area would offer just three options: The terms Table , Pane , and Cell define the scope for the item: For a more complicated view—for example, if the view contains multiple or dual axes—Tableau shows you an expanded drop target area that looks like this: If you drop the item in one of the three larger boxes in the header (for example, the Table box), a separate set of bands is added for each continuous field in the view: But if you drop the item in any of the lower boxes aligned with a specific continuous field, the band is added on the corresponding axis, with the specified scope. When you drop the band in the target area, Tableau displays a dialog box: Tableau Desktop version Web version The Band area is already selected at the top of the dialog box. Select two continuous fields to use as the basis for your reference band one in each Value field. You can also select a parameter from the drop-down lists. Do not select the same continuous field and aggregation in both areas. You cannot select a continuous field that isn't currently in the view as the basis for your reference band. If you want to use such a continuous field, do the following: Drag the continuous field  from the Data pane to the Details target on the Marks card. Change the continuous field's aggregation if necessary. This will not change the view, but it will allow you to use that continuous field as the basis for your reference band. Click on the reference band in the view and choose Edit to re-open the Edit Band dialog box, and select the continuous field in in the Value (From) area and one in the Value (To) area. Select a computation for each value. The aggregations that are displayed depend on the continuous field you select: Total - extends the band to a value that is at the aggregate of all the values in either the cell, pane, or the entire view. This option is particularly useful when computing a weighted average rather than an average of averages. It is also useful when working with a calculation with a custom aggregation. The total is computed using the underlying data and behaves the same as selecting one of the totals option the Analysis menu. Sum - extends the band to a value that is  at the SUM of all the values in either the cell, pane, or entire view. Constant - extends the band to a value that is at the specified value on the axis. Minimum - extends the band to a value that is  at the minimum value. Maximum - extends the band to a value that is  at the maximum value. Average - extends the band to a value that is  at the average value along the axis. Median - extends the band to a value that is at the median value. Select how you want to label the bands: None –select this option 						to not show a label for the reference band. Value – select this option to show a label  corresponding to the band's value on the axis. Computation – select this option to display the name of the continuous field that 						is the basis for your reference band and any computation that is performed. Custom – select this option to build a custom label 							in the text box. You can use the menu to the right of the text 						box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Select how you want the tooltip to appear. None –select this option to not show a tooltip for the reference band. Automatic – select this option to show the default tooltip for the reference band. Custom – select this option to build a custom label in the tooltip. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . In Tableau Desktop, you can also specify formatting options for the bands. You can mark the two values with 						a line or select a shading color for the band. Specify whether to Show recalculated line for highlighted or selected data points . For more information, see Compare marks data with recalculated lines . Add Reference Distributions When you add a reference distribution, you specify one, two, or more  values. With one value, the result is a line; with two or more values the result is a set of one, two, or more bands. To add a reference distribution: Drag Distribution Band from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. Select a scope for the distribution. The terms Table , Pane , and Cell define the scope for the item: Select the computation that will be used to create the distribution: Percentages - shades the interval between the specified percentage values. Use a comma to separate two or more percentage values (for example, 60, 80 ), and then specify which measure and aggregation to use for the percentages. Percentiles - shades intervals at the specified percentiles. Choose Enter a value from the Value drop-down list, and then enter two or more numerical values, delimited by commas (for example, 60,80 or 25, 50, 75 ). Quantiles - breaks the view into the specified number of tiles using shading and lines. When you select this computation, you must also specify the number of tiles (from 3 to 10, inclusive). For example, if you select 3, Tableau calculates the boundaries between the first, second and third terciles by calling the general quantile function and asking for the 33.33 and the 66.66 quantiles. It then shades the three terciles differently. Tableau uses estimation type 7 in the R standard to compute quantiles and percentiles. Standard Deviation - places lines and shading to indicated the specified number of standard deviations above and below the mean. When you select this option you must specify the factor, which is the number of standard deviations and whether the computation is on a sample or the population. Specify how you want to label the distribution bands: None –select this option 						to not show a label for the distribution bands. Value – select this option to show a label  corresponding to each distribution band's value on the axis. Computation – select this option to display the name of the continuous field that 						is the basis for your distribution bands and any computation that is performed. Custom – select this option to build a custom label 							in the text box. You can use the menu to the right of the text 						box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Specify whether to Show recalculated band for highlighted or selected data points . For more information, see Compare marks data with recalculated lines in the Tableau Desktop online help. Add a Bullet Graph Reference distributions can also be used to create bullet graphs. A bullet graph is a variation of a bar graph developed to replace dashboard gauges and meters. The bullet graph is generally used to compare a primary measure to one or more other measures in the context of qualitative ranges of performance such as poor, satisfactory, and good. You can create a bullet graph by adding  a distribution to indicate the qualitative ranges of performance, and a line to indicate the target. The following procedure uses Show Me to make this process easier. Select one or more dimensions, and two measures in the Data pane. The bullet graph will compare measure values. For example, budget vs. actual; actual vs. target; etc. Select multiple fields in the Data pane by holding down the Ctrl key as you click fields. If you are using the Superstore sample workbook, you can select the fields show below: Click the Show Me button in the toolbar. Select Bullet Graph in the Show Me pane. Tableau adds a reference distribution that is defined at 60% and 80% of the Average of the measure on Detail. It also adds a reference line that marks the Average of that same measure. The other measure is placed on the Rows shelf. You can edit either of these to change its definition. For example, you may want to add  100% to the set of distribution band values, or draw a line at a constant value. Click on the outer edge or a distribution band, or on the line, and choose Edit . Add a Box Plot In Tableau Desktop, but not on the web, you can add box plots to a continuous axis. Use  box plots, also known as  box-and-whisker plots, to show the distribution of values along an axis. Boxes indicate the middle 50 percent of the data (that is, the middle two quartiles of the data's distribution). You can configure lines, called whiskers ,  to display all points within 1.5 times the interquartile range (in other words, all points within 1.5 times the width of the adjoining box), or all points at the maximum extent of the data, as shown in the following image: Boxplots are also available from the Show Me pane when you have at least one measure in the view: For information on Show Me, see Use Show Me to Start a View To add a box plot: Right-click (Control-click on a Mac) on a quantitative axis and select Add Reference 				Line . In the Add Reference Line, Band, or Box dialog box, select Box Plot . Under Plot Options, specify placement for the whiskers: Data within 1.5 times the IQR - places whiskers at a location that is 1.5 times the interquartile range—that is, 1.5 times further out than the width of the adjoining box. This is also known as a schematic box plot. Maximum extent of the data - places whiskers at the farthest data point (mark) in the distribution. This is also known as a skeletal box plot. Specify whether to Hide underlying marks (except outliers) —that is, whether to hide all marks except those beyond the whiskers. Configure the appearance of the plot by selecting a Style , Fill , Border , and Whiskers . Box Plot Alternatives: Show Me Vs.  Add Reference Line, Band, or Box The difference between adding a box plot using Show Me and adding a box plot using Add Reference Line is that with Show Me, the box plot is your visualization, whereas with Add Reference Line, Band, or Box, you are adding a box plot to an existing visualization. For example, you could create the following view by first selecting a circle view in Show Me, and then adding a box plot from Add Reference Line: Edit Existing Reference Lines, Bands, and Distributions You can edit existing lines, bands, or distributions. To do this, click on a line or on the outer edge of a band and choose Edit to reopen the edit dialog box for that object. Remove Reference Lines, Bands, or Distributions To remove a reference line, band, or distribution, click on a line or on the outer edge of a band and choose Remove . You can also drag a line or band off the view. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.4. Average lines,https://help.tableau.com/current/pro/desktop/en-us/environ_workspace_analytics_pane.htm,"Apply Advanced Analysis to a View (Analytics Pane) Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Drag reference lines, box plots, trend lines forecasts, and other items into your view from the Analytics pane, which appears on the left side of the workspace. Toggle between the Data pane and the Analytics pane by clicking the tabs at the top of the side bar. Tableau Desktop Analytics pane In Tableau Desktop, options for adding Analytics objects to the view are available the Analytics pane or menu, or in context in the view. For example, reference lines and bands are available when you edit an axis, and trend lines and forecasts are available from the Analysis menu. The Analytics pane provides drag-and-drop access for the various options. On the web, most Analytics objects are available from the Analytics pane. Add an analytics object to the view To add an item from the Analytics pane, drag it into the view. When you drag an item from the Analytics pane, Tableau shows the possible destinations for that item. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area would offer these three options: The terms Table , Pane and Cell define the scope for the item: For a more complicated view—for example, if the view contained a line chart with multiple or dual axes—Tableau would show you a drop target area that looked like this: If you dropped the item in one of the three larger boxes in the header at the top of the drop target area--for example, the Table box--a separate median with quartiles would be added for each axis: But if you drop the item in any of the six lower boxes aligned with a specific measure, the median with quartiles would only be added on the corresponding axis, with the specified scope. Delete an analytics object from the view You can delete an analytics object from the view by clicking Undo, or drag the object off the view to delete it. You can also click on an item and choose Remove from the tooltip. Note : Some Analytics pane items ( Median with Quartiles and Average with 95% CI ) add both a reference line and a reference distribution. Unless you are using Undo, you would need to delete these items separately. Edit an analytics object in the view To edit an item you have added from the Analytics pane, click on the item and select Edit from the tooltip. For additional editing options, see the section for a particular item type under Analytics object definitions, below. Analytics object definitions The following items can be dragged from the Analytics pane and dropped in the view. If an analytics object cannot be applied to the current configuration of fields in the view, it isn't available. Constant Line Adds one or more constant lines to the view. You can add a constant line for  a specific measure, for all measures, or for date dimensions. When you add a constant line, Tableau displays a Value prompt where you specify the value for the constant: In Tableau Desktop, the Value prompt for a date value is a calendar control: You can click on a resulting constant line and choose Edit or Remove . In Tableau Desktop there is a third option: Format . Choosing Edit opens the Edit Reference Line dialog box. For details, see Edit Existing Reference Lines, Bands, and Distributions in the Reference Lines, Bands, Distributions, and Boxes article. Another way to edit a line in Tableau Desktop is to right-click (control-click on Mac) the relevant axis and choose Edit Reference Line . Average Line Adds one or more average lines to the view. You can add an average line for a specific measure or for all measures. You can click on a resulting average line and choose a different aggregation, such as Total or Sum. You can also choose Edit or Remove . In Tableau Desktop there is a third option: Format . Choosing Edit opens the Edit Reference Line dialog box. For details, see Edit Existing Reference Lines, Bands, and Distributions in the Reference Lines, Bands, Distributions, and Boxes article. Another way to edit a line in Tableau Desktop is to right-click (control-click on Mac) the relevant axis and choose Edit Reference Line . Median with Quartiles Adds one or more sets of median lines and distribution bands to the view. You can add a median with quartiles for a specific measure or for all measures. The distribution bands are computed as quartiles; the middle two quartiles are shaded. You can click on a resulting median line or distribution and choose Edit or Remove . In Tableau Desktop there is a third option: Format . Median lines and distributions must be edited, formatted, or removed separately. Choosing Edit opens the Edit Reference Line dialog box.  You must click on the outer edge of a distribution band to see the options--clicking in the middle of the band has no effect. For details, see Edit Existing Reference Lines, Bands, and Distributions in the Reference Lines, Bands, Distributions, and Boxes article. Another way to edit a line or distribution in Tableau Desktop is to right-click (control-click on Mac) the relevant axis and choose Edit Reference Line . A submenu will offer you two choices: Quartiles and Median . For information on distribution types, including quartiles, see Add Reference Distributions in the Reference Lines, Bands, Distributions, and Boxes article. Box Plot Adds one or more box plots to the view. You can add box plots for a specific measure or for all measures. The scope for a box plot is always Cell (and never Table or Pane ). Click or hover over any of the horizontal lines in the box plot to see statistical information about the whiskers, quartiles, and median. You can also choose Edit or Remove when you click on a line. In Tableau Desktop there is a third option: Format . Choosing Edit opens the Edit Reference Line dialog box.  Another way to edit a box plot in Tableau Desktop is to right-click (control-click on Mac) the relevant axis and choose Edit Reference Line . Note : In Tableau Desktop, there are two items named Box Plot in the Analytics pane. For the Box Plot option in the Summarize section, Tableau will automatically add a box plot for the specified target. For the Box Plot option in the Custom section, Tableau will open the Edit Reference Line, Band, or Box dialog box after you specify a target. Totals Adds totals to the view. When you add totals, the drop options are Subtotals , Column Grand Totals , and Row Grand Totals . For details, see Show Totals in a Visualization . To remove totals, click the relevant column or row header and choose Remove . In Tableau Desktop, you can also click on a totals column or row header after adding totals and set the aggregation for that row or column from the tooltip: Average with 95% CI Adds one or more sets of average lines with distribution bands; the distribution bands are configured at a 95% confidence interval. You can add these items for a specific measure or for all measures. The confidence interval distribution bands shade the region in which the population average will fall 95% of the time. You can click on a resulting average line or distribution and choose Edit or Remove . In Tableau Desktop there is a third option: Format . Choosing Edit opens the Edit Reference Line dialog box. The average lines and distributions must be edited, formatted, or removed separately.  You must click on the outer edge of a distribution band to see the options--clicking in the middle of the band has no effect. Another way to edit a line or distribution in Tableau Desktop is to right-click (control-click on Mac) the relevant axis and choose Edit Reference Line . A submenu will offer you two choices: Average and 95% Confidence Interval . You can also remove lines and bands by dragging them off the view. Median with 95% CI Adds one or more sets of median lines with distribution bands; the distribution bands are configured at a 95% confidence interval. You can add these items for a specific measure or for all measures. The confidence interval distribution bands shade the region in which the population median will fall 95% of the time. You can click on a resulting median line or distribution and choose Edit , Format , or Remove . In Tableau Desktop there is a third option: Format . Choosing Edit opens the Edit Reference Line dialog box. The median lines and distributions must be edited, formatted, or removed separately.  You must click on the outer edge of a distribution band to see the options--clicking in the middle of the band has no effect. Another way to edit a line or distribution in Tableau Desktop is to right-click (control-click on Mac) the relevant axis and choose Edit Reference Line . A submenu will offer you two choices: Median and 95% Confidence Interval . You can also remove lines and bands by dragging them off the view. Trend Line Adds one or more trend lines to the view. When you add trend lines, the drop options identify the trend line model types available in Tableau: Linear , Logarithmic , Exponential , and Polynomial . For some views, only a subset of these options is available. For details, see Trend Line Model Types Click on a trend line to remove or  edit it, or to see a statistical definition. You can also remove a trend line by dragging it off the view. Forecast Adds a forecast to the view. This option is only available in Tableau Desktop—not when you edit a view on the web. Forecasting is only possible when there is at least one measure in the view. Forecasting is not supported for views based on multidimensional data sources. In addition, the view cannot contain any of the following: Table calculations Disaggregated measures Percent calculations Grand Totals or Subtotals Date values with aggregation set to Exact Date A time series containing null values also imposes constraints. For details, see Forecasting . To remove, edit, or read a description of the current forecast, go to the Analysis menu and choose Forecast . Custom Reference Line You can add reference lines for a specific measure or for all measures in the view. After you drag a reference line from the Analytics pane and drop it on a target, Tableau automatically opens  an edit dialog box. See Add a Reference Line in the Reference Lines, Bands, Distributions, and Boxes article for information on the available options. To return to this dialog box later, click on the line and choose Edit . Custom Reference Band You can add reference bands for a specific measure or for all measures in the view. After you drag a reference band from the Analytics pane and drop it on a target, Tableau automatically opens  the Edit Reference Line, Band, or Box dialog box. See Add Reference Bands in the Reference Lines, Bands, Distributions, and Boxes article for information on the available options. To return to this dialog box later, click on the band and choose Edit . You must click on the outer edge of a reference band to see the options--clicking in the middle of the band has no effect. Custom Distribution Band You can add reference distributions for a specific measure or for all measures in the view. After you drag a reference distribution from the Analytics pane and drop it on a target, Tableau automatically opens  Edit Reference Line, Band, or Box dialog box. See Add Reference Distributions in the Reference Lines, Bands, Distributions, and Boxes article for information on the available options. To return to this dialog box later, click on the band and choose Edit . You must click on the outer edge of a distribution band to see the options--clicking in the middle of the band has no effect. Custom Box Plot In Tableau Desktop—but not when you edit a view on the web—you can drag a box plot from the Custom section of the Analytics pane and drop it on a target. (But keep in mind that on the web, you can add a box plot from the Summarize section on the Analytics pane.) When you drag Box Plot from the Custom section, Tableau automatically opens  Edit Reference Line, Band, or Box dialog box. See Add a Box Plot in the Reference Lines, Bands, Distributions, and Boxes article for information on the available options. The scope for a box plot is always Cell (and never Table or Pane ). Click any of the horizontal lines in the box plot to see statistical information about the whiskers, quartiles, and median. To return to this dialog box later, click on the band and choose Edit . Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.5. Trend lines,https://help.tableau.com/current/pro/desktop/en-us/trendlines_add.htm,"Add Trend Lines to a Visualization Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server You can show trend lines in a visualization to highlight trends in your data. You can publish a view that contains trend lines, and you add trend lines to a view as you edit it on the web. When you add trend lines to a view, you can specify how you want them to look and behave. Add trend lines to a view To add a trend line to a visualization: Select the Analytics pane. From the Analytics pane, drag Trend Line into the view, and then drop it on the Linear, Logarithmic, Exponential, Polynomial, or Power model types. For more information on each of these model types, see Trend Line Model Types . About adding trend lines (and when you can't add them) To add trend lines to a view, both axes must contain a field that can be interpreted as a number. For example, you cannot add a trend line to a view that has the Product Category dimension, which contains strings, on the Columns shelf and the Profit measure on the Rows shelf. However, you can add a trend line to a view of sales over time because both sales and time can be interpreted as numeric values. For multidimensional data sources, the date hierarchies actually contain strings rather than numbers. Therefore, trend lines are not allowed. Additionally, the ‘m/d/yy’ and ‘mmmm yyyy’ date formats on all data sources do not allow trend lines. If you have trend lines turned on and you modify the view in a way where trend lines are not allowed, the trend lines do not show. When you change the view back to a state that allows trend lines, they reappear. Tableau automatically stacks bar marks in many cases. However, trend lines cannot be turned on for stacked bars. You can turn off stacked marks by clearing the Analysis > Stack Marks option. Edit a trend line Once you add a trend line to the visualization, you can edit it to fit your analysis. To edit a trend line: In Tableau Desktop : Right-click a trend line in the visualization, and select Edit Trend Lines . In web editing mode : In the visualization, click the trend line, and then hover your cursor over it. In the tooltip that appears, select Edit to open the Trend Line Options dialog box. Note : To edit a trend line in Tableau Cloud or Tableau Server, you must have web editing permissions. You can  configure the following options in the Trend Line Options dialog box: Select a model type. For more information, see Trend Line Model Types . Select which fields to use a factors in the trend line model. For more information, see Choose which fields to use as factors in the trend line model . Decide whether to exclude color, using the Allow a trend line per color option. When you have color encodings in your view, you can use this option to add a single trend line that models all of the data, ignoring the color encoding. Decide whether to Show Confidence Bands . Tableau confidence bands show upper and lower 95% confidence lines by default when you add trend lines. Confidence lines are not supported for Exponential models. Select whether to Force the y-intercept to zero . This option is useful when you know that you want your trend line to begin at zero. This option is available only when both the Rows shelf and the Columns shelf contain a continuous field, as with a scatterplot. Decide whether to show recalculated lines when you select or highlight data in the visualization. Choose which fields to use as factors in the trend line model For trend models that are considering multiple fields, you can eliminate specific fields as factors in the trend 				line model. Often you will want to remove factors because you want the trend line model to be based on the entire row in the table rather than broken up by the members or values of a field. Consider the following example. The view below shows the monthly sales for various products categories, broken out by region. You can see that a separate model is created for each region. Now remove Region as a factor in the model by deselecting it in the Trend Lines Options dialog box. You can see that the trend line model within a category is now the same across all regions. This allows you to compare actual sales against a trend line that is the same for all regions. Remove Trend Lines To remove a trend line from a visualization, drag it off of the visualization area. You can also click a trend line and select Remove . To remove all trend lines from the view, select Analysis > Trend Lines > Show Trend Lines . Note : In Tableau Desktop, trend line options are retained so that if you choose Show Trend Lines again from the Analysis menu, the options are as you last set them. However, if you close the workbook with trend lines turned off, trend line options revert to defaults. See a description of a trend line or trend line model After you add trend lines, you can display statistics on the trend line. For example, you can see the formula as well as r-squared and p values. For more information on the model types and terms used in the descriptions, see the Trend Line Model Terms and Trend Line Model Types sections. To see a description of a trend line: Hover over any part of a trend line to see its description. Tableau Desktop only Right-click the trend line in the visualization , and then select Describe Trend Line . To view a full description of the model being used in the current view: Right-click a trend line in the visualization, and then select Describe Trend Model . Trend Line Model Types These model types are available for trend lines: Linear , Logarithmic , Exponential , Power , and Polynomial . In the following formulas, X represents the explanatory variable, and Y the response variable. Linear With the linear model type the formula is: Y = b0 + b1 * X where b1 is the slope and b0 is the intercept of the line. Logarithmic With the logarithmic model type, the formula is: Y = b0 + b1 * ln(X) Because a logarithm is not defined for number less than zero, any marks for which the explanatory variable is negative are filtered before estimation of the model. Avoid using a model that discards some data unless you know that the data being filtered out is invalid. The trend line description reports how many marks were filtered before model estimation. Exponential With the exponential model type, the formula is: Y = exp(b0)* exp(b1 * X) With an exponential model, the response variable is transformed by the natural log before estimation of the model so the marks plotted in your view are found by plugging in various explanatory values to find values of ln(Y) . ln(Y) = b0 + b1 * X These values are then exponentiated to plot the trend line. What you see is the exponential model in the following form: Y = b2*exp(b1 * X) Where b2 is the value of exp(b0) . Because a logarithm is not defined for numbers less than zero, any marks for which the response variable is negative are filtered before model estimation. Power With the power model type, the formula is: Y = b0 * X^b1 With a power model, both variables are transformed by the natural log before estimation of the model resulting in this formula: ln(Y) = ln(b0) + b1 * ln(X) These values are then exponentiated to plot the trend line. Because a logarithm is not defined for numbers less than zero, any marks for which the response variable or explanatory variable is negative are filtered before model estimation. Polynomial With the polynomial model type, the response variable is transformed into a polynomial series of the specified degree. The formula is: Y = b0 + b1 * X + b2 * X^2 + … With a polynomial model type, you must also select a Degree between 2 and 8. The higher polynomial degrees exaggerate the differences between the values of your data. If your data increases very rapidly, the lower order terms may have almost no variation compared to the higher order terms, rendering the model impossible to estimate accurately. Also, more complicated higher order polynomial models require more data to estimate. Check the model description of the individual trends line for a red warning message indicating that an accurate model of this type is not possible. Trend Line Model Terms When you view the description for a trend line model, there are several values listed. This section discusses what each of these values means. Model formula This is the formula for the full trend line model. The formula reflects whether you have specified to exclude factors from the model. Number of modeled observations The number of rows used in the view. Number of filtered observations The number of observations excluded from the model. Model degrees of freedom The number of parameters needed to completely specify the model.  Linear, logarithmic, and exponential trends have model degrees of freedom of 2.  Polynomial trends have model degrees of freedom of 1 plus the degree of the polynomial.  For example a cubic trend has model degrees of freedom of 4, since we need parameters for the cubed, squared, linear and constant terms. Residual degrees of freedom (DF) For a fixed model, this value is defined as the number of observations minus the number of parameters estimated in the model. SSE (sum squared error) The errors are the difference between the observed value and the value predicted by the model. In the Analysis of Variance table, this column is actually the difference between the SSE of the simpler model in that particular row and the full model, which uses all the factors. This SSE also corresponds to the sum of the differences squared of the predicted values from the smaller model and the full model. MSE (mean squared error) The term MSE refers to ""mean squared error"" which is the SSE quantity divided by its corresponding degrees of freedom. R-Squared R-squared is a measure of how well the data fits the linear model. It is the ratio of the variance of the model's error, or unexplained variance, to the total variance of the data. When the y-intercept is determined by the model, R-squared is derived using the following equation: When the y-intercept is forced to 0, R-squared is derived using  this equation instead: In the latter case, the equation will not necessarily match Excel. This is because R-squared is not well defined in this case, and Tableau's behavior matches that of R instead of that of Excel. Note : The  R-Squared value for a linear trend line model is equivalent to the square of the result from the CORR function. See Tableau Functions (Alphabetical) (Link opens in a new window) for syntax and examples for CORR. Standard error The square root of the MSE of the full model. An estimate of the standard deviation (variability) of the ""random errors"" in the model formula. p-value (significance) The probability that an F random variable with the above degrees of freedom exceeds the observed F in this row of the Analysis of Variance table. Analysis of Variance This table, also known as the ANOVA table, lists information for each factor in the trend line model. The values are a comparison of the model without the factor in question to the entire model, which includes all factors. Individual trend lines This table provides information about each trend line in the view. Looking at the list you can see which, if any, are the most statistically significant. This table also lists coefficient statistics for each trend line. A row describes each coefficient in each trend line model. For example, a linear model with an intercept requires two rows for each trend line. In the Line column, the p-value and the DF for each line span all the coefficient rows. The DF column under the shows the residual degrees of freedom available during the estimation of each line. Terms The name of the independent term. Value The estimated value of the coefficient for the independent term. StdErr A measure of the spread of the sampling distribution of the coefficient estimate. This error shrinks as the quality and quantity of the information used in the estimate grows. t-value The statistic used to test the null hypothesis that the true value of the coefficient is zero. p-value The probability of observing a t-value that large or larger in magnitude if the true value of the coefficient is zero. So, a p-value of .05 gives us 95% confidence that the true value is not zero. Assess Trend Line Significance To see relevant information for any trend line in the view, hover the cursor over it: The first line in the tooltip shows the equation used to compute a value of Profit from a value of Year of Order Date . The second line, the R-Squared value, shows the ratio of variance in the data, as explained by the model, to the total variance in the data. For more details, see Trend Line Model Terms . The third line, the P-value, reports the probability that the equation in the first line was a result of random chance. The smaller the p-value, the more significant the model is. A p-value of 0.05 or less is often considered sufficient. Entire Model Significance Once you’ve added a trend line to a view, you typically want to know the goodness of fit of the model, which is a measure of the quality of the model's predictions. In addition, you may be interested in the significance of each factor contributing to the model. To view these numbers, open the Describe Trend Model dialog box, right-click (Control-click on a Mac) in the view and select Trend Lines > Describe Trend Model . When you are testing significance, you are concerned with the p-values. The smaller the p-value, the more significant the model or factor is. It is possible to have a model that has statistical significance but which contains an individual trend line or a term of an individual trend line that does not contribute to the overall significance. Under Trend Lines Model, look for the line that shows the p-value (significance) of the model: The smaller the p-value, the less likely it is that the difference in the unexplained variance between models with and without the relevant measure or measures was a result of random chance. This p-value for a model compares the fit of the entire model to the fit of a model composed solely of the grand mean (the average of data in the data view). That is, it assesses the explanatory power of the quantitative term f(x) in the model formula, which can be linear, polynomial, exponential, or logarithmic with the factors fixed. It is common to assess significance using the ""95% confidence"" rule. Thus, as noted above, a p-value of 0.05 or less is considered good. Significance of Categorical Factors In the Analysis of Variance table, sometimes referred to as the ANOVA table, each  field that is used as a factor in the model is listed. For each field, among other values, you can see the p-value. In this case, the p-value indicates how much that field adds to the significance of the entire model. The smaller the p-value the less likely it is that the difference in the unexplained variance between models with and without the field was a result of random chance. The values displayed for each field are derived by comparing the entire model to a model that does not include the field in question. The following image shows the Analysis of Variance table for a view of quarterly sales for the past two years of three different product categories. As you can see, the p-values for Category and Region are both quite small. Both of these factors are statistically significant in this model. For information on specific trend line terms, see Trend Line Model Terms . For ANOVA models, trend lines are defined by the mathematical formula: Y = factor 1 * factor 2 * ...factorN * f(x) + e The term Y is called the response variable and corresponds to the value you are trying to predict. The term X is the explanatory variable , and e (epsilon) is random error. The factors in the expression correspond to the categorical fields in the view. In addition, each factor is represented as a matrix. The * is a particular kind of matrix multiplication operator that takes two matrices with the same number of rows and returns a new matrix with the same number of rows. That means that in the expression factor 1 * factor 2 , all combinations of the members of factor 1 and factor 2 are introduced. For example, if factor 1 and factor 2 both have three members, then a total of nine variables are introduced into the model formula by this operator. Trend Line Assumptions The p-values reported in Tableau trend lines depend on some assumptions about the data. The first assumption is that, whenever a test is performed, the model for the mean is (at least approximately) correct. The second assumption is that the ""random errors"" referred to in the model formula (see Trend Line Model Types ) are independent across different observations, and that they all have the same distribution. This constraint would be violated if the response variable had much more variability around the true trend line in one category than in another. Assumptions Required to Compute Trend Lines The Assumptions required to compute (using Ordinary Least Squares) each individual trend line are: Your model is an accurate functional simplification of the true data generating process (for example, no linear model for a log linear relationship). Your errors average to zero and are uncorrelated with your independent variable (for example, no error measuring the independent variable). Your errors have constant variance and are not correlated with each other (for example, no increase in error spread as your independent variable increases). Explanatory variables are not exact linear functions of each other (perfect multicollinearity). Commonly Asked Questions About Trend Lines This section describes some commonly asked questions regarding trend lines in Tableau. How do I change the confidence level used in the model? Tableau does not enforce a confidence level. It simply reports the significance of the whole model, or of a specific field, by showing the p-value. The p-value will measure the probability of obtaining the same trend result without taking the dimensions into account. For example, a trend of sales per time p-value of 0.05 means that there is 5% chance that the same value could be obtained without taking the time into consideration. What does it mean if the p-value for the model is significant but the p-value for the specific field in the Analysis of Variance table is not significant? The p-value in the Analysis of Variance table indicates whether the field adds or detracts from the significance of the entire model. The smaller the p-value the less likely it is that the difference in the unexplained variance between models with and without the field was a result of random chance. The values displayed for each field are derived by comparing the entire model to a model that does not include the field in question. So, for the situation where the p-value for the model is significant but the p-value for the specific field is not, you know that the model is statistically significant, but  you cannot be confident that the specific field in question adds anything to it. Consider whether you might not be better off removing the factor from the model. What does it mean if the p-value for the specific field in the Analysis of Variance table is significant but the p-value for the model is not significant? This could happen in a case when there is no ""trend"" within each pane. For example, the lines are flat, but the mean varies across a given factor. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.6. Distribution bands,https://help.tableau.com/current/pro/desktop/en-us/reference_lines.htm,"Reference Lines, Bands, Distributions, and Boxes Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server You can add a reference line, band, distribution, or box plot to identify a specific value, region, or range  on a continuous axis in a Tableau view. For example, if you are analyzing the monthly sales for several products, you can include a reference line at the average sales mark so you can see how each product performed against the average. Tableau lets you add as many reference lines, bands, distributions, and box plots to a view as you require. Types of Reference Lines, Bands, Distributions, and Boxes You can add reference lines, bands, distributions, or (in Tableau Desktop but not on the web) box plots to any continuous axis in the view. Reference Lines - You can add a reference line at a constant or computed value on the axis. Computed values can be based on a specified field. You can also include  confidence intervals with a reference line. Reference Bands - Reference bands shade an area behind the marks in the view between two constant or computed values on the axis. Reference Distributions - Reference distributions add a gradient of shading to indicate the distribution of values along the axis. Distribution can be defined by percentages, percentiles, quantiles (as in the following image), or standard deviation. Reference distributions can also be used to create bullet charts. See Add a Bullet Graph later in this article for specifics. Box Plots - Box plots (also known as box and whisker charts) are a standardized graphic for describing the distribution of values along an axis. Box plots show quartiles (also known as hinges) and whiskers. Tableau provides different box plot styles, and allows you to configure the location of the whiskers and other details. Add a Reference Line You can add a reference line to any continuous axis in the view. To add a reference line: Drag Reference Line from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area offers three options: The view above is from a web editing session. In Tableau Desktop, the process is the same but the user interface looks a bit different. The terms Table , Pane and Cell define the scope for the item: For a more complicated view—for example, if the view contains a line chart with multiple or dual axes—Tableau shows you an expanded drop target area: If you drop the item in one of the three larger boxes in the header (for example, the Table box), a separate reference line is added for each continuous field in the view: But if you drop the item in any of the lower boxes that are aligned with a specific continuous field, the line is added on the corresponding axis, with the specified scope. When you drop the line in the target area, Tableau displays a dialog box: Tableau Desktop version Web version The Line option is already selected at the top of the dialog box. Select a continuous field from the Value field to use as the basis for your reference line. You can also select a parameter. You cannot select a continuous field that isn't currently in the view as the basis for your reference line. If you want to use such a continuous field, do the following: Drag the continuous field  from the Data pane to the Details target on the Marks card. Change the continuous field's aggregation if necessary. This will not change the view, but it will allow you to use that continuous field as the basis for your reference band. Click on the reference line in the view and choose Edit to re-open the Edit Line dialog box. Select an aggregation.  The aggregations that are displayed depend on the continuous field you select: Total - places a line at the aggregate of all the values in either the cell, pane, or the entire view. This option is particularly useful when computing a weighted average rather than an average of averages. It is also useful when working with a calculation with a custom aggregation. The total is computed using the underlying data and behaves the same as selecting one of the totals option the Analysis menu. Sum - places a line at the SUM of all the values in either the cell, pane, or entire view. Constant - places a line at the specified value on the axis. Minimum - places a line at the minimum value. Maximum - places a line at the maximum value. Average - places a line at the average value along the axis. Median - places a line at the median value. Select how you want to label the line: None –select this option to not show a label for the reference line. Value – select this option to show a label  corresponding to the line's value on the axis. Computation – select this option to display the name of the continuous field that is the basis for your reference line and any computation that is performed. Custom – select this option to build a custom label in the text box. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Select how you want the tooltip to appear. None –select this option to not show a tooltip for the reference line. Automatic – select this option to show the default tooltip for the reference line. Custom – select this option to build a custom label in the tooltip. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Specify whether to display the line with a confidence interval, just the line, or just the confidence interval. Confidence interval distribution bands shade the region in which the population average will fall n of the time, where n is the value you select in the drop-down on the right. You can choose one of the listed numeric values or  select a parameter: The higher the value you select, the wider the bands will be. In Tableau Desktop, you can also specify formatting options for the line. Optionally, add a fill color above and below the 				line. When you are displaying a line and a confidence interval, the shading will be darker within the confidence interval, and lighter beyond it: When you are displaying a confidence interval without a line, the fill colors are disregarded, though your settings are retained and then applied if you decide later to show a line. Specify whether to Show recalculated line for highlighted or selected data points . For more information, see Compare marks data with recalculated lines . Add Reference Bands Reference bands are shaded areas behind the marks in the view between two constant or computed values on the axis. You can add reference bands to any continuous axis in the view. To add a reference band: Drag Reference Band from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. In a simple case, the drop target area would offer just three options: The terms Table , Pane , and Cell define the scope for the item: For a more complicated view—for example, if the view contains multiple or dual axes—Tableau shows you an expanded drop target area that looks like this: If you drop the item in one of the three larger boxes in the header (for example, the Table box), a separate set of bands is added for each continuous field in the view: But if you drop the item in any of the lower boxes aligned with a specific continuous field, the band is added on the corresponding axis, with the specified scope. When you drop the band in the target area, Tableau displays a dialog box: Tableau Desktop version Web version The Band area is already selected at the top of the dialog box. Select two continuous fields to use as the basis for your reference band one in each Value field. You can also select a parameter from the drop-down lists. Do not select the same continuous field and aggregation in both areas. You cannot select a continuous field that isn't currently in the view as the basis for your reference band. If you want to use such a continuous field, do the following: Drag the continuous field  from the Data pane to the Details target on the Marks card. Change the continuous field's aggregation if necessary. This will not change the view, but it will allow you to use that continuous field as the basis for your reference band. Click on the reference band in the view and choose Edit to re-open the Edit Band dialog box, and select the continuous field in in the Value (From) area and one in the Value (To) area. Select a computation for each value. The aggregations that are displayed depend on the continuous field you select: Total - extends the band to a value that is at the aggregate of all the values in either the cell, pane, or the entire view. This option is particularly useful when computing a weighted average rather than an average of averages. It is also useful when working with a calculation with a custom aggregation. The total is computed using the underlying data and behaves the same as selecting one of the totals option the Analysis menu. Sum - extends the band to a value that is  at the SUM of all the values in either the cell, pane, or entire view. Constant - extends the band to a value that is at the specified value on the axis. Minimum - extends the band to a value that is  at the minimum value. Maximum - extends the band to a value that is  at the maximum value. Average - extends the band to a value that is  at the average value along the axis. Median - extends the band to a value that is at the median value. Select how you want to label the bands: None –select this option 						to not show a label for the reference band. Value – select this option to show a label  corresponding to the band's value on the axis. Computation – select this option to display the name of the continuous field that 						is the basis for your reference band and any computation that is performed. Custom – select this option to build a custom label 							in the text box. You can use the menu to the right of the text 						box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Select how you want the tooltip to appear. None –select this option to not show a tooltip for the reference band. Automatic – select this option to show the default tooltip for the reference band. Custom – select this option to build a custom label in the tooltip. You can use the menu to the right of the text box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . In Tableau Desktop, you can also specify formatting options for the bands. You can mark the two values with 						a line or select a shading color for the band. Specify whether to Show recalculated line for highlighted or selected data points . For more information, see Compare marks data with recalculated lines . Add Reference Distributions When you add a reference distribution, you specify one, two, or more  values. With one value, the result is a line; with two or more values the result is a set of one, two, or more bands. To add a reference distribution: Drag Distribution Band from the Analytics pane into the view. Tableau shows the possible destinations. The range of choices varies depending on the type of item and the current view. Select a scope for the distribution. The terms Table , Pane , and Cell define the scope for the item: Select the computation that will be used to create the distribution: Percentages - shades the interval between the specified percentage values. Use a comma to separate two or more percentage values (for example, 60, 80 ), and then specify which measure and aggregation to use for the percentages. Percentiles - shades intervals at the specified percentiles. Choose Enter a value from the Value drop-down list, and then enter two or more numerical values, delimited by commas (for example, 60,80 or 25, 50, 75 ). Quantiles - breaks the view into the specified number of tiles using shading and lines. When you select this computation, you must also specify the number of tiles (from 3 to 10, inclusive). For example, if you select 3, Tableau calculates the boundaries between the first, second and third terciles by calling the general quantile function and asking for the 33.33 and the 66.66 quantiles. It then shades the three terciles differently. Tableau uses estimation type 7 in the R standard to compute quantiles and percentiles. Standard Deviation - places lines and shading to indicated the specified number of standard deviations above and below the mean. When you select this option you must specify the factor, which is the number of standard deviations and whether the computation is on a sample or the population. Specify how you want to label the distribution bands: None –select this option 						to not show a label for the distribution bands. Value – select this option to show a label  corresponding to each distribution band's value on the axis. Computation – select this option to display the name of the continuous field that 						is the basis for your distribution bands and any computation that is performed. Custom – select this option to build a custom label 							in the text box. You can use the menu to the right of the text 						box to insert values such as the computation or the value. You can also type text directly into the box, so you could create a value such as <Field Name> = <Value> . Specify whether to Show recalculated band for highlighted or selected data points . For more information, see Compare marks data with recalculated lines in the Tableau Desktop online help. Add a Bullet Graph Reference distributions can also be used to create bullet graphs. A bullet graph is a variation of a bar graph developed to replace dashboard gauges and meters. The bullet graph is generally used to compare a primary measure to one or more other measures in the context of qualitative ranges of performance such as poor, satisfactory, and good. You can create a bullet graph by adding  a distribution to indicate the qualitative ranges of performance, and a line to indicate the target. The following procedure uses Show Me to make this process easier. Select one or more dimensions, and two measures in the Data pane. The bullet graph will compare measure values. For example, budget vs. actual; actual vs. target; etc. Select multiple fields in the Data pane by holding down the Ctrl key as you click fields. If you are using the Superstore sample workbook, you can select the fields show below: Click the Show Me button in the toolbar. Select Bullet Graph in the Show Me pane. Tableau adds a reference distribution that is defined at 60% and 80% of the Average of the measure on Detail. It also adds a reference line that marks the Average of that same measure. The other measure is placed on the Rows shelf. You can edit either of these to change its definition. For example, you may want to add  100% to the set of distribution band values, or draw a line at a constant value. Click on the outer edge or a distribution band, or on the line, and choose Edit . Add a Box Plot In Tableau Desktop, but not on the web, you can add box plots to a continuous axis. Use  box plots, also known as  box-and-whisker plots, to show the distribution of values along an axis. Boxes indicate the middle 50 percent of the data (that is, the middle two quartiles of the data's distribution). You can configure lines, called whiskers ,  to display all points within 1.5 times the interquartile range (in other words, all points within 1.5 times the width of the adjoining box), or all points at the maximum extent of the data, as shown in the following image: Boxplots are also available from the Show Me pane when you have at least one measure in the view: For information on Show Me, see Use Show Me to Start a View To add a box plot: Right-click (Control-click on a Mac) on a quantitative axis and select Add Reference 				Line . In the Add Reference Line, Band, or Box dialog box, select Box Plot . Under Plot Options, specify placement for the whiskers: Data within 1.5 times the IQR - places whiskers at a location that is 1.5 times the interquartile range—that is, 1.5 times further out than the width of the adjoining box. This is also known as a schematic box plot. Maximum extent of the data - places whiskers at the farthest data point (mark) in the distribution. This is also known as a skeletal box plot. Specify whether to Hide underlying marks (except outliers) —that is, whether to hide all marks except those beyond the whiskers. Configure the appearance of the plot by selecting a Style , Fill , Border , and Whiskers . Box Plot Alternatives: Show Me Vs.  Add Reference Line, Band, or Box The difference between adding a box plot using Show Me and adding a box plot using Add Reference Line is that with Show Me, the box plot is your visualization, whereas with Add Reference Line, Band, or Box, you are adding a box plot to an existing visualization. For example, you could create the following view by first selecting a circle view in Show Me, and then adding a box plot from Add Reference Line: Edit Existing Reference Lines, Bands, and Distributions You can edit existing lines, bands, or distributions. To do this, click on a line or on the outer edge of a band and choose Edit to reopen the edit dialog box for that object. Remove Reference Lines, Bands, or Distributions To remove a reference line, band, or distribution, click on a line or on the outer edge of a band and choose Remove . You can also drag a line or band off the view. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.7. Forecast by using default settings,https://help.tableau.com/current/pro/desktop/en-us/forecast_create.htm,"Create a Forecast Applies to: Tableau Desktop, Tableau Public To create a forecast, your view must be using at least one date dimension and one measure. To turn forecasting on, right-click (control-click on Mac) on the visualization and choose Forecast > Show Forecast , or choose Analysis > Forecast > Show Forecast . Each of the following examples indicate the structure that supports creating a forecast. The field you want to forecast is on the Rows shelf and a continuous  date field is on the Columns shelf. The field you want to forecast is on the Columns shelf and a continuous date field is on the Rows shelf. The field you want to forecast on either the Rows or Columns shelf, and discrete  dates are on either the Rows or Columns shelf.  At least one of the included date levels must be Year. The field you want to forecast is on the Marks card, and a continuous date or discrete date set is on Rows , Columns or Marks . Note : You can also create a forecast when no date dimension is present if there is a dimension in the view that has integer values. See Forecasting When No Date is in the View . With forecasting on, Tableau visualizes estimated future values of the measure, in additional to actual historical values. The estimated values are shown by default in a lighter shade of the color used for the historical data: Prediction Intervals The shaded area in the image above shows the 95% prediction interval for the forecast. That is, the model has determined that there is a 95% likelihood that the value of sales will be within the shaded area for the forecast period. You can configure the confidence level percentile for the prediction bands, and whether prediction bands are included in the forecast, using the Show prediction intervals setting in the Forecast Options dialog box: Clear the check box if you do not want to display prediction bands in forecasts. To set the prediction interval, select one of the values or enter a custom value. The lower the percentile you set for the confidence level, the narrower the prediction bands will be. How your prediction intervals are displayed depends on the mark type of your forecasted marks: Forecast mark type Prediction intervals displayed using Line Bands Shape, square, circle, bar, or pie Whiskers In the following example, forecast data is indicated by lighter shaded circles, and the prediction intervals are indicated by lines ending in whiskers: Enhancing Forecasts For each forecast value, consider verifying the quality or precision of your forecast by dragging another instance of the forecast measure from the Data pane to the Detail shelf on the Marks card and then after right-clicking the field to open the content menu, choosing one of  the available options: For descriptions of these options, see Forecast Field Results . You can repeat the process to add additional result types for each forecast value. See ""Changing the Forecast Result"" type in Forecast Field Results for information on changing the result type. By adding such result types to the Details shelf, you add information about the forecast to tooltips for all marks that are based on forecasted data. Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.8. Customize a data forecasting model,https://help.tableau.com/current/pro/desktop/en-us/forecast_options.htm,"Configure Forecast Options Applies to: Tableau Desktop, Tableau Public Use the Forecast Options dialog box to configure forecast options, including: The length of the forecast The range and temporal aggregation of source data from which to generate the forecast The forecast model Prediction intervals When forecasting is enabled, you can open the Forecast Options dialog box by choosing Analysis > Forecast > Forecast Options . Forecast Length The Forecast Length section determines how far into the future the forecast extends. Select one of the following: Automatic : Tableau determines the forecast length based on the data. Exactly : Extends the forecast for the specified number of units. Until : Extends the forecast to the specified point  in the future. Source Data Use the Source Data section to specify. Aggregate by : Specifies the temporal granularity of the time series. With the default value ( Automatic ), Tableau chooses the best granularity for estimation. This will typically match the temporal granularity of the visualization (that is, the date dimension that the forecast is based on). However, it is sometimes possible and desirable to estimate the forecast model at a finer granularity than the visualization when the time series in the visualization is too short to allow estimation. Note : When you are using an integer dimension instead of a date dimension for forecasting, the Aggregate by value is always Periods. See Forecasting When No Date is in the View . Ignore last : Specifies the number of periods at the end of the actual data that should be ignored in estimating the forecast model.  Forecast data is used instead of actual data for these time periods. Use this feature to trim off unreliable or partial trailing periods which could mislead the forecast. When the estimation granularity specified in the Source Data section is finer than in the visualization, the trimmed periods are estimation periods. As a result, the trailing actual visualization period may become a forecast period, which is an aggregate of both actual and forecast periods of estimation granularity. In contrast, null values are not filled with zeros and must be filtered to allow forecast. Fill in missing values with zeros : If there are missing values in the measure you are attempting to forecast, you can specify that Tableau fill in these missing values with zero. Forecast Model The Forecast Model section specifies how the forecast model is to be produced. Use the drop down to specify whether Tableau selects what it determines to be the best of all models ( Automatic ), the best of those with no seasonal component ( Automatic without seasonality ), or the model you specify ( Custom ). When you choose the Custom option, two new fields appear in the Forecast Options dialog box, which you use to specify the trend and season characteristics for your model: The choices are the same for both fields: None : When you select None for Trend, the model does not assess the data for trend. When you select None for Season, the model does not assess the data for seasonality. Additive : An additive model is one in which the combined effect of several independent factors is the sum of the isolated effects of each factor. You can assess the data in your view for additive trend, additive seasonality, or both. Multiplicative : A multiplicative model is one in which the combined effect of several independent factors is the product of the isolated effects of each factor. You can assess the data in your view for multiplicative trend, multiplicative seasonality, or both. If there is more than one time series in your visualization, the Custom option forces them all to be forecast using the same custom model. Constraining the models in this way usually results in lower quality models than would be produced by automatic model selection. Constraints on Multiplicative Models You cannot use a multiplicative model when the measure to be forecast has one or more values that are less than or equal to zero, or even when some of the data points are too close to zero, relative to other data points. You cannot specify a model with multiplicative trend and additive season because the result may be numerically unstable. Prediction Interval You can set the prediction interval to 90, 95, or 99 percent, or enter a custom value. This value is used in two locations: In the prediction bands displayed with a forecast. For the prediction interval options ( Upper Prediction Interva l and Lower Prediction Interval ) that are available as forecast result types for a measure in the view: Forecast Summary The text box at the bottom of the Forecast Options dialog box provides a description of the current forecast. The forecast summary updates whenever you change any of the forecast options above. If there is a problem with the forecast, the text box provides an error message that may help you resolve the issue. See Resolving Forecasting Errors . Back to top Thanks for your feedback!"
Domain 2: Explore and Analyze Data,"2.8. Summarize, model, and customize data by using the Analytics feature",2.8.9. Create a predictive model,https://help.tableau.com/current/pro/desktop/en-us/predictions.htm,"Predictive Modeling Applies to: Tableau Cloud, Tableau Desktop, Tableau Public, Tableau Server Predictive modeling functions in Tableau use linear regression to build predictive models and generate predictions about your data.  Two table calculations , MODEL_PERCENTILE and MODEL_QUANTILE, can generate predictions and surface relationships within your data.  These can be used to identify outliers, estimate values for sparse or missing data, and predict values for future time periods. This section provides all the documentation you need to get started with predictive modeling functions in Tableau. Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.1. Create charts,"3.1.1. Create basic charts from scratch (bar, line, pie, highlight table, scatter plot, histogram, tree map, bubbles, data tables, Gantt, box plots, area, dual axis, combo)",https://help.tableau.com/current/pro/desktop/en-us/dataview_examples.htm,"Build Common Chart Types in Data Views Applies to: Tableau Desktop This section includes detailed exercises that guide you through the steps involved in building some common chart types in data views. All exercises use the Sample - Superstore data source, which is included with Tableau Desktop. This collection of topics is just a sample of the many  types of data views that you can create in Tableau. For details on options for building views from scratch, see Build Data Views from Scratch and Build a Basic View to Explore Your Data . Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.1. Create charts,3.1.2. Sort data (including custom sort),https://help.tableau.com/current/pro/desktop/en-us/sortgroup_sorting_computed_howto.htm,"Sort Data in a Visualization Applies to: Tableau Cloud, Tableau Desktop, Tableau Server There are many ways to sort data in Tableau.  When viewing a visualization, data can be sorted using single click options from an axis, header, or field label. In the authoring environment, additional sorting options include sorting manually in headers and legends, using the toolbar sort icons, or sorting from the sort menu. Tip : Download the workbook used in these examples to explore on your own (requires Tableau Desktop). Quickly sort from an axis, header, or field label There are multiple ways to sort a visualization with single click sort buttons. In all cases, one click sorts descending, two clicks sorts ascending, and three clicks clear the sort. Sort icons displayed on an axis (Metric A), header (Light Green) or field label (Hue) The sort updates if the underlying data changes. Sort from an axis Hover over a numerical axis to bring up the sort icon. Click the icon to sort. Sort: Color is sorted within each Hue in decreasing order of Metric A In this example, the sort is applied to Color (sorting the rows) based on the values for Metric A . If there are hierarchical dimensions like above, the sort is applied to the innermost dimension. In this example, Color will sort inside Hue . Dark magenta can't sort to the top of the viz because it must stay inside the pane for the Purple hue. Sort from a header Hover over a header to bring up the sort icon. Click the icon to sort. Sort: Materials are arranged in decreasing order of Metric B for Green. In this example, the sort is applied to Material (sorting the order of the columns—Paint, Fabric, and Paper) based on the values for Green, since that header was used for the sort. Note : The sort option is also available from the tooltip for a header. The header tooltip sort option is displayed even when the view contains a table calculation (but not in the header sort option). If the view contains a table calculation, this option creates a manual sort based on the data currently in the view. Sort from a field label Hover over a field label to bring up the sort icon. The sort icon for a field label is slightly different from a header or axis. The default option is alphabetical sorting, but there’s also a menu where you can choose to sort by a field in the view. Click the A-Z icon to sort alphabetically. Or, click the menu to select a field to sort by. The icon switches to the bar icon and you can click to sort. Sort: Hues are arranged in descending order by Metric B. In this example, the sort is applied to the outermost dimension (Hue) based on total Metric B. (Metric B is aggregated for all the colors within each hue and Hue is sorted. Therefore, Purple is first, then Green, then Blue.) Missing sort icons If the sort icons don't appear, this functionality may have been turned off or it might not be possible to sort the view. Sort icons aren't available on the axes in scatterplots or for table calculations. For example, scatterplots can't be sorted from a numerical axis because the positions of the marks are fully determined by the data. Sort options while authoring In an authoring environment, additional options are available. Sort from the toolbar Select the dimension you wish to sort. If you don’t select a field before sorting, the default behavior is to sort the deepest dimension. Choose the appropriate sort button (ascending or descending) in the toolbar. In this example, the sort is applied to Hue unless the Material field is selected before sorting. The toolbar sort also applies to the leftmost measure, in this case Metric B. To sort by Metric A, it would be necessary to reverse their order on the Columns shelf or use another method of sorting. This example demonstrates the effect of sorting by Material. Hue is removed from the view. Sort by drag and drop To manually sort, select a header in a viz or on a legend and drag it to the correct location—a heavy black line indicates where to drop the header. Note : Sorting on a legend also changes the order of the marks, not simply how the legend is displayed. Whatever is bottommost in the legend becomes the bottommost mark in the viz. This can either mean closest to the axis or header, or actually underneath in the case of scatterplots and other viz types that may have overlapping marks. Sort specific fields in the viz Tableau uses the current International Components for Unicode (ICU) library to determine sort order. You can customize sorting by using the Sort menu for specific fields. (The Sort menu is not available for continuous measures.) Right-click (Windows) or control-click (Mac) the field you want to sort, and select Sort . Select a Sort By option, and configure its behavior: Data Source Order sorts based on how the data is sorted in the data source. Generally for relational data sources, this tends to be natural sort order. Natural sort order is an alphabetic sort where multi-digit numbers are treated as a single character.  For example, natural sorting puts 2 before 19 because 2 is less than 19, whereas alphabetic sorting puts 19 before 2 because 1 is less than 2. If you are using a multidimensional cube data source, data source order is the defined in hierarchical order of the members within a dimension. Alphabetic sorts the data alphabetically. This sort is case sensitive, sorts [A-Z] before [a-z], and treats digits individually (that is, 19 comes before 2). To create a non-case sensitive sort, create a calculated field using the UPPER() or LOWER() functions to remove variation in capitalization. For more information, see String Functions (Link opens in a new window) . Field lets you specify the field value used to determine the sort order. The field doesn’t need to be used in the visualization. You can also select an aggregation for the sorting field. The aggregation options available depend on the field type. Manual lets you select a value and move it to the desired position, either by dragging it in the list or using the arrows to the right. Nested lets you select the field value used to determine the sort order. The field doesn’t need to be used in the visualization. You can also select an aggregation for the sorting field. The aggregation options available depend on the field type. Nested sorts When the values to be sorted occur in multiple panes, there are two ways to sort: nested and non-nested (or comparative). In the image below, all three values for Hue occur for all three Materials . Nested sorting considers values independently per pane rather than in aggregate across panes. Nested Non-nested A nested sort considers each pane independently and sorts the rows per pane. Purple is sorted above Green for Fabric and Paper, but below Green for Paint. A non-nested sort considers the value across panes and has the same order of values per pane. Purple is above Green for all materials because in aggregate, Purple is higher than Green. Nested sorts look correct within the context of the pane, but don’t convey the aggregated information about how the values compare overall. Non-nested sorts may look incorrect in a single pane, but consistently convey how the aggregated values compare overall. Sorting from an axis gives a nested sort by default. Sorting from a field label gives a non-nested sort by default. Note : When creating a nested sort, the sort is inherited when you drill down through the dimensions. For example, a nested sort on Hue will apply to Color. If a dimension has been placed on the same shelf as a measure, that measure has an axis in the view for each value of the dimension. Using the axis sort icon generates a nested sort specifically for that value. In this scenario, an additional field is added to the sort menu dialog for the sorted dimension. To stop breaking down the sort by this value, uncheck the box for Filter By. Understanding “incorrect” sorts It’s easy to think a view is sorted incorrectly when in fact the sort logic is not clear. A view with a nested sort when a non-nested sort is expected (or vice versa) can be perceived as incorrect. Sorting when there are multiple panes can also give results that seem unsorted. For example, this view might seem unsorted when in fact it’s sorted on Hue by Metric A. Simplifying the view makes the sort more obvious. Hovering over the sort icons to see the description of the sort or temporarily simplifying the view can help clarify what is going on. Clear sorts You can sort data from many areas of a view. Sometimes it can be useful to clear all sorts at once. To remove the sort on a specific field, right click to open the menu and select Clear Sort . To remove all sorts in the view, open the menu next to the clear sheet icon in the toolbar and select Clear Sorts. Or, from the Worksheet menu, click Clear > Sorts . Remove the ability to sort As an author, you can disable the sort icons in published content. This can be useful to preserve the current sort as you built it. Navigate to the Worksheet menu and uncheck the option to Show Sort Controls . This will prevent the sort icons from appearing when a consumer of the view hovers over an axis, header, or field label. Hiding field labels, headers, or the axis will also remove the sort icons. Back to top Thanks for your feedback!"
Domain 3: Create Content,3.2. Create dashboards and stories,3.2.1. Combine sheets into a dashboard by using containers and layout options,https://help.tableau.com/current/pro/desktop/en-us/dashboards_organize_floatingandtiled.htm,"Size and Lay Out Your Dashboard Applies to: Tableau Cloud, Tableau Desktop, Tableau Server After you create a dashboard, you can  resize and reorganize it to work better for your users. Control overall dashboard size A best practice  is to start with setting the size so any layout work starts at the correct size. Dashboard size options Fixed size (default) : The dashboard remains the same size, regardless of the size of the window used to display it. If the dashboard is larger than the window, it becomes scrollable. You can pick from a preset size or specify a custom size. Fixed size dashboards let you specify the exact location and position of the content on the dashboard, which can be useful if there are floating objects. Published dashboards that use a fixed size can load faster  because they're more likely to use a cached version on the server. For other performance tips, see Optimize Workbook Performance . Range : The dashboard scales between the minimum and maximum sizes that you specify. If the window used to display the dashboard is smaller than the minimum size, scroll bars are displayed. If it's larger than the maximum size, white space is displayed. Use this setting when you're designing for two different display sizes that need the same content and have similar shapes—such as  small- and medium-sized browser windows. Range also works well for mobile dashboards with vertical layouts. (The width is allowed to change  for different mobile device widths, but the height is fixed for vertical scrolling.) Automatic : The dashboard automatically resizes to fill the window used to display it. Use this setting if you want Tableau to take care of any resizing. For best results, use a tiled (rather than floating) dashboard layout. Automatic sizing can lead to unpredictable results on different screens, so use this setting with caution if you don't know where the dashboard will be consumed. Dashboards with variable sizes must be freshly rendered for every browser request, which can have a performance impact. Tip: If you use Tableau Desktop, see Create Dashboard Layouts for Different Device Types to create unique layouts optimized for desktop computers, tablets, and phones. In addition to adapting to different screen sizes, each device layout can contain different items. Set overall dashboard size Under Size on the Dashboard pane, select the dashboard's dimensions (such as Desktop Browser ) or sizing behavior (such as Fixed size ). Group items using layout containers Layout containers let you group related dashboard items together so you can quickly position them. As you change the size and placement of items inside a container, other container items  automatically adjust. Layout containers can also be used for formatting. Layout container types A horizontal layout container resizes the width of the views and objects it contains; a vertical layout container adjusts height. Horizontal layout container The two views are arranged in a horizontal layout container. Vertical layout container The three views are stacked in a vertical layout container. Add a layout container Under Objects on the Dashboard pane, select Horizontal or Vertical . Drag the container to the dashboard. Add views and objects to the layout container. Evenly distribute a layout container's items Select the layout container. If you have trouble making the selection, select an individual item within the container and choose Select Container from its shortcut menu. With the layout container selected, choose Distribute Evenly from its shortcut menu: Items that are already within the layout container arrange themselves evenly;  any items you add do the same. Automatically resize sheets in layout containers If you add multiple sheets with related data to a layout container, whenever marks are selected in one sheet, you can automatically resize related sheets. In this example, when a mark is selected in the map, the bar chart updates to display profit and sales for that mark. When no marks are selected in the map, it automatically expands to fill the layout container. With mark selected Without a selection Add multiple sheets with related data to a layout container. From the drop-down menu of the sheet you want to expand, choose Use as Filter . Choose Dashboard > Actions , and double-click the generated filter you created. In the Target Sheets section of the Edit Filter Action dialog box, select the other sheets in the layout container. To control how target sheets resize when no marks are selected in the source sheet, select one of the following: Show all values returns target sheets to their original size, showing all data. Exclude all values collapses target sheets under their titles, hiding all data. Remove a layout container to independently edit items it contains Select the container either on the dashboard or in the Item hierarchy area of the Layout pane. From the drop-down menu at the top of the container, select Remove Container . Tile or float dashboard items Tiled vs. floating layouts Each object, layout container, and view that you place on a dashboard is either tiled (the default) or floating. Tiled layout Floating layout Tiled items don't overlap; they become part of a single-layer grid that resizes based on the overall dashboard size. Floating items can be layered over other objects. In the example below, a map floats over tiled views. For best results, give floating objects and views a fixed size and position on a fixed size dashboard. Float or tile  a new item Under Objects in the Dashboard pane, click the layout option you want to use: Floating or Tiled . Drag the view or object onto the dashboard on the right. Tip : You can also assign a floating layout to an item by holding down Shift on  your keyboard as you drag it onto the dashboard. Switch an existing item from tiled to floating Select the item in the dashboard. In the item's shortcut menu, select Floating : Size, position, reorder, and rename individual dashboard items Set an item's size and position If you want a high degree of control over the placement, choose Fixed size then set each item's size and position  using the Layout pane. Select the dashboard item you want to position and size. In the Layout pane, the item's name appears under Selected item . Tip: To quickly switch between the Dashboard and Layout panes, press the T key. Define the item's position x and y position in pixels as an offset from the top-left corner of the dashboard.  For example, to place an object in the top-left corner of the dashboard, specify x = 0 and y = 0. The values you enter can be positive or negative but must be whole numbers. To resize an item, click and drag it in the dashboard. You can also use the settings under Size . To hide the title of the item you’ve selected, clear the Show title check box. (The similar Show dashboard title check box on the Dashboard pane controls the overall dashboard title.) Tip: To quickly position floating items, press arrow keys to move 1 pixel, or Shift+arrow keys to move 10 pixels. To quickly resize items, add Alt (Windows) or Option (macOS) to these shortcuts. Align items with a grid To present a visually consistent design, arrange and size dashboard items over a grid. Choose Dashboard > Show Grid . To change the grid size, choose Dashboard > Grid Options . Tip: To quickly switch the grid on and off, press the G key. Reorder objects The Item hierarchy area on the Layout pane lets you quickly change how objects are layered and grouped on your dashboard. Items at the top of the list appear in the front, while items at the bottom appear in back. Reorder any object in Tableau Cloud or Tableau Server In Tableau Cloud and Tableau Server, you can reorder both tiled and floating objects in the hierarchy. You can also drag items both within their current containers, and into other containers at any level. This lets you nest items with more flexibility than editing on the canvas, which limits you to placing objects in the innermost container. Reorder floating objects in Tableau Desktop In Tableau Desktop, you can drag floating items at the top level of the hierarchy to change how they layer over each other. Rename items To better distinguish between dashboard items, you can rename them. In the Item hierarchy area of the Layout pane, right-click an item, and choose Rename Dashboard Item . On the dashboard itself, this command is also available from the drop-down menu for each object. Add padding, borders, and background colors around items Padding lets you precisely space items on the dashboard, while borders and background colors let you visually highlight them. Inner padding sets the spacing between item contents and the perimeter of the border and background color; outer padding provides more spacing beyond the border and background color. Note: If you can't change the border or background color for a particular dashboard item, change its formatting at the worksheet level . A. Outer padding B. Blue border C. Inner padding with light blue background Select an individual item, or your entire dashboard. On the Layout tab at left, specify border style and color, background color and opacity, or padding size in pixels. Here are some handy dashboard spacing tips: To precisely align one dashboard item with another, deselect All sides equal , and adjust padding for only one side. To create seamless designs, specify zero outer padding for adjoining items. Visually integrate elements with transparency Transparent elements create a seamless visual look for your dashboards, revealing underlying objects and images. Tip: To create a background image that shows through floating transparent elements, add an image object as the only tiled item. Fixed-size dashboards ensure that the floating elements maintain a consistent visual relationship with the image, regardless of screen size. Make worksheet backgrounds transparent In your dashboard, select the sheet. Choose Format > Shading , click the Worksheet menu, and choose None for the background color. If the sheet appears opaque, change the background color  to None for the underlying dashboard, object, or layout container. You can quickly adjust these items  on the Layout tab for the dashboard. To smoothly integrate the transparent sheet with other dashboard items, choose Format > Borders and Format > Lines , and either remove borders and lines or change their colors. More steps for transparent maps Choose Format > Shading , click the Pane menu, and choose None for the color. Choose Map > Map Layers , and deselect the opaque Base layer. Then, to make transparent maps more distinct when zoomed out, select the Coastline layer. Depending on the map style, you may also need to experiment with turning other layers on or off. Make a sheet partially transparent In the Layout pane for the dashboard, select the sheet. Click the Background color, and set the color and opacity. Float transparent legends, filters, highlighters, and parameters To visually connect filters, parameters, and highlighters to related data, float these items, which are transparent by default. Text always remains fully opaque, maintaining legibility. If a floating object continues to display a color, check these object- and worksheet-level settings: Select the object, and on the Layout tab, click the Background color, and choose None . Click the Format menu, and then choose Legends , Filters , Highlighters , or Parameters . Then, in the Format pane at left, choose Shading > None . For more information, see Format at the Worksheet Level . Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.2. Create dashboards and stories,3.2.2. Add objects,https://help.tableau.com/current/pro/desktop/en-us/dashboards_create.htm,"Create a Dashboard Applies to: Tableau Cloud, Tableau Desktop, Tableau Server After you've created one or more sheets, you can combine them in a dashboard, add interactivity, and much more. Tip: To quickly get up and running, see Use Accelerators to Quickly Visualize Data . Create a dashboard, and add or replace sheets You create a dashboard in much the same way you create a new worksheet. At the bottom of the workbook, click the New Dashboard icon: From the Sheets list at left, drag views to your  dashboard at right. To replace a sheet, select it in the dashboard at right. In the Sheets list at left, hover over the replacement sheet, and click the Swap Sheets button. Note: When you replace a sheet, Tableau retains any padding, border, or background color. However, you may need to adjust sheet size if content differs significantly. You may also need to delete dashboard items specific to the previous sheet, such as filters, which become blank. Add interactivity You can add interactivity to dashboards to enhance users' data insights. Try these techniques: In the upper corner of sheet, enable the Use as Filter option to use selected marks in the sheet as filters for other sheets in the dashboard. When authoring in Tableau Desktop, add actions to use multiple sheets as filters, navigate from one sheet to another, display web pages, and more. For details, see Actions and Dashboards . Add dashboard objects and set their options In addition to sheets, you can add dashboard objects that add visual appeal and interactivity. Here's guidance about each type: Horizontal and Vertical objects provide layout containers that let you group related objects together and fine-tune how your dashboard resizes when users  interact with them. Text objects can provide headers, explanations, and other information. Image objects add to the visual flavor of a dashboard, and you can link them to specific target URLs. (While Web Page objects can also be used for images, they are better for complete web pages. The Image object provides image-specific fitting, linking, and alt-text options.) Web Page objects display target pages in the context of your dashboard. Be sure to review these web security options , and be aware that some web pages don't allow themselves to be embedded—Google is one example. Note: For security reasons, your Tableau administrator may prevent Web Page and Image objects from displaying target URLs. Blank objects help you adjust spacing between dashboard items. Navigation objects let your audience navigate from one dashboard to another, or to other sheets or stories. You can display text or an image to indicate the button's destination to your users, specify custom border and background colors, and provide informational tooltips. Download objects let your audience quickly create a PDF file, PowerPoint slide, or PNG image of an entire dashboard, or a crosstab of selected sheets.  Formatting options are similar to Navigation objects. Note: Crosstab download is possible only after publishing to Tableau Cloud or Tableau Server. Extension objects let you add unique features to dashboards or integrate them with applications  outside Tableau. Ask Data objects let users enter conversational queries for specific data source fields, which authors optimize for specific audiences such as sales, marketing, and support staff. Add an object From the Objects section at left, and drag an item to the dashboard on the right: Copy objects You can copy and paste objects either within the current dashboard, or from dashboards in other sheets and files. You can even copy objects between Tableau Desktop and Tableau in your web browser. You can't, however, copy the following: Sheets in a dashboard Items that rely on a specific sheet, such as filters, parameters, and legends Layout containers with something you can't copy inside them, like a sheet or filter Objects on a device layout Dashboard titles Tip: In addition to the menu commands described below, you can also use the standard keyboard shortcuts for copying and pasting on your operating system. Select a dashboard object, and from the object menu, select Copy Dashboard Item . Or from the main menu, select Dashboard > Copy Selected Dashboard Item . Go to the dashboard where you want to paste the object. Then either select nothing to paste in the upper-left corner of the dashboard, or select an existing item to paste next to. In Tableau Desktop, choose File > Paste . In a browser, either choose Edit > Paste or use the keyboard shortcut for pasting. The object is pasted 10 pixels below and to the right of the upper-left corner of the dashboard or the selected object. To move the pasted object, drag the handle at the top. Note: Copied Show/Hide buttons may target the original object or be disabled. For instructions on how to fix this, see Show and hide objects by clicking a button . Set options for objects Click the object to select it. Then click the arrow in the upper corner to open the shortcut menu. (The menu options  vary depending on the object.) Detailed options for Image objects With the Image object, you can either insert image files into dashboards or link to images posted on the web. In either case, you can specify a URL the image opens when clicked, adding interactivity to your dashboard. Note: URLs for web-based images require the HTTPS prefix for improved security. For image URLs with other prefixes, use the Web Page object. From the Objects section at left, drag an Image object to your dashboard at right. Or, on an existing Image object in a dashboard, click the pop-up menu  in the upper corner, and choose Edit Image . Click either Insert Image File to embed an image file into the workbook or Link to Image to link to a web-based image. Consider linking to a web-based image when: The image is very large and your dashboard audience will view it in a browser. (Unlike web-based images, inserted images must be downloaded every time a sheet opens, slowing performance.) The image is an animated GIF file. (Inserted images don't support animated GIFs.) If you're inserting an image, click Choose to select the file. If you're linking to an image, enter its web URL. Set remaining image fitting, URL linking, and alt text options. (Alt text describes the image in screen-reading applications for improved accessibility.) Detailed options for Navigation and Download objects Navigation and Download objects have several unique options that help you visually indicate a navigation destination or file format. A navigation button using text for the button style In the upper corner of the object, click the object menu, and choose Edit Button . Do one of the following: From the Navigate to menu, choose a sheet outside the current dashboard. From the Export to menu, choose a file format. Choose image or text for Button Style , specify the image or text you want to appear, and then set related formatting options. For Tooltip text , add explanatory text that appears when viewers hover over the button. This text is optional and typically best used with image buttons. (For example, you might enter ""Open Sales viz"" to clarify the destination for a navigation button that appears as a miniature sales chart.) Note: When viewing a published dashboard, simply clicking a button navigates or exports. When authoring a dashboard, however, you need to Alt-click (Windows) or Option-click (macOS). Show and hide objects by clicking a button Show/Hide buttons let dashboard viewers toggle the visibility of dashboard objects, revealing them only when necessary. How hidden objects affect  layouts When a floating object is hidden, it simply reveals any objects beneath it. Show/Hide buttons can be particularly helpful when you want to temporarily hide a floating group of filters to reveal more of a visualization. When a tiled object is hidden, the results depend on the object's level in the layout hierarchy. In most cases, you'll want to place objects you plan to hide in a Horizontal or Vertical layout container, because hidden objects will have their space filled in by other objects in the container. By contrast, in the Tiled layout container at the very top of the layout hierarchy, a hidden object leaves blank space behind. Add and configure a Show/Hide button Select a dashboard object. From the pop-up menu in the upper corner of the object, select Add Show/Hide Button . From the button menu, choose Edit Button . Set these options: Dashboard Item to Show/Hide specifies the target object. (An object can be the target of only one Show/Hide button at a time. Choose None if you want to target the object with another Show/Hide button.) Button Style specifies whether image or text displays for the button. Button Appearance specifies how the button looks when the item is both shown and hidden. Click Item Shown and Item Hidden to choose different images or text for each state. Tooltip text provides explanatory text that appears when viewers hover over the button. (For example, you might enter ""Show or hide filters"" for a container with filter menus.) If necessary, drag the button to a different location or resize it to better fit your layout. Note: When viewing a published dashboard, simply clicking a Show/Hide button toggles object visibility. When authoring a dashboard, however, you need to Alt-click (Windows) or Option-click (macOS). Security for Web Page objects If you include Web Page objects in your dashboard, you can optimize security by doing the following. Use HTTPS protocol when possible As a best practice, use HTTPS (https://) in your URLs. This ensures that the connection from your dashboard to the web page is encrypted. Also, if Tableau Server is running HTTPS and you use HTTP in the URL, your users' browsers won't be able to display the web page that the URL points to. If you don't specify a protocol, HTTP will be assumed. Security options for Web Page objects (Tableau Desktop only) Choose Help > Settings and Performance > Set Dashboard Web View Security , and set the options below. (In some organizations, these options are controlled across all machines by a Tableau administrator.) Note: Any changes you make to these security options apply to both existing and newly created web page objects. Enable JavaScript Allows JavaScript support in the web view. Clearing this option may cause some web pages that require JavaScript to function improperly in the dashboard. Enable Plug-ins Enables any plug-ins the web page uses, such as an Adobe Flash or QuickTime player. Block Pop-ups When selected, blocks pop-ups. Enable URL Hover Actions Allows URL hover actions. For more information, see URL Actions . Enable Web Page Objects and Web Images Allows the display of target URLs in Web Page and Image objects. If you deselect this option, Web Page objects and Image objects that link to the web remain in the dashboard but show no content. Back to top Thanks for your feedback!"
Domain 3: Create Content,3.2. Create dashboards and stories,3.2.3. Create stories,https://help.tableau.com/current/pro/desktop/en-us/stories.htm,"Stories Applies to: Tableau Cloud, Tableau Desktop, Tableau Server In Tableau, a story is a sequence of visualizations that work together to convey information. You can create stories to tell a data narrative, provide context, demonstrate how decisions relate to outcomes, or to simply make a compelling case. A story is a sheet, so the methods you use to create, name, and manage worksheets and dashboards also apply to stories (for more details, see Workbooks and Sheets ). At the same time, a story is also a collection of sheets, arranged in a sequence. Each individual sheet in a story is called a story point . When you share a story —for example, by publishing a workbook to Tableau Public, Tableau Server, or Tableau Cloud—users can interact with the story to reveal new findings or ask new questions of the data. Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,3.3.1. Apply a filter to a view,https://kb.tableau.com/articles/howto/adding-filters-to-dashboards,"Published: 16 Sep 2013 Last Modified Date: 19 Jun 2023 Question How to add filters to dashboards. Environment Tableau Desktop Answer If a filter card is already shown on a worksheet before the worksheet is added to the dashboard, then the filter card will automatically be added to the dashboard as well. Adding additional filters later to either the dashboard in general, or to a specific device layout, can be done with the following steps: Scenario 1: Add a filter to a dashboard Click on the worksheet on the dashboard to select it. You will see 4 icons in the upper corner of the gray outline. Select the down arrow to expose the options shown below. Select Filters and add the new field to be added as a filter. Scenario 2: Add a filter to a custom device layout Use the above method to add the filter to the Default layout. Tableau Desktop will automatically add the filter to all device layouts if they are set to ""Default"" rather than ""Custom"" in the Layout section of the left-hand Dashboard pane. In the Dashboard pane, under Layout, drag the desired filter from the list of all possible filters into the view. Additional Information The steps demonstrated in this video are from an older version of Desktop. Did this article resolve the issue? Thank you for providing your feedback on the effectiveness of the article. Click here to return to our Support page. Open new Case Open a new case Continue Searching Click here to go to our Support page. Knowledge Base Get detailed answers and how-to step-by-step instructions for your issues and technical questions. Community Find and share solutions with our active community through forums, user groups and ideas. Product Help Browse a complete list of product manuals and guides. Available online, offline and PDF formats. Training and Tutorials Learn how to master Tableau’s products with our on-demand, live or class room training."
Domain 3: Create Content,3.3. Add interactivity to dashboards,"3.3.2. Add filter, URL, and highlight actions",https://help.tableau.com/current/pro/desktop/en-us/actions_filter.htm,"Filter Actions Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Filter actions send information between worksheets. Typically, a filter action sends information from a selected mark to another sheet showing related information. Behind the scenes, filter actions send data values from the relevant source fields as filters to the target sheet. For example, in a view showing the sales price of houses, when you select a particular house, a filter action can show all comparable houses in a different view. The source fields for the filter might contain sales price and square footage. Watch a video to see real-world examples of actions. Filter actions are covered at the 2:20 mark. Create or edit a filter action Do either of the following: On a worksheet, select Worksheet > Actions . On a dashboard, select Dashboard > Actions . From  the drop-down menu of a dashboard sheet, you can also select Use as Filter . In the Actions dialog box,  ""generated"" appears in the default names of actions created this way. In the Actions dialog box, click Add Action , and then select Filter . Or select an existing action, and choose Edit . Specify a name for the action. Tip: If you plan to launch an action from a tooltip menu, use a descriptive name so users will understand the action's purpose. From the menu to the right of the Name box, you can insert variables  that are drawn from the values of selected fields (Link opens in a new window) . Select a source sheet or data source. If you select a data source or dashboard, you can select related sheets you want to launch the action from. Specify how the action runs: Hover - Runs when you mouse over marks in the view. Select - Runs when you click marks in the view. If you want to avoid running the action when multiple marks are selected, also select Single-select only . Menu - Runs when you right-click (Windows) or Control-click (macOS) a mark in the view, and then click an option in the tooltip menu. Select a target sheet. When you select a dashboard, you can select one or more sheets within it. Specify what happens when the selection is cleared in the view: Leave the filter - Continues to show filtered results on the target sheets. (In web-authoring mode, this is labeled Keep filtered values .) Show all values - Changes the filter to include all values. Exclude all values - Changes the filter to exclude all values. This option is useful when you're building dashboards that only show some sheets if a value in another sheet is selected. Specify the data that you want to show on the target sheets. You can filter on All Fields or Selected Fields . If you chose Selected Fields , click a drop-down menu in the Source Field column, and select a field. Then select a target data source and field. Note : Filter actions that depend on a user function , such as USERNAME(), will not work because row-level security restricts access to the data. Understanding available target fields In the Add Filter dialog box, the fields available in the Target Field drop-down list are limited to the data type of the Source Field. For example, if you select a text field for the source, only text fields are available as targets. If you are connected to a relational data source, you can add sheet links across data sources even if the field names don't match. For example, if one data source has a Latitude field while another has a Lat field, you can associate the fields using the drop down lists in the Add Filter dialog box. When using a multidimensional data source, the destination sheet must use the same data source as the source sheet, and the source and target field names must match. (In Tableau, multidimensional data sources are supported only in Windows.) Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,"3.3.2. Add filter, URL, and highlight actions",https://help.tableau.com/current/pro/desktop/en-us/actions_url.htm,"URL Actions Applies to: Tableau Cloud, Tableau Desktop, Tableau Server A URL action is a hyperlink that points to a web page, 			file, or other web-based resource outside of Tableau. You can use 			URL actions to create an email or link to additional information about your data. To customize links based on your data, you can automatically enter field values as parameters in URLs. Tip: URL actions can also open in a web page object in a dashboard. 				See Actions and Dashboards to learn more. A URL action run from a tooltip menu. The link reflects the action name, not the target URL. Open a web page with a URL action On a worksheet, select Worksheet > Actions . From a dashboard, select Dashboard > Actions . In the Actions dialog box, click Add Action and then select Go to URL . In the next dialog box, enter a name for the action. To enter field  variables in the name, click the Insert menu to the right of the Name box. Note: Give the action a descriptive name, because the link text in the tooltip is the name of the action, not the URL. 							For example, when linking to more product details, a good name could 							be ""Show More Details"". Use the drop-down list to select a source sheet or data source. 							If you select a data source or dashboard you can select individual 						sheets within it. Select how users will run the action. If you choose this option... The action is run when the user... Hover Mouses over a mark in the view. This option works best for highlight actions within a dashboard. Select Clicks a mark in the view. This option works well for all types of actions. Menu Right-clicks (control-clicks on Mac) a selected mark in the view, then clicks an option in a tooltip (menu). This option works particularly well for URL actions. For URL Target, specify where the link will open: New Tab if No Web Page Object Exists — Ensures that the URL opens in a browser on sheets that lack web page objects. This is a good choice when Source Sheets is set to All or a data source. New Browser Tab — Opens in the default browser. Web Page Object — (Available only for dashboards with Web Page objects) Opens in the web page object you select. Enter a URL The URL should start with one of the following prefixes: http , https , ftp , mailto , news , gopher , tsc , tsl , sms , or tel Note : If no prefix is entered, http:// is automatically appended to the beginning and the URL action will work in Tableau Desktop. However, if a URL action with no prefix  is published to Tableau Server or Tableau Cloud, it will fail in the browser. Always provide a fully qualified URL for actions if the dashboard will be published. Note : You can specify an ftp address only if the dashboard doesn't contain a web object. If a web object exists, the ftp address won't load. Tableau Desktop also supports local paths like C:\Example folder\example.txt , as well as file URL actions. To enter field and filter values as dynamic values in the URL, click the Insert menu  to the right of the URL. Be aware that any referenced fields must be used in the view. For details, see Using field and filter values in URLs . Below the URL you enter is a hyperlinked example you can click for testing. (Optional) In the Data Values section, select any of the following options: Encode Data Values that URLs Do Not Support — Select this option if your 							data contains values with characters that browsers don't allow  							in URLs. For example, if one of your data values contains an ampersand, 							such as “Sales & Finance,” the ampersand must be translated 						into characters that your browser understands. Allow Multiple Values via URL Parameters — Select this option if you are 							linking to a web page that can receive lists of values via parameters 							in the URL. For example, say you select several products in a view 							and you want to see each product’s details hosted on a webpage. 							If the server can load multiple product details based on a list 							of identifiers (product ID or product name), you could use multi-select 						to send the list of identifiers as parameters. When you allow multiple values, you must also define the delimiter escape character, which is the 							character that separates each item in the list (for example, a comma). 							You must also define the Delimiter Escape, which is used if the 						delimiter character is used in a data value. Create an email with a URL action On a worksheet, select Worksheet > Actions . From a dashboard, select Dashboard > Actions . In the Actions dialog box, click Add Action , and select Go to URL . In the Source Sheets drop-down list, select the sheet that contains the field with the email addresses you want to send to. In the URL box, do the following: Type mailto: , and click the Insert menu at right to select the data field that contains email addresses. Type ?subject= , and enter text for the Subject line. Type &body= , and click the Insert menu at right to select the fields of information that you want to include in the body of the email. In the example below, the “Email” field contains the email addresses, the subject is “City Information”, and the body text of the email consists of the city and state data that is associated with the email address. : (Optional) Display data from your workbook in the body of your email as a vertical list instead of the default horizontal list. For example, suppose you have a horizontal list of cities, such as Chicago, Paris, Barcelona, which you would rather display vertically, like this: Chicago Paris Barcelona To make the list vertical,  in the Data Values section, do the following: Deselect Encode Data Values that URLs Do Not Support Select Allow Multiple Values via URL Parameters . Type %0a in the Value Delimiter text box to add line breaks between each item in the list. (These are the URL-encoded characters for a line break.) Using field and filter values in URLs When users trigger URL actions from selected marks, Tableau can send field, filter, and parameter values as variables in the URL. For example, if a URL action links to a mapping website, you could insert the address field to automatically open the currently selected address  on the website. In the Edit URL Action dialog box, begin typing the URL for the link. Place the cursor where you want to insert a field, parameter, or filter value. Click the Insert menu to the right of the text box and select the field, parameter, or filter you want to insert. The variable appears within angle brackets. You can continue adding as many variables as you need. Note: Any referenced fields must be used in the view. Otherwise, the link won't display in the viz, even if it functions when you click Test Link. Including aggregated fields The list of available fields includes only  non-aggregated fields. To use aggregated field values as link parameters, first create a related calculated field, and add that field to the view. (If you don't need the calculated field in the visualization, drag it to Detail on the Marks card.) Inserting parameter values When inserting parameter values, URL actions send the Display As value by default. To instead send the actual value, add the characters ~na after the parameter name. For example, say you have a parameter that includes IP addresses, with Actual Value strings such as 10.1.1.195 and Display As strings with more friendly values such as Computer A (10.1.1.195) . To send the actual value, you'd revise the parameter in the URL to look like this: http://<IPAddress~na>/page.htm . Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,"3.3.2. Add filter, URL, and highlight actions",https://help.tableau.com/current/pro/desktop/en-us/actions_highlight.htm,"Highlight Actions Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Highlight actions allow you to call attention to marks of interest by coloring specific marks and dimming all others. You can highlight marks in the view using a variety of tools. For example, you can manually select  the marks you want to highlight,  use the  legend to select related marks, use the highlighter to search for marks in context or create an advanced highlight action. The following table describes the different methods you can use to highlight marks in a view, dashboard, or story. Highlight method Benefits When you might use this Select marks Manually select a group of marks to highlight in a view. Your selection is saved with the workbook. When you want to manually highlight a selection of marks and dim all others. Works well with small domains or views with a small amount of data. Legends Supports one-way and two-way highlighting. Highlight on color, size, or shape. You can disable or enable the highlighting action for the workbook or sheets from the toolbar. Your selection is saved with the workbook and can be included in dashboards and stories and when publishing. When you want to focus on select members in a view and dim all others. When you want to highlight using onlythe legend or the legend and the view. Works well with small domains or views with a small amount of data. Highlighter Search for data points in a view using keywords or select from a drop-down list. Highlight marks while maintaining the context of the other data points. Values automatically update when the underlying data is updated. Highlighters added to worksheets also appear on dashboards and stories. When you want to highlight a mark or group of marks for a discrete field that is included in the view. When you want to do ad hoc comparisons with instant highlighting. Works well with large domains and large amounts of data. Actions (Tableau Desktop only) Highlight data based on  criteria that you define. Specify the source and target sheets to apply the highlight action to. Specify the fields to use for highlighting. You can specify different types of actions to run on the same click (for example, filter and highlight). When you want to build interactive exploration into a dashboard. When you want to highlight data points in a dashboard using specific fields. Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,3.3.3. Swap sheets by using parameters or sheet selector,https://help.tableau.com/current/pro/desktop/en-us/dashboards_sheet_selector.htm,"Create a Sheet Selection Menu for a Dashboard Applies to: Tableau Desktop Using a combination of a parameter and a calculated field, you can create a drop-down menu  that lets users select an individual view that automatically expands to fill a dashboard. Tip: To show sheets using separate buttons rather than a single menu, instead use Show/Hide buttons . This is a much simpler approach, though each button will reveal a separate object. To leave a dashboard and open a completely different sheet, use Navigation objects . On an individual worksheet, right-click an empty area of the Data pane at left, and select Create Parameter . In the Create Parameter dialog box, do the following: Enter a name that will appear appear above the menu, like Select a View . For Data type ,  select String . For Allowable values , select List . Under List of values , type All for the first value, and then add values with the name of each view in the dashboard. Click OK . On any sheet, right-click an empty area of the Data pane at left, and select Create Calculated Field . Give the calculation a descriptive name like Display sheet . In the formula text box, enter the name of the parameter you created above. Then click OK . Open a sheet you plan to add to your dashboard, and drag the new calculation to the Filters shelf. Then do the following in the Filter dialog box: Select Custom Value List . Type All in the text box, and click the Add Item button. Type the current view's name (like “Map”) in the text box, and click the Add Item button. When you're done, click OK . Repeat step 6 for every sheet you plan to add to your dashboard. Select Dashboard > New Dashboard . From the Objects section at lower left, drag a Vertical or Horizontal layout container to the dashboard. Now drag each  sheet to the layout container, identified by the dark blue outline. To display the sheet selector, from the drop-down menu at the top of a view,  choose Parameters > [new parameter name]. To ensure that selected views fill the dashboard, do the following: From the drop-down menu at the top of each view, ensure that Fix Width is not selected. Right-click the title area of each view in the dashboard, and select Hide Title . Your sheet selector is ready to go! For similar examples, see Use Parameters to Make Views More Interactive . Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,3.3.4. Add navigation buttons,https://help.tableau.com/current/pro/desktop/en-us/dashboards_create.htm,"Create a Dashboard Applies to: Tableau Cloud, Tableau Desktop, Tableau Server After you've created one or more sheets, you can combine them in a dashboard, add interactivity, and much more. Tip: To quickly get up and running, see Use Accelerators to Quickly Visualize Data . Create a dashboard, and add or replace sheets You create a dashboard in much the same way you create a new worksheet. At the bottom of the workbook, click the New Dashboard icon: From the Sheets list at left, drag views to your  dashboard at right. To replace a sheet, select it in the dashboard at right. In the Sheets list at left, hover over the replacement sheet, and click the Swap Sheets button. Note: When you replace a sheet, Tableau retains any padding, border, or background color. However, you may need to adjust sheet size if content differs significantly. You may also need to delete dashboard items specific to the previous sheet, such as filters, which become blank. Add interactivity You can add interactivity to dashboards to enhance users' data insights. Try these techniques: In the upper corner of sheet, enable the Use as Filter option to use selected marks in the sheet as filters for other sheets in the dashboard. When authoring in Tableau Desktop, add actions to use multiple sheets as filters, navigate from one sheet to another, display web pages, and more. For details, see Actions and Dashboards . Add dashboard objects and set their options In addition to sheets, you can add dashboard objects that add visual appeal and interactivity. Here's guidance about each type: Horizontal and Vertical objects provide layout containers that let you group related objects together and fine-tune how your dashboard resizes when users  interact with them. Text objects can provide headers, explanations, and other information. Image objects add to the visual flavor of a dashboard, and you can link them to specific target URLs. (While Web Page objects can also be used for images, they are better for complete web pages. The Image object provides image-specific fitting, linking, and alt-text options.) Web Page objects display target pages in the context of your dashboard. Be sure to review these web security options , and be aware that some web pages don't allow themselves to be embedded—Google is one example. Note: For security reasons, your Tableau administrator may prevent Web Page and Image objects from displaying target URLs. Blank objects help you adjust spacing between dashboard items. Navigation objects let your audience navigate from one dashboard to another, or to other sheets or stories. You can display text or an image to indicate the button's destination to your users, specify custom border and background colors, and provide informational tooltips. Download objects let your audience quickly create a PDF file, PowerPoint slide, or PNG image of an entire dashboard, or a crosstab of selected sheets.  Formatting options are similar to Navigation objects. Note: Crosstab download is possible only after publishing to Tableau Cloud or Tableau Server. Extension objects let you add unique features to dashboards or integrate them with applications  outside Tableau. Ask Data objects let users enter conversational queries for specific data source fields, which authors optimize for specific audiences such as sales, marketing, and support staff. Add an object From the Objects section at left, and drag an item to the dashboard on the right: Copy objects You can copy and paste objects either within the current dashboard, or from dashboards in other sheets and files. You can even copy objects between Tableau Desktop and Tableau in your web browser. You can't, however, copy the following: Sheets in a dashboard Items that rely on a specific sheet, such as filters, parameters, and legends Layout containers with something you can't copy inside them, like a sheet or filter Objects on a device layout Dashboard titles Tip: In addition to the menu commands described below, you can also use the standard keyboard shortcuts for copying and pasting on your operating system. Select a dashboard object, and from the object menu, select Copy Dashboard Item . Or from the main menu, select Dashboard > Copy Selected Dashboard Item . Go to the dashboard where you want to paste the object. Then either select nothing to paste in the upper-left corner of the dashboard, or select an existing item to paste next to. In Tableau Desktop, choose File > Paste . In a browser, either choose Edit > Paste or use the keyboard shortcut for pasting. The object is pasted 10 pixels below and to the right of the upper-left corner of the dashboard or the selected object. To move the pasted object, drag the handle at the top. Note: Copied Show/Hide buttons may target the original object or be disabled. For instructions on how to fix this, see Show and hide objects by clicking a button . Set options for objects Click the object to select it. Then click the arrow in the upper corner to open the shortcut menu. (The menu options  vary depending on the object.) Detailed options for Image objects With the Image object, you can either insert image files into dashboards or link to images posted on the web. In either case, you can specify a URL the image opens when clicked, adding interactivity to your dashboard. Note: URLs for web-based images require the HTTPS prefix for improved security. For image URLs with other prefixes, use the Web Page object. From the Objects section at left, drag an Image object to your dashboard at right. Or, on an existing Image object in a dashboard, click the pop-up menu  in the upper corner, and choose Edit Image . Click either Insert Image File to embed an image file into the workbook or Link to Image to link to a web-based image. Consider linking to a web-based image when: The image is very large and your dashboard audience will view it in a browser. (Unlike web-based images, inserted images must be downloaded every time a sheet opens, slowing performance.) The image is an animated GIF file. (Inserted images don't support animated GIFs.) If you're inserting an image, click Choose to select the file. If you're linking to an image, enter its web URL. Set remaining image fitting, URL linking, and alt text options. (Alt text describes the image in screen-reading applications for improved accessibility.) Detailed options for Navigation and Download objects Navigation and Download objects have several unique options that help you visually indicate a navigation destination or file format. A navigation button using text for the button style In the upper corner of the object, click the object menu, and choose Edit Button . Do one of the following: From the Navigate to menu, choose a sheet outside the current dashboard. From the Export to menu, choose a file format. Choose image or text for Button Style , specify the image or text you want to appear, and then set related formatting options. For Tooltip text , add explanatory text that appears when viewers hover over the button. This text is optional and typically best used with image buttons. (For example, you might enter ""Open Sales viz"" to clarify the destination for a navigation button that appears as a miniature sales chart.) Note: When viewing a published dashboard, simply clicking a button navigates or exports. When authoring a dashboard, however, you need to Alt-click (Windows) or Option-click (macOS). Show and hide objects by clicking a button Show/Hide buttons let dashboard viewers toggle the visibility of dashboard objects, revealing them only when necessary. How hidden objects affect  layouts When a floating object is hidden, it simply reveals any objects beneath it. Show/Hide buttons can be particularly helpful when you want to temporarily hide a floating group of filters to reveal more of a visualization. When a tiled object is hidden, the results depend on the object's level in the layout hierarchy. In most cases, you'll want to place objects you plan to hide in a Horizontal or Vertical layout container, because hidden objects will have their space filled in by other objects in the container. By contrast, in the Tiled layout container at the very top of the layout hierarchy, a hidden object leaves blank space behind. Add and configure a Show/Hide button Select a dashboard object. From the pop-up menu in the upper corner of the object, select Add Show/Hide Button . From the button menu, choose Edit Button . Set these options: Dashboard Item to Show/Hide specifies the target object. (An object can be the target of only one Show/Hide button at a time. Choose None if you want to target the object with another Show/Hide button.) Button Style specifies whether image or text displays for the button. Button Appearance specifies how the button looks when the item is both shown and hidden. Click Item Shown and Item Hidden to choose different images or text for each state. Tooltip text provides explanatory text that appears when viewers hover over the button. (For example, you might enter ""Show or hide filters"" for a container with filter menus.) If necessary, drag the button to a different location or resize it to better fit your layout. Note: When viewing a published dashboard, simply clicking a Show/Hide button toggles object visibility. When authoring a dashboard, however, you need to Alt-click (Windows) or Option-click (macOS). Security for Web Page objects If you include Web Page objects in your dashboard, you can optimize security by doing the following. Use HTTPS protocol when possible As a best practice, use HTTPS (https://) in your URLs. This ensures that the connection from your dashboard to the web page is encrypted. Also, if Tableau Server is running HTTPS and you use HTTP in the URL, your users' browsers won't be able to display the web page that the URL points to. If you don't specify a protocol, HTTP will be assumed. Security options for Web Page objects (Tableau Desktop only) Choose Help > Settings and Performance > Set Dashboard Web View Security , and set the options below. (In some organizations, these options are controlled across all machines by a Tableau administrator.) Note: Any changes you make to these security options apply to both existing and newly created web page objects. Enable JavaScript Allows JavaScript support in the web view. Clearing this option may cause some web pages that require JavaScript to function improperly in the dashboard. Enable Plug-ins Enables any plug-ins the web page uses, such as an Adobe Flash or QuickTime player. Block Pop-ups When selected, blocks pop-ups. Enable URL Hover Actions Allows URL hover actions. For more information, see URL Actions . Enable Web Page Objects and Web Images Allows the display of target URLs in Web Page and Image objects. If you deselect this option, Web Page objects and Image objects that link to the web remain in the dashboard but show no content. Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,"3.3.5. Implement user guiding sentences (click…, hover…, menu options)",https://help.tableau.com/current/blueprint/en-us/bp_visual_best_practices.htm,"Visual Best Practices This content is part of Tableau Blueprint—a maturity framework allowing you to zoom in and improve how your organization uses data to drive impact. To begin your journey, take our assessment (Link opens in a new window) . Visual best practices are key to developing informative visualizations that drive your audience to act. A dashboard is successful when people can easily use it to derive answers. Even a beautiful dashboard with an interesting data source could be rendered useless if your audience can’t use it to discover insights. Think not just as an analyst but also as a designer and consumer. Dashboards should have interactive elements that are discoverable and predictable, follow a sensible, logical layout, and have a simplified design that makes complex decisions easier. It is important not to assume that people automatically know what it takes to clearly and effectively communicate with data. Here are a few whitepaper links to share on your enablement intranet: Visual analysis guidebook Which chart or graph is right for you? Good enough to great Designing efficient workbooks You can find a list of books by renowned data visualization experts in the appendix. Adding these whitepapers and books to the resources of your analytics community can lead to a deeper understanding and internalization of visual best practices. Audience The best visualizations have a clear purpose and work for their intended audience. It’s important to know what you are trying to say and who you are saying it to. Does your audience know this subject matter extremely well or will it be new to them? What kind of cues will they need? Thinking about these questions before you begin designing will help you create a successful dashboard. For example, you would present aggregated, summary-level data and KPIs to an executive audience rather than row-level transactions. Context Make sure your views include context. Titles, captions, units, and commentary all help your audience to better understand your data view. Always strive to tell stories with your data and your visuals. Understand that good stories involve more than just data, and consider the following: Mind your aesthetics and know that what is effective is often affective. In other words, an effective view can create an emotional response and a genuine communication to your audience. Style is also important. Make sure that your views are consistent and pleasing to the eye. Your views are representative of who you are and what you care about. Dashboards that people can interact with are very engaging. Interactive elements allow your audience to manipulate the data, ask and answer questions, and arrive at findings on their own. This helps to foster trust in your data. Make your views vivid and memorable. Pay attention to structure and context. Chart Choice Chart choice should depend on the question you are trying to answer or a specific insight you are trying to communicate. There is almost always a trade-off involved, with different chart types each having their own advantages and downsides. You should always ask yourself if your chosen chart type best conveys the message you are trying to share and if it can be easily understood by your audience. The table below explains the chart types in Tableau’s Show Me panel and when to use each. This should be published to your enablement intranet to educate new users. Chart Description Line — Viewing trends in data over time. Examples: Stock price change over a five-year period, website page views during a month, revenue growth by quarter. Bar — Comparing data across categories. Examples: Volume of shirts in different sizes, website traffic by origination site, percent of spending by department. Heat Map — Showing the relationship between two factors. Examples: Segmentation analysis of target market, product adoption across regions, sales leads by individual rep. Highlight Table — Providing detailed information on heat maps. Examples: The percent of a market for different segments, sales numbers in a particular region, population of cities in different years. Treemap — Showing hierarchical data as a proportion of a whole. Examples: Storage usage across computer machines, managing the number and priority of technical support cases, comparing fiscal budgets between years. Gantt — Showing duration over time. Examples: Project timeline, duration of a machine’s use, availability of players on a team. Bullet — Evaluating performance of a metric against a goal. Examples: Sales quota assessment, actual spending vs. budget, performance spectrum (great/good/poor). Scatterplot — Investigating the relationship between different variables. Examples: Male versus female likelihood of having lung cancer at different ages, technology early adopters’ and laggards’ purchase patterns of smart phones, shipping costs of different product categories to different regions. Histogram — Understanding the distribution of your data. Examples: Number of customers by company size, student performance on an exam, frequency of a product defect. Symbol maps — Use for totals rather than rates. Be careful, as small differences will be hard to see. Examples: Number of customers in different geographies. Area maps — Use for rates rather than totals. Use sensible base geography. Examples: Rates of internet-usage in certain geographies, house prices in different neighborhoods. Box-and-Whisker — Showing the distribution of a set of a data. Examples: Understanding your data at a glance, seeing how data is skewed towards one end, identifying outliers in your data. Layout How your audience “reads” your dashboard is not a trivial consideration. Your dashboard’s purpose is to help guide the reader’s eye through multiple views in coordination and tell the story of each insight. Your dashboard needs a sensible “flow” and a logical layout of different pieces of information. The more you employ better dashboard design, your users will discover what’s happening, why, and what’s most important. Consider how you’re guiding their eyes across the dashboard. Are you showing the user where to look next? Design theory gives us plenty of advice on how best to succeed. Layout is a key component of any successful dashboard design, here are a few concepts you want to think about when building visualizations: Newspaper or Z-layout — The most important content is put either at the top or the left of a visualization, as users move right and down for more specific content. White space — Using negative space (blank spots) and padding to delineate sections of your visualization – don’t use thick “grid lines” as you would see in a table. Size — More important pieces of content (KPIs, summary visualizations, etc.) should be larger than other items. Device type — With device-specific dashboards you can create the optimum viewing experience on desktop, laptop, tablet, and phone. Color Color is one of the most powerful aesthetic features because it’s an attention-grabber. It’s the first thing we notice, and it can immediately highlight specific insights or identify outliers, but it is not an unlimited design resource. Using color effectively is critical for producing quality data visualizations – color types (alerting vs highlighting), creating custom color palettes, and consistency—are key aspects to build into your standards. The correct use of color is critical for producing coherent and impactful data stories. The key factors that should be taken in to consideration for any successful dashboard are: Managing color choices — The primary color(s) that make up most of your design should be a neutral color. Using techniques like grayscale, you maximize the possibility for contrast and visibility of your data driven points. Your extended colors—accents, emphasis, and alerts—should reflect the brand. Any extended color should be used sparingly to draw attention to key messages within the data. Color types — Understand when to use sequential, diverging, categorical, highlighting, or alerting color motifs. Custom color palettes — Build your own company palettes to bring a sense of uniformity and provide guiderails for new users. Consistency — Double-check your visualizations to make sure a color (e.g. red) does not mean three different things. Similar and repeated colors can imply a relation where one doesn’t exist. Accessibility — Remember to account for color blindness in the design process. Titles & Subtitles Titles are an easy way to make your dashboard more digestible for your audience. You add more context with subtitles that describe how to interact with the worksheet or dashboard. This is a powerful and simple way to make dashboards easier to navigate. In the example below, the question pulls the audience in and then tells the audience how to answer the question using the dashboard. Effective Title and Subtitle Similarly, by changing your filter title to something more intuitive, you guide viewers through how to interact with a dashboard. Example of a Filter Tooltips Tooltips guide the audience by highlighting important information. In the example below, the County and State are highlighted through a bold effect and color change, and we don’t have to partition our scatter plot further. We add important and related dimensions and measures in the tooltip. This helps save space and declutter the dashboard so our viewers can focus on gleaning insights instead of interpreting the visualization. Effective Tooltip If the viewer notices something interesting in the tooltip, they can interact directly with the tooltip and watch the rest of the visualization come to life, highlighting related marks and outliers. Formatting a Tooltip Fonts Typography is important. It can be tempting to use many font types and sizes in a dashboard. Don’t do that; instead, define a clear hierarchy for your typography. In the example below, there is a top, mid, and low-level font. The mid-level is blue to focus viewer attention. Color draws the eye to the most important level (which needn’t necessarily be the top-level font). Top, Mid, and Low-Level Fonts (Courtesy of The Big Book of Dashboards) Make sure that font selection is done to reinforce a visual hierarchy within your visualization through size, boldness, color and type. Size — Larger elements convey importance as they catch the eye.  Save your largest fonts for KPIs, titles, etc. Boldness — Bolder elements convey importance as they catch the eye. You can vary boldness throughout your visualization in conjunction with size. For example, your title and KPIs could both be 24pt font, but making your KPIs bold will “pop” them, allowing your audience to focus there first. Color — Generally it’s good to stick with gray and black hues in your titles, text, and KPIs. You can “pop” your KPIs by giving them a color treatment, but you have to balance this with the other colors used in your visualization. Darker colors will draw the eye, so it’s wise to lighten your titles so they don’t compete for visual attention. Dashboard Size By default, Tableau dashboards are set to use a fixed size. If you keep this setting, be sure to construct your visualization at the size which it will be viewed. You can also set Size to Automatic, so Tableau automatically adapts the overall dimensions of a visualization based on screen size. This means that if you design a dashboard at 1300 x 700 pixels, Tableau will resize it for smaller displays—and sometimes this results in scrunched views or scrollbars. The Range sizing feature is helpful for avoiding this. Dashboard Size Range If you're using Tableau Desktop to create dashboards, you can also design for specific device layouts, so that on tablets, for example, your dashboard contains one set of views and objects, and on phones it displays another. See Create Dashboard Layouts for Different Device Types for steps. Dashboard Interactivity When designing a dashboard, you need to consider your audience, and how you can communicate to them that they can interact with the dashboard. Skilled users know to click and experiment, but new users may not have the knowledge or confidence. Your job is to help them make these decisions consciously, not by accident. It’s important to make any interactivity obvious to your audience—even by creating subtitles to instruct them to click or hover for more information. Add interactivity to your data using filters, tooltips, and actions . Filters are the most obvious way to interact with a dashboard. Users can also interact with your visualizations by selecting marks and hovering to see tooltips. The actions you set up can respond with navigation and changes in the view. The table below enumerates the ways to create interactivity in your dashboards. Type Description Highlighting & Highlight Actions Easily find data of interest while remaining within context. See other marks with shared attributes. Find related data across sheets. Filtering & Filter Actions Focus on data you want to analyze. Control context of data. Show relevant data and remove unnecessary data. Parameters Explore what-if scenarios. Customize your views. Enhance dashboard flexibility. Sets & Set Actions Dynamically update the members of a set. Compare parts to whole. Seamlessly drill down through hierarchies. Update a calculation by interacting with data. Tooltips Provide details on demand. Keep your dashboard minimalistic. Insert a viz in a tooltip. URL Actions Incorporate external content in a dashboard. Provide more in-depth information on demand. Link users to websites. Dashboard Navigation Guide users through your workbook. Direct users to additional content. When designing dashboards, consider how and why you incorporate interactivity into the dashboard. The following questions are helpful: Why does a viewer need to interact with the dashboard? What extras insight will be gained through the interactivity? Designing for Performance When we talk about performance , we mean the speed with which you can work in Tableau. That might mean the speed of data analysis—for example, if you work in Tableau Desktop on a large corporate database that takes forever in real time when you access it remotely. Or it might mean simply the speed of loading views or dashboards that you access on your desktop or from Tableau Server or Tableau Cloud. Performance and efficiency should be treated as part of the design process—not as an afterthought. Responsiveness is an important success factor for end users when viewing reports and dashboards, so making your workbooks run as quickly as possible makes for happier users. There are several factors that make a workbook “efficient”. Some of these factors are technical and some more user-focused but in general an efficient workbook is: Simple — Is it easy to create the workbook and will it be easy to maintain in the future? Does it take advantage of the principles of visual analysis to clearly communicate the message of the author and the data? Flexible — Can the workbook answer multiple questions the users want to ask, or just one? Does it engage the user in an interactive experience or is it simply a static report? Fast — Does the workbook respond quickly enough for the users? This may mean time to open, time to refresh, or time to respond to interaction. This is a subjective measure, but in general we want workbooks to provide an initial display of information and to respond to user interactions within seconds. The performance of a dashboard is impacted by the following: The visual design at both the dashboard and worksheet levels, e.g. how many elements, how many data points, use of filters and actions, etc. The calculations, e.g. what kind of calculation, where the calculation is performed, etc. The queries, e.g. how much data is returned, impact of custom SQL, etc. The data connections and underlying data sources. Some differences between Tableau Desktop and Tableau Server or Tableau Cloud. Other environmental factors, such as hardware configuration and capacity for Tableau Server. For more information, see Designing Efficient Workbooks . Accessibility To make your views accessible to as many people as possible—or if you work in an environment that is subject to US Section 508 requirements or other accessibility-related laws and regulations—you can use Tableau to build data views that conform to the Web Content Accessibility guidelines (WCAG 2.0 AA). This includes building views that are accessible to users who use screen readers, braille keyboards, keyboard-only navigation, and so on. Refer to Build Data Views for Accessibility for details. Additional resources are available on the “FAQ: Accessibility” post in the Tableau Community forums. Back to top Thanks for your feedback!"
Domain 3: Create Content,3.3. Add interactivity to dashboards,"3.3.5. Implement user guiding sentences (click…, hover…, menu options)",https://help.tableau.com/current/pro/desktop/en-us/dashboards_best_practices.htm,"Best Practices for Effective Dashboards Applies to: Tableau Desktop A well-designed dashboard can align your organization's efforts, help uncover key insights, and speed up decision-making. Use this topic for tips on best practices for creating effective dashboards in Tableau. What's your goal? Know your purpose and audience The best visualizations have a clear purpose and work for their intended audience. What will you be trying to say with this dashboard? Are you presenting a conclusion or a key question? In addition to knowing what you're trying to say, it's important to know who you're saying it to. Does your audience know this subject matter extremely well or will it be new to them? What kind of cues will they need? Thinking about these questions before you head into the design phase can help you create a successful dashboard. Leverage the most-viewed spot Most viewers scan web content starting at the top left of a web page. Once you know your dashboard's main purpose, be sure to place your most important view so that it occupies or spans the upper-left corner of your dashboard. In the dashboard below, the author decided that the map view holds the key message. Design for the real world Author at your final display size By default, Tableau dashboards are set to use a fixed size and if you keep this setting, be sure to construct your visualization at the size it will be viewed at. You can also set Size to Automatic , which makes Tableau automatically adapt the overall dimensions of a visualization based on screen size. This means that if you design a dashboard at 1300 x 700 pixels, Tableau will resize it for smaller displays—and sometimes this results in scrunched views or scrollbars. The Range sizing feature is helpful for avoiding this. If you're using Tableau Desktop to create dashboards, you can also design for specific device layouts, so that on tablets, for example, your dashboard contains one set of views and objects, and on phones it displays another. See Create Dashboard Layouts for Different Device Types for steps. Limit the number of views In general, it's a good idea to limit the number of views you include in your dashboard to two or three. If you add too many views, visual clarity and the big picture can get lost in the details. If you find that the scope of your story needs to grow beyond two or three views, you can  always create more dashboards. Too many views can also interfere with the performance of your dashboard after it's published. See Make Visualizations Faster for more details on performance. Click the image to replay it. Add interactivity to encourage exploration Show filters Filters help users specify which data is shown in the view. To turn on filters for a field: In Tableau Desktop—Right-click the field in the Data window and select Show Filter . In Tableau Server or Tableau Cloud—In the toolbar click Show/Hide Cards > Filters . You can customize each filter for different types of data. For example, you can show filters as multi-select check boxes, single select radio buttons, or drop-down lists, etc. You can include a search button, the option to show all fields, null controls, and more. You can also edit the title of a filter to give your viewers clear instructions for interacting with the data. Enable highlighting You can use the Highlight button on the toolbar to set up highlighting between views. When highlighting is turned on, a selection in one view will highlight related data in the other views. You can turn on highlighting for all fields or select specific fields. For more information about the different methods you can use to highlight data, see Highlight Actions (Link opens in a new window) . You can also display a highlighter that allows your customers to highlight parts of a view based on what they enter or select. To display a highlighter: Go to the worksheet where the view is (or select Go to Sheet from the dashboard). Right-click the field you want to highlight—it must be a discrete field—and choose Show Highlighter : In the highlighter, your users will be able to select or enter terms to highlight data in the view: Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,"3.4.1. Apply color, font, shapes, styling",https://help.tableau.com/current/pro/desktop/en-us/viewparts_marks_markproperties_color.htm,"Color Palettes and Effects Applies to: Tableau Cloud, Tableau Desktop, Tableau Server All marks have a default color, even when there are no fields on Color on the Marks card. For most marks, blue is the default color; for text, black is the default color. Also see Assign colors to marks and Example – Multiple Fields on Color . Categorical Palettes When you drop a field with discrete values (typically a dimension) on Color on the Marks card, Tableau uses a categorical palette and assigns a color to each value of the field. Categorical palettes contain distinct colors that are appropriate for fields with values that have no inherent order, such as departments or shipping methods. To change colors for values of a field, click in the upper-right corner of the color legend. In Tableau Desktop, select Edit Colors from the context menu. In Tableau Server or Tableau Cloud, the Edit Colors dialog  opens automatically. Tableau Desktop version Web version Change the color for a value Click on an item on the left, under Select Data Item . Click a new color in the palette on the right. In Tableau Desktop you can hover over a swatch to identify the color. Repeat for as many values that you want to change. In Tableau Desktop, click OK to exit the Edit Colors dialog box. In Tableau Server or Tableau Cloud, simply close the dialog box. Select a different palette The Select Color Palette drop-down list in the Edit Colors dialog box provides  color palettes that you can use for discrete fields. The list contains both categorical and ordinal palettes. At the top of the list are categorical palettes, such as Tableau 10 . As noted above, categorical palettes are appropriate for discrete fields with no inherent order. At the bottom of the list are ordinal palettes such as Orange . Ordinal palettes contain a range of related colors and are appropriate for fields that have an associated order, such as dates or numbers. After you select a palette, click Assign Palette to automatically assign the new palette colors to the members in the field. To return to the Automatic palette and the default color assignments, click Reset in the Edit Colors dialog box. Quantitative Palettes When you drop a field with continuous values on the Marks card (typically a measure), Tableau displays a quantitative legend with a continuous range of colors. You can change the colors used in the range, the distribution of color, and other properties. To edit colors, click in the upper right of the color legend. In Tableau Desktop, select Edit Colors from the context menu. In Tableau Server or Tableau Cloud, the Edit Colors dialog opens automatically. When there are both negative and positive values for the field,  the default range of values will use two color ranges and the Edit Colors dialog box for the field has a square color box on either end of the range. This is known as a diverging palette. Tableau Desktop version Web version Edit Colors dialog box for a diverging palette When all values are either positive or negative,  the default range of values will use a single color range and the Edit Colors dialog box for the field has a square color box only at the right end of the range. This is known as a sequential palette. Tableau Desktop version Web version Edit Colors dialog box for a sequential palette You can specify whether Tableau uses a diverging or a sequential palette for a continuous field on Color , and also configure the range of colors for the field’s values. The Palette drop-down list provides a range of color palettes from which you can choose. There are two types of quantitative palettes available for continuous fields: All palettes with Diverging in the name are diverging quantitative palettes—for example, Orange-Blue Diverging . You can choose a diverging palette for any continuous field—it isn’t necessary for the range of values to contain both positive and negative numbers. To change the colors for a diverging palette, click one of the square color boxes at either end of the palette spectrum. Depending on whether you are authoring in Tableau Desktop or on the web, do one of the following: In Tableau Desktop, in the color configuration dialog box (which is part of your computer’s operating system), select a color from the color picker or enter custom values. In Tableau Server or Tableau Cloud, enter a custom Hex value in the Custom Color field.  If the value isn't valid, no changes are made. All other palettes are sequential quantitative palettes. To change the colors for a sequential palette, click the square color box at the right end of the palette spectrum to either open the color configuration dialog box (Tableau Desktop), or enter a custom Hex value in the Custom Color field (Tableau Server or Tableau Cloud). Options for quantitative palettes The following options are available in the Edit Colors dialog box for a continuous field. Note : Options differ where noted for Tableau Server and Tableau Cloud. Stepped Color Select Stepped Color to group values into uniform bins, where each bin is associated with a color. Use the spin control to specify how many steps (bins) to create. For example, for a range of values from 0 to 100 you could specify five steps to sort values into five bins (0-20, 20-40, etc.). Tableau Desktop version Web version If a diverging color palette is selected, the point where the palette transitions between colors is shown on the color ramp with a small black tick mark. When the number of steps is odd, the  mark is placed in the middle of the transitional step. When the number of steps is even, the mark is placed at the boundary between the steps where the color changes. Reversed Select Reversed to invert the order of colors in the range. For example, if you want lower values to have a darker intensity in a sequential palette, reverse the palette. For a diverging palette, reversing the color palette means swapping the two colors in the palette, in addition to inverting the shades within each color range. Use Full Color Range With a diverging (two-color) palette, you can select to Use Full Color Range . Tableau assigns both the starting number and the ending number a full intensity for both color ranges. So if the range is from -10 to 100, the color representing negative numbers will be adjusted to change in shade much more quickly than the color representing positive numbers. If you don't select Use Full Color Range , Tableau assigns the color intensity as if the range of values was from -100 to 100, so that the change in shade is the same on both sides of zero. This means there will be much less change on the negative side, where actual values only range from -10 to 0, than on the positive side, where values range from 0 to 100. The image on the left below shows a red-green diverging color palette for values from -858 to 72,986. Without using the full color range, -858 (associated with the small box at the lower right of the chart) shows as gray, because -858 is only about 1% as far to the negative side as 72,986 is to the positive side. When the full color range is used, as in the image on the right, -858 shows as a dark red, equal in intensity to the maximum positive value. Include totals Select Include Totals to include totals, sub-totals and grand totals in the color encoding. This option only applies when total values are included in the view. Limit the color range In Tableau Desktop, when you click Advanced in the Edit Colors dialog box, you can choose to specify the start, end, and center  values for the range by selecting the check box and typing a new value into the field and the color ramp is adjusted accordingly. The Start value is the lower limit in the range, the End value is the upper limit, and the Center value is where the neutral color is located on a diverging color palette. Note : This option is not currently available in Tableau Server or Tableau Cloud. Reset the color range To return to the Automatic palette and the default color assignments, click Reset in the Edit Colors dialog box. Note : If you are in web authoring mode and click Reset , the color palette will return to the default settings. Any options that were set in the Advanced option will also be reset. To undo this action, you can click Undo in the top menu. If your changes have already been saved, you must change the Advanced options in Tableau Desktop and republish the view. Configure Color Effects Click the Color drop down on the Marks card to configure additional Color settings not related to the actual colors shown. Tableau Desktop version Web version Opacity Modify the opacity of marks by moving the slider. Adjusting opacity is especially useful in dense scatter plots or when you are looking at data overlaying a map or background image. As you slide the slider toward the left, marks become more transparent. Mark borders By default, Tableau displays all marks without a border. You can turn on mark borders for all mark types except text, line, and shape. On the Color drop-down control, select a mark border color. Tableau Desktop version Web version Borders can be useful for visually separating closely spaced marks. For example, the views below show a scatterplot with mark borders turned on (left) and turned off (right). When borders are turned on, marks are easier to distinguish in areas where they are tightly clustered. Note: You can also use the opacity setting to show the density of marks. When you are viewing a large number of color-encoded small marks, it is usually better to leave mark borders off. Otherwise borders can dominate the view, making it difficult to see the color encoding. For example, the views below show bars that are segmented by a large number of color-encoded dimension members. With mark borders  turned on (right), some of the narrower marks are difficult to identify by color. With borders  turned off (left), the marks are easy to distinguish. Mark halos To make marks more visible against a background image or map, surround each mark with a solid contrasting color called a halo. Mark halos are available when you have a background image or a background map. On the Color drop-down control, select a mark halo color. Markers In Tableau Desktop, when you are using the Line mark type, you can add a marker effect to show or hide points along the line. You can show selected points, all points, or no points. On the Color drop-down control, select a marker in the Effects section. Note : This option is not currently available in Tableau Server or Tableau Cloud. Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,3.4.2. Add custom shapes and color palettes,https://help.tableau.com/current/pro/desktop/en-us/viewparts_marks_markproperties.htm,"Control the Appearance of  Marks in the View Applies to: Tableau Desktop Control color, size, shape, detail, text, and tooltips for marks in the view using the Marks card. Drag fields to buttons on the Marks card to encode the mark data. Click the buttons on the Marks card to open Mark properties. For related information on marks, see Change the Type of Mark in the View and Marks card . Note : The order of dimension fields on the Marks card is hierarchical from top to bottom, and affects sorting in the view. Tableau first considers the topmost dimension field when ordering marks in the view, and then considers the dimensions beneath it on the Marks card. Assign colors to marks To assign a color to marks in the view, do one of the following: On the Marks card, click Color , and then select a color from the menu. This updates all marks in the view to the color you choose. All marks have a default color, even when there are no fields on Color on the Marks card. For most marks, blue is the default color; for text, black is the default color. From the Data pane, drag a field to Color on the Marks card. Tableau applies different colors to marks based on the field’s values and members. For example, if you drop a discrete field (a blue field), such as Category, on Color, the marks in the view are broken out by category, and each category is assigned a color. If you drop a continuous field, such as SUM(sales), on Color, each mark in the view is colored based on its sales value. Edit colors To change the color palette or customize how color is applied to your marks: On the Marks card, click Color > Edit Colors . For more information, see Color Palettes and Effects . Change the size of marks To change the size of marks in the view, do one of the following: On the Marks card, click Size , and then move the slider to the left or right. The Size slider affects different marks in different ways, as described in the following table. Mark Type Description Circle, Square, Shape, Text Makes the mark bigger or smaller. Bar, Gantt Bar Makes bars wider or narrower. Line Makes lines thicker or thinner. Polygon You cannot change the size of a polygon. Pie Makes the overall size of the pie bigger and smaller. The size of your data view is not modified when you change marks using the Size slider. However, if you change the view size, the mark size might change to accommodate the new formatting. For example, if you make the table bigger, the marks might become bigger as well. From the Data pane, drag a field to Size on the Marks card. When you place a discrete field on Size on the Marks card, Tableau separates the marks according to the members in the dimension, and assigns a unique size to each member. Because size has an inherent order (small to big), categorical sizes work best for ordered data like years or quarters. Size-encoding data with a discrete field separates the marks in the same way as the Detail property does, and then provides additional information (a size) for each mark. For more information, see Separate marks in the view by dimension members . When you add categorical size encoding to a view, Tableau displays a legend showing the sizes assigned to each member in the field on the Size target. You can modify how these sizes are distributed using the Edit Sizes dialog box. When you place a continuous field on Size on the Marks card, Tableau draws each mark with a different size using a continuous range. The smallest value is assigned the smallest sized mark and the largest value is represented by the largest mark. When you add quantitative size encoding to the view, Tableau displays a legend showing the range of values over which sizes are assigned. You can modify how these sizes are distributed using the Edit Sizes dialog box. Edit marks sizes To edit the size of marks, or change how size is being applied to marks in the view: On the Size legend card (which appears when you add a field to Size on the Marks card), click the drop-down arrow in the right-hand corner and select Edit Sizes . For more information about legends, see Legends . In the Edit Sizes dialog box that appears,  make your changes and then click OK . The options available depend on whether the field being applied to Size is a continuous or discrete field. For continuous fields, you can do the following: For Sizes vary , click the drop-down box and select one of the following: Automatically - Selects the mapping that best fits your data. If the data is numeric and does not cross zero (all positive or all negative), the From zero mapping is used. Otherwise, the By range mapping is used. By range - Uses the minimum and maximum values in the data to determine the distribution of sizes. For example, if a field has values from 14 to 25, the sizes are distributed across this range. From zero - Sizes are interpolated from zero, assigning the maximum mark size to the absolute value of the data value that is farthest from zero. Use the range slider to adjust the distribution of sizes. When the From zero mapping is selected from the Sizes vary drop-down menu, the lower slider is disabled because it is always set to zero. Select Reversed to assign the largest mark to the smallest value and the smallest mark to the largest value. This option is not available if you are mapping sizes from zero because the smallest mark is always assigned to zero. To modify the distribution of sizes, select the Start value in legend and End value for range check boxes and type beginning and end values for the range. For discrete fields, you can do the following: Use the range slider to adjust the distribution of sizes. Select Reversed to assign the largest mark to the smallest value and the smallest mark to the largest value. Continuous axis mark sizing For views where the mark type is Bar and there are continuous (green) fields on both Rows and Columns , Tableau supports additional options and defaults for sizing the bar marks on the axis where the bars are anchored. The bar marks in histograms are continuous by default (with no spaces between the marks), and are sized to match the size of the bins. See Build a Histogram for an example. When  there is a field on Size , you can determine the width of the bar marks on the axis where the bars are anchored  by using the field on Size . To do this, click the Size card and select Fixed . When there is no field on Size , you can specify the width of the bar marks on the axis where the bars are anchored in axis units. To do this, click the Size card, choose Fixed , and then type a number in the Width in axis units field. When there is a continuous date field on the axis where the bars are anchored, the width of the marks is set to match the level of the date field. For example, if the level of the continuous date field is MONTH, the bars are exactly one month wide—that is, slightly wider for 31-day months than for 30-day months. You can configure the width of the bars by clicking the Size card, choosing Fixed , and then typing a number in the Width in days field, but the resulting bar widths don't take into account  the varying lengths of time units such as months and years. Add labels or text for marks To add mark labels or text to the visualization: From the Data pane, drag a field to Label or Text on the Marks card. When working with a text table, the Label shelf is replaced with Text, which allows you to view the numbers associated with a data view. The effect of text-encoding your data view depends on whether you use a dimension or a measure. Dimension – When you place a dimension on Label or Text on the Marks card, Tableau separates the marks according to the members in the dimension. The text labels are driven by the dimension member names. Measure – When you place a measure on Label or Text on the Marks card, the text labels are driven by the measure values. The measure can be either aggregated or disaggregated. However, dis-aggregating the measure is generally not useful because it often results in overlapping text. Text is the default mark type for a text table, which is also referred to as a cross-tab or a PivotTable. Separate marks in the view by dimension members To separate marks in the view (or add more granularity): From the Data pane, drag a dimension to Detail on the Marks card. When you drop a dimension on Detail on the Marks card, the marks in a data view are separated according to the members of that dimension. Unlike dropping a dimension on the Rows or Columns shelf, dropping it on Detail on the Marks card is a way to show more data without changing the table structure. Add tooltips to marks Tooltips are details that appear when you hover over one or more marks in the view. Tooltips are also convenient for quickly filtering or removing a selection, or viewing underlying data. You can edit a tooltip to include both static and dynamic text. You can also modify which fields are included in a tooltip and whether you want to be able to use those fields to select marks in the view. For details on showing a visualization from a worksheet in a tooltip (Viz in Tooltip), Create Views in Tooltips (Viz in Tooltip) . Add a tooltip Drag a field to Tooltip on the Marks card. Click Tooltip on the Marks card to open the Edit Tooltip dialog box, where you can add text, rearrange the tooltip contents, and insert more fields. Note: Dimensions are added to the tooltip using the ATTR aggregation, which means the tooltip may sometimes display as an asterisk. The asterisk indicates that there are multiple dimension members that apply to the mark you are pointing at. For example, a mark may represent the aggregated sales for all regions. Adding the Region field to the tooltip results in an asterisk because the mark represents more than one region. To avoid showing an asterisk, add the dimension to Detail on the Marks card or use it elsewhere in the view to ensure the marks are at the same level of detail. Tooltip options After you open the Edit Tooltip dialog box, there are several options that you can choose from to format the tooltips in your view and configure their behavior. You can choose from the options below. Format tooltips: Tooltips are specified on a per-sheet basis and can be formatted using the tools on the top of the Edit Tooltip dialog box. Adding dynamic text: Use the Insert menu at the top of the dialog box to add dynamic text such as field values, sheet properties, and more. The All Fields command on the Insert menu adds all field names and values that are used in the view to the tooltip for any mark in the view. Show tooltips: Tooltips are shown by default. If you prefer to hide automatic tooltips, clear the Show Tooltips check box. Configure tooltip behavior: Configure how tooltips behave by selecting one of the following options in the drop-down list next to the Show Tooltips check box: Responsive - Show tooltips instantly : Select this option to show tooltips instantly  as you move the cursor over the marks in the view. This is the default for all views. With this option,  tooltips appear without command buttons. You must first click a mark in the view  to see the command buttons. On Hover - Show tooltips on hover : Select this option to show tooltips only after you rest the cursor on a mark. However, with this option, command buttons appear on the tooltip without any further action from you (unless you specify otherwise in the Edit Tooltips dialog box). Show commands: Select the Include command buttons check box to add Keep Only , Exclude , Group Members , Create Set and View Data buttons at the top of the tooltip. These buttons show both in Tableau Desktop and when the view is published to the web or viewed on a mobile device. For more information about grouping members, see Correct Data Errors or Combine Dimension Members by Grouping Your Data . For more information about creating sets, see Create Sets (Link opens in a new window) . Select marks in a view from the tooltip . Select the Allow selection by category check box to  be able to select marks in a view that have the same value by clicking on a discrete field in a tooltip. If this check box is selected, you can use this feature to select marks in a view  in Tableau Desktop, when the view is published to the web or viewed on a mobile device. Add or remove fields: To add and remove fields when using the automatic tooltip, right-click (control-click on Mac) the field on one of the shelves in the view and select Include in Tooltip . Note: The Include in Tooltip option is only available if you have not customized the tooltip. If you have customized the tooltip, you can return to the automatic tooltip by clicking Tooltip on the Marks card and then clicking Reset in the Edit Tooltip dialog box. Change the shape of marks To change the shapes of marks: From the Data pane, drag a field to Shape on the Marks card. When you place a dimension on Shape on the Marks card, Tableau separates the marks according to the members in the dimension, and assigns a unique shape to each member. Tableau also displays a shape legend, which shows each member name and its associated shape. When you place a measure on Shape on the Marks card, the measure is converted to a discrete measure. Shape-encoding data separates the marks in the same way as the Detail property does, and then provides additional information (a shape) for each mark. Shape is the default mark type when measures are the inner most fields for both the Rows shelf and the Columns shelf. In the view below, the marks are separated into different shapes according to the members of the Customer Segment dimension. Each shape reflects the customer segment’s contribution to profit and sales. Edit shapes By default, ten unique shapes are used to encode dimensions. If you have more than 10 members, the shapes repeat. In addition to the default palette, you can choose from a variety of shape palettes, including filled shapes, arrows, and even weather symbols. Click Shape on the Mark s card, or select Edit Shape on the legend’s card menu. In the Edit Shape dialog box, select a member on the left and then select the new shape in the palette on the right. You can also click Assign Palette to quickly assign the shapes to the members of the field. Select a different shape palette using the drop-down menu in the upper right. Note: Shape encodings are shared across multiple worksheets that use the same data source. For example, if you define Furniture products to be represented by a square, they will automatically be squares in all other views in the workbook. To set the default shape encodings for a field, right-click (control-click on Mac) the field in the Data pane and select Default Properties > Shape . Use Custom shapes You can add custom shapes to a workbook by copying shape image files to the Shapes folder in your Tableau Repository, which is located in your Documents folder. When you use custom shapes, they are saved with the workbook. That way the workbook can be shared with others. Create your shape image files. Each shape should be saved as its own file and can be in any of several image formats including bitmap (.bmp), portable network graphic (.png), .jpg, and graphics interchange format (.gif). Copy the shape files to a new folder in the My Tableau Repository\Shapes folder in your Documents folder. The name of the folder will be used as the name of the palette in Tableau. In the example below, two new palettes are created: Maps and My Custom Shapes. In Tableau, click the drop-down arrow on the shape legend, and select Edit Shape . Select the new custom palette in the drop-down list. If you modified the shapes while Tableau was running, you may need to click Reload Shapes . You can either assign members shapes one at a time, or click Assign Palette to automatically assign the shapes to the members. Note: You can return to the default palette by clicking the Reset button. If you open a workbook that uses custom shapes that you don’t have, the workbook will show the custom shapes because the shapes are saved as part of the workbook. However, you can click Reload Shapes in the Edit Shapes dialog box to use the ones in your repository instead. Below are some examples of views that use both the default and custom shape palettes. Tips for creating custom shapes When you create custom shapes there are a few things that you can do to improve how your shapes look and function in the view. If you are creating your own shapes, we recommend following general guidelines for making icons or clip art. Suggested size - Unless you plan on using Size to make the shapes really large, you should try to make your original shape size close to 32 pixels by 32 pixels. However, the original size depends on the range of sizes you want available in Tableau. You can resize the shapes in Tableau by clicking Size on the Marks card, or by using the cell size options on the Format menu. Adding color encoding - If you plan to also use Color to encode shapes, you should use a transparent background. Otherwise, the entire square of the image will be colored rather than just the symbol. GIF and PNG file formats both support transparency. GIF files support transparency for a single color that is 100% transparent, while PNG files support alpha channels with a range of transparency levels available on every pixel in the image. When Tableau color encodes a symbol, the amount of transparency for each pixel won't be modified, so you can maintain smooth edges Note : Avoid including too much transparency around an image. Make the size of the custom shape as close to the size of the image as possible. Extra transparent pixels around the edges of the image can negatively effect the hover or click behavior near the image, especially when custom shapes overlap each other. When the actual shape area is bigger than what is visible, it can make hovering and clicking the shape more difficult and less predictable for users. File formats - Tableau doesn't support symbols that are in the Enhanced Meta File format (.emf). The shape image files can be in one of the following formats: .png, .gif, .jpg, .bmp, and .tiff. Draw paths between marks The Path property is available when the Line or Polygon mark type is selected in the Marks card drop-down menu. For more information about how to change the type of mark displayed in your viz, see Change the Type of Mark in the View . You can use the Path property in the Marks card to change the type of line mark (linear, step, or jump) , or to encode data by connecting marks using a particular drawing order . You can path-encode your data using either a dimension or a measure. Dimension – When you place a dimension on Path on the Marks card, Tableau connects the marks according to the members in the dimension. If the dimension is a date, the drawing order is driven by the date order. If the dimension includes words such as customer names or product types, the drawing order is driven by the order of the members in the data source. You can change the order that data points are connected by changing the sort order of the members. For more information, see Sort Data in a Visualization (Link opens in a new window) . Measure – When you place a measure on Path on the Marks card, Tableau connects the marks according to the values of the measure. The measure can be aggregated or disaggregated. Change the line type (linear, step, jump) When the mark type is set to be a line (Automatic or Line), you can click the Path property in the Marks card to change the line type. Use these line types for numeric data that remains constant for periods of time, with noticeable changes or deltas – such as account balances, inventory levels, or interest rates. Step lines work well for emphasizing the magnitude of change. Jump lines help to emphasize the duration of change between data points. Click Path in the Marks card. Select Linear , Step , or Jump to change the line type. Change the line pattern (solid, dashed, dotted) Starting in Tableau 23.2, when the mark type is set to be a line (Automatic or Line), you can click the Path property in the Marks card to change the line pattern. Use different line patterns to help differentiate secondary measures. For example, when you want to highlight actual values vs baseline metrics. Line Patterns are helpful when indicating that specific lines are thresholds (such as goals and limits) and other measures are less certain (such as a forecast or modeled data). Line patterns soften the visual weight of a line and can help certain trends from being the primary focus when comparing multiple trends against one another. Click Path in the Marks card. Select Solid line , Dashed line , or Dotted line to change the line pattern. Note: Dashed and dotted line patterns aren't compatible with continuous size encoding. If you have a mark set to change size or thickness based on a quantitative value, you must use a solid line pattern. Create a path-encoded view To create a useful path-encoded view, your data table should contain at least one measure. You can't create a path that connects only categorical data (dimensions). The view below was created using storm data from the Atlantic basin in 2010. The view uses line marks with the path determined by the date of the storm. This lets you see the path of the storm. By placing the continuous date on Path on the Marks card, this tells Tableau to draw the lines  in chronological order. For more information, see Create Maps that Show a Path Over Time in Tableau and Create Maps that Show Paths Between Origins and Destinations in Tableau . Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,3.4.3. Add annotations,https://help.tableau.com/current/pro/desktop/en-us/annotations_annotations_add.htm,"Add Annotations Applies to: Tableau Desktop You can add annotations to a visualization to call out a specific mark, a specific point, such as a location on a map, or an area, such as a cluster of scatter marks. Note : In web authoring, you can create and delete annotations by right-clicking the view (in a worksheet or dashboard), and then selecting point or mark annotation. Right-click the annotation again to edit or remove the annotation. Formatting and moving annotations are not currently supported on the web. To add and format other text elements on a visualization, see Format Titles, Captions, Tooltips, and Legends . Add an annotation To add an annotation to your viz: In a worksheet, right-click (control-click on Mac) a data point or a spot on the viz where you want to add an annotation and select Annotate , and then select the type of annotation you want to add. There are three types of annotations in Tableau: Mark - select this option to add an annotation that is associated with the selected mark. This option is only available if a data point (mark) is selected. Point - select this option to annotate a specific point in the view. Area - select this option to annotate an area in the viz, such as a cluster of outliers or a targeted region. In the Edit Annotation dialog box that opens, type the text you want to show in the annotation. Use the Insert menu to insert dynamic variables into the annotation text. For example, the annotation can display data values that update as the underlying data changes. The dynamic variables that are available are dependent on whether you are annotating a mark, point, or area. When finished, click OK . The viz updates with your annotation. Edit an annotation To edit an annotation: Right-click (control-click on a Mac) the annotation in the viz and select Edit . In the Edit Annotation dialog box that opens, edit the annotation text and then click OK . Rearrange an annotation After you add an annotation, you can move it around, resize it, adjust the line, and move the text. Each type of annotation can be rearranged and modified in different ways. This section discusses how to rearrange, resize, and modify each type of annotation. Mark annotations When you select a mark annotation the body and line are selected and several resize handles display. Use these handles to resize the body and line. To reposition the body Click and drag the body of the selected annotation to a new position. To resize the body Click and drag the body resize handle left and right. The text and height are automatically adjusted to fit the width of the body. To resize the line Click and drag the line resize handle Point Annotations A point annotation marks a specific point in the view, such as a reference line or a value on an axis. Point annotations display as text with a line. When you select a point annotation, several resize handles display. Use these handles to reposition and resize the body and line. To reposition the body: Click and drag the body of the selected annotation to a new position. As you move the body, the line is automatically resized so that it continues to point at the specific point you selected. To resize the body: Click and drag the side resize handles left and right. The text and height are automatically adjusted to fit the width of the body. To move the line end point: Click and drag the end point of the line so that it points at a new location. Area Annotations An area annotation is a way to highlight or call out an area in the view. Area annotations are not associated with any particular mark, in fact, these annotations are commonly used to call out several marks. When you select an area annotation, several resize handles and two text handles display. Use these handles to reposition and resize the box and text. To reposition the box Click and drag the box of the selected annotation to a new position. To resize the box Click and drag one of the box resize handles To reposition the text Click and drag the center text handle to a new position. To resize the text width Click and drag the right text handle left and right. The text height is automatically adjusted to fit the width. Format annotations You can modify the text, body, and line of an annotation. For example, you can specify whether the body should be a box, a single edge, or not shown at all. Additionally, you can specify whether the lines on mark and point annotations end with an arrow, dot, or a simple line. To format annotations: Select one or more annotations, right-click (control-click on Mac) one of the selected annotations, and then select Format . The Format pane opens on the left-side of the workspace, over the Data pane. In the Format pane, use the drop-downs to specify font properties, text alignment, line style, and shading. Remove an annotation To remove annotations from the viz: Select one or more annotations in the viz. Right-click (control-click on Mac) one of the selected annotations and select Remove . See Also Show, Hide, and Format Mark Labels (Link opens in a new window) Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,3.4.4. Add tooltips,https://help.tableau.com/current/pro/desktop/en-us/formatting_specific_titlecaption.htm,"Format Titles, Captions, Tooltips, and Legends Applies to: Tableau Cloud, Tableau Desktop, Tableau Server There are several ways text can appear on a sheet. You can show titles and captions on any sheet. Another option is to Add tooltips to marks . A legend card appears in the worksheet when you encode marks by dropping them on the Color or Size cards. It’s also possible to Add Annotations for a mark, point, or area in the view. These text elements can be customized for text properties like size, color, alignment, and font, as well as element properties like shading and borders. Note : Some of these formatting options are only available in Tableau Desktop. Some parts of the view have their own formatting and editing controls, such as an axis (Link opens in a new window) , and the text (Link opens in a new window) like labels and headers. Show titles and other text elements Titles and captions If a title or caption isn't showing, open the Worksheet menu and select Show Title or Show Caption . For dashboards and stories, there are equivalent options in their respective menus (such as Dashboard> Show Title). There is also a check box to toggle the dashboard or story title on or off, available in the left-hand pane. Legends and other elements By default, a legend card is created whenever a field is encoded by color, size, or shape. If a legend is removed or hidden, however, it can be brought back. Open  the Analysis menu > Legends and select the desired option. Only legends that are relevant to the view can be selected. That is, if nothing is on the Size shelf, the size legend cannot be turned on. On Worksheets These items can also be toggled by  right-clicking anywhere in the grey area of the sheet, such as under the Marks card. For more information about adding elements such as legends, filters, and parameter controls to a worksheet, see Additional Shelves, Legends, Cards, and Controls . Edit titles and captions On a worksheet, hover on the title, click the drop-down arrow on the right-hand side and select Edit Title or Edit Caption from the context menu. Alternatively: Right-click (control-click on Mac) the item you want to change and select Edit . In web editing, double click the worksheet title. Note that captions and legend titles cannot be edited in web editing In the Edit Title dialog box, modify the text and format the font, size, style, color, and alignment. If desired, use the Insert menu 			to add dynamic text such as sheet properties and field values. To reset a title or caption back to the default, click Reset . Format titles and captions For information on showing or hiding a title, see Titles . On a worksheet, right-click (control-click on Mac) the title, caption, or legend and select Format <item> —for example, Format Title . In the Format pane, use the drop-down lists to change the default shading or border. Edit dashboard titles For information on showing or hiding a title, see Titles . On a dashboard, double-click the title. In the Edit Title dialog box that appears, format the title as you like. You can enter a new title for the dashboard or a description, as well as change the font type, size, emphasis, color, and alignment. You can also type in a website URL and Tableau will automatically create a hyperlink. Note : If you edit the hyperlink, make sure to delete the entire hyperlink and then reenter the new one. If you do not do this, the text of the hyperlink will update, but the URL path will not. When finished, click OK . The dashboard title updates with the changes. Format tooltips Tooltips are details that appear when 			you rest the pointer over one or more marks in the view. Tooltips 			also offer convenient tools to quickly filter or remove a selection, select marks that have the same value 		or view underlying data. For more information on tooltips, see Tooltips . To show a visualization  in a tooltip, see Create Views in Tooltips (Viz in Tooltip) . You can edit the tooltip to include both 			static and dynamic text. You can also modify which fields are included 		in the automatic tooltip. On the Marks card select Tooltip . Tooltips are specified 				for each sheet and can be formatted using the formatting tools along 			the top of the Edit Tooltip dialog box. Use the Insert menu at the 				top of the dialog box to add dynamic text such as field values, 			sheet properties, and more. Use the formatting tools along the top of the Edit Tooltip dialog box. There are several optional customizations as well. Dynamic text values Use the Insert drop-down list at the 			top of the dialog box to add dynamic text such as field values, 		sheet properties, and more. The All Fields option on the Insert menu adds all field names 			and values that are used in the view. Inserting the All Fields parameter 			updates the tooltip as you change the view. You 			can also use the All Fields option to exclude fields. Command buttons Select the Include command buttons option 		to show filtering and view data options in the tooltip. For example, 			including command buttons will add Keep Only , Exclude , and View 			Data buttons to the tooltip. These command buttons 			are available both in Tableau Desktop and when the view is published 			to the web or viewed on a mobile device. Unchecking Include command buttons will also hide the aggregation summary if multiple marks are selected. Selection by category Select the Allow selection by category check box to select marks in a view that have the same value by clicking on a discrete field in a tooltip. For more information see Tooltips . Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,3.4.5. Apply padding,https://help.tableau.com/current/pro/desktop/en-us/dashboards_organize_floatingandtiled.htm,"Size and Lay Out Your Dashboard Applies to: Tableau Cloud, Tableau Desktop, Tableau Server After you create a dashboard, you can  resize and reorganize it to work better for your users. Control overall dashboard size A best practice  is to start with setting the size so any layout work starts at the correct size. Dashboard size options Fixed size (default) : The dashboard remains the same size, regardless of the size of the window used to display it. If the dashboard is larger than the window, it becomes scrollable. You can pick from a preset size or specify a custom size. Fixed size dashboards let you specify the exact location and position of the content on the dashboard, which can be useful if there are floating objects. Published dashboards that use a fixed size can load faster  because they're more likely to use a cached version on the server. For other performance tips, see Optimize Workbook Performance . Range : The dashboard scales between the minimum and maximum sizes that you specify. If the window used to display the dashboard is smaller than the minimum size, scroll bars are displayed. If it's larger than the maximum size, white space is displayed. Use this setting when you're designing for two different display sizes that need the same content and have similar shapes—such as  small- and medium-sized browser windows. Range also works well for mobile dashboards with vertical layouts. (The width is allowed to change  for different mobile device widths, but the height is fixed for vertical scrolling.) Automatic : The dashboard automatically resizes to fill the window used to display it. Use this setting if you want Tableau to take care of any resizing. For best results, use a tiled (rather than floating) dashboard layout. Automatic sizing can lead to unpredictable results on different screens, so use this setting with caution if you don't know where the dashboard will be consumed. Dashboards with variable sizes must be freshly rendered for every browser request, which can have a performance impact. Tip: If you use Tableau Desktop, see Create Dashboard Layouts for Different Device Types to create unique layouts optimized for desktop computers, tablets, and phones. In addition to adapting to different screen sizes, each device layout can contain different items. Set overall dashboard size Under Size on the Dashboard pane, select the dashboard's dimensions (such as Desktop Browser ) or sizing behavior (such as Fixed size ). Group items using layout containers Layout containers let you group related dashboard items together so you can quickly position them. As you change the size and placement of items inside a container, other container items  automatically adjust. Layout containers can also be used for formatting. Layout container types A horizontal layout container resizes the width of the views and objects it contains; a vertical layout container adjusts height. Horizontal layout container The two views are arranged in a horizontal layout container. Vertical layout container The three views are stacked in a vertical layout container. Add a layout container Under Objects on the Dashboard pane, select Horizontal or Vertical . Drag the container to the dashboard. Add views and objects to the layout container. Evenly distribute a layout container's items Select the layout container. If you have trouble making the selection, select an individual item within the container and choose Select Container from its shortcut menu. With the layout container selected, choose Distribute Evenly from its shortcut menu: Items that are already within the layout container arrange themselves evenly;  any items you add do the same. Automatically resize sheets in layout containers If you add multiple sheets with related data to a layout container, whenever marks are selected in one sheet, you can automatically resize related sheets. In this example, when a mark is selected in the map, the bar chart updates to display profit and sales for that mark. When no marks are selected in the map, it automatically expands to fill the layout container. With mark selected Without a selection Add multiple sheets with related data to a layout container. From the drop-down menu of the sheet you want to expand, choose Use as Filter . Choose Dashboard > Actions , and double-click the generated filter you created. In the Target Sheets section of the Edit Filter Action dialog box, select the other sheets in the layout container. To control how target sheets resize when no marks are selected in the source sheet, select one of the following: Show all values returns target sheets to their original size, showing all data. Exclude all values collapses target sheets under their titles, hiding all data. Remove a layout container to independently edit items it contains Select the container either on the dashboard or in the Item hierarchy area of the Layout pane. From the drop-down menu at the top of the container, select Remove Container . Tile or float dashboard items Tiled vs. floating layouts Each object, layout container, and view that you place on a dashboard is either tiled (the default) or floating. Tiled layout Floating layout Tiled items don't overlap; they become part of a single-layer grid that resizes based on the overall dashboard size. Floating items can be layered over other objects. In the example below, a map floats over tiled views. For best results, give floating objects and views a fixed size and position on a fixed size dashboard. Float or tile  a new item Under Objects in the Dashboard pane, click the layout option you want to use: Floating or Tiled . Drag the view or object onto the dashboard on the right. Tip : You can also assign a floating layout to an item by holding down Shift on  your keyboard as you drag it onto the dashboard. Switch an existing item from tiled to floating Select the item in the dashboard. In the item's shortcut menu, select Floating : Size, position, reorder, and rename individual dashboard items Set an item's size and position If you want a high degree of control over the placement, choose Fixed size then set each item's size and position  using the Layout pane. Select the dashboard item you want to position and size. In the Layout pane, the item's name appears under Selected item . Tip: To quickly switch between the Dashboard and Layout panes, press the T key. Define the item's position x and y position in pixels as an offset from the top-left corner of the dashboard.  For example, to place an object in the top-left corner of the dashboard, specify x = 0 and y = 0. The values you enter can be positive or negative but must be whole numbers. To resize an item, click and drag it in the dashboard. You can also use the settings under Size . To hide the title of the item you’ve selected, clear the Show title check box. (The similar Show dashboard title check box on the Dashboard pane controls the overall dashboard title.) Tip: To quickly position floating items, press arrow keys to move 1 pixel, or Shift+arrow keys to move 10 pixels. To quickly resize items, add Alt (Windows) or Option (macOS) to these shortcuts. Align items with a grid To present a visually consistent design, arrange and size dashboard items over a grid. Choose Dashboard > Show Grid . To change the grid size, choose Dashboard > Grid Options . Tip: To quickly switch the grid on and off, press the G key. Reorder objects The Item hierarchy area on the Layout pane lets you quickly change how objects are layered and grouped on your dashboard. Items at the top of the list appear in the front, while items at the bottom appear in back. Reorder any object in Tableau Cloud or Tableau Server In Tableau Cloud and Tableau Server, you can reorder both tiled and floating objects in the hierarchy. You can also drag items both within their current containers, and into other containers at any level. This lets you nest items with more flexibility than editing on the canvas, which limits you to placing objects in the innermost container. Reorder floating objects in Tableau Desktop In Tableau Desktop, you can drag floating items at the top level of the hierarchy to change how they layer over each other. Rename items To better distinguish between dashboard items, you can rename them. In the Item hierarchy area of the Layout pane, right-click an item, and choose Rename Dashboard Item . On the dashboard itself, this command is also available from the drop-down menu for each object. Add padding, borders, and background colors around items Padding lets you precisely space items on the dashboard, while borders and background colors let you visually highlight them. Inner padding sets the spacing between item contents and the perimeter of the border and background color; outer padding provides more spacing beyond the border and background color. Note: If you can't change the border or background color for a particular dashboard item, change its formatting at the worksheet level . A. Outer padding B. Blue border C. Inner padding with light blue background Select an individual item, or your entire dashboard. On the Layout tab at left, specify border style and color, background color and opacity, or padding size in pixels. Here are some handy dashboard spacing tips: To precisely align one dashboard item with another, deselect All sides equal , and adjust padding for only one side. To create seamless designs, specify zero outer padding for adjoining items. Visually integrate elements with transparency Transparent elements create a seamless visual look for your dashboards, revealing underlying objects and images. Tip: To create a background image that shows through floating transparent elements, add an image object as the only tiled item. Fixed-size dashboards ensure that the floating elements maintain a consistent visual relationship with the image, regardless of screen size. Make worksheet backgrounds transparent In your dashboard, select the sheet. Choose Format > Shading , click the Worksheet menu, and choose None for the background color. If the sheet appears opaque, change the background color  to None for the underlying dashboard, object, or layout container. You can quickly adjust these items  on the Layout tab for the dashboard. To smoothly integrate the transparent sheet with other dashboard items, choose Format > Borders and Format > Lines , and either remove borders and lines or change their colors. More steps for transparent maps Choose Format > Shading , click the Pane menu, and choose None for the color. Choose Map > Map Layers , and deselect the opaque Base layer. Then, to make transparent maps more distinct when zoomed out, select the Coastline layer. Depending on the map style, you may also need to experiment with turning other layers on or off. Make a sheet partially transparent In the Layout pane for the dashboard, select the sheet. Click the Background color, and set the color and opacity. Float transparent legends, filters, highlighters, and parameters To visually connect filters, parameters, and highlighters to related data, float these items, which are transparent by default. Text always remains fully opaque, maintaining legibility. If a floating object continues to display a color, check these object- and worksheet-level settings: Select the object, and on the Layout tab, click the Background color, and choose None . Click the Format menu, and then choose Legends , Filters , Highlighters , or Parameters . Then, in the Format pane at left, choose Shading > None . For more information, see Format at the Worksheet Level . Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,"3.4.6. Remove gridlines, row-level and column-level bands, and shading",https://help.tableau.com/current/pro/desktop/en-us/formatting_worksheet.htm,"Format at the Worksheet Level Applies to: Tableau Cloud, Tableau Desktop You can format settings for fonts, alignment, shading, borders, lines and tooltips at the worksheet level. For example, you might want to remove all the borders in a text table, or add shading to every other column in a view. When you make formatting changes at this level, they apply only to the view you're working on. See Format at the Workbook Level for how to make changes that apply to every view in your workbook. Access worksheet formatting settings from Tableau Desktop Are you formatting your worksheets on the web? See Access worksheet formatting settings from Tableau Cloud Display a worksheet or dashboard. From the Format menu, choose the part of the view that you want to format, such as Font , Borders , or Filters . Format fonts For a view, you can specify the font, style, size, and color for either the pane text or header text, or both. For example, in the view below, the header text is set to use the Tableau Bold font. If you have totals or grand totals in the view, you can specify special font settings to make these values stand out from the rest of the data. This is particularly useful when you are working with a text table. The view below shows a text table in which the grand totals are formatted to be  dark red. Format text alignment Tableau uses visual best practices to determine how text is aligned in a view, but you can also customize text. For example, you can change the direction of header text so that it is horizontal (normal) instead of vertical (up). Note : Tableau adheres to regional standards when determining when to begin or end line breaks. Click the image to replay it. For each  text area you can specify the following alignment options: Horizontal - Controls whether text aligns to the left, right, or center. Vertical Alignment - Controls whether text aligns at the top, middle, or bottom. Direction - Rotates text so that it runs horizontally (normal), top-to-bottom (up), or bottom-to-top (down). Wrap - Controls whether long headers wrap to the next line or are abbreviated, but does not control text marks. Note: If cells are not large enough to show more than one row of text, turning on wrapping will have no visible effect. If this happens, you can hover the cursor over a cell until  a double-sided arrow appears, and then click and drag down to expand the cell size. Format shading Shading settings control the background color of the pane and headers for totals, grand totals, as well as for the worksheet areas outside those areas. You can also use shading to add banding , alternating color from row to row or column to column. Banding is useful for text tables because the alternating shading helps  your eye distinguish between consecutive rows or columns. Click the image to replay it. For row and column banding, you can use the following options: Pane and Header - The color the bands use. Band Size - The thickness of the bands. Level - If you have nested tables with multiple fields on the rows and columns shelves, this option allows you to add banding at a particular level. Format borders Borders are the lines that surround the table, pane, cells, and headers in a view. You can specify the border style, width, and color for the cell, pane, and header areas. Additionally, you can format the row and column dividers. For example, in this view the Row Divider borders are formatted to use an orange color: Row and column dividers serve to visually break up a view and are most commonly used in nested text tables. You can modify the style, width, color, and level of the borders that divide each row or each column using the row and column divider drop-downs. The level refers to the header level you want to divide by. Format lines You can control the appearance of the lines that are part of the view, such as grid lines and zero lines, as well as lines that help you inspect data, such as trend lines, reference lines, and drop lines. For example, you can set trend lines to use a red color and an increased thickness: Format highlighters The highlighter on your worksheet can be formatted to use a different font, style, color, background color, font size, and border. Formatting highlighters allows you to better integrate them into your dashboard or worksheet style.  You can also edit the title that displays on each highlighter that shows in the view. For more information about using highlighters, see Highlight Data Points in Context . Format a filter card Filter cards contain controls that let users interact with your view. You can change filter cards to use custom formatting. For example, the body text in the filters below is formatted to use the Tableau Bold font, in aqua. Note: For filters and parameters, title formatting appears only on dashboards or in views  published to the web. Format a parameter control card Parameter controls are similar to filter cards in that they contain controls that let users modify the view. If you create a parameter control, you can customize how it looks. For example, in the view below, the Sales Range parameter is formatted so that the sales amount appears in orange. Copy and paste worksheet formatting (Tableau Desktop only) After you format a worksheet, you can copy its formatting settings and paste them into other worksheets. The settings that you can copy are anything you can set in the Format pane, with the exception of reference lines and annotations. Adjustments like manual sizing and level of zoom are not copied. Select the worksheet from which you want to copy formatting. Right-click (control-click on Mac) the worksheet tab and select Copy Formatting . Select the worksheet you want to paste the formatting into. Right-click (control-click on Mac) the worksheet tab and select Paste Formatting . Access worksheet formatting settings from Tableau Cloud Are you formatting your worksheets on Tableau Desktop? See Access worksheet formatting settings from Tableau Desktop . Display a worksheet. From the toolbar, click Format > Worksheet , and then choose the part of the view that you want to format, such as Font, Lines, or Borders and Dividers. Format fonts For a view, you can specify the font, style, size, and color for your worksheet, pane, header (columns and rows together or separate), and title. In this example, the pane is set to use  Tableau Bold, the row header is set to Tableau Medium, the column header is set to Tableau Regular, and the title is set to the Tableau Light font. Rotate labels Tableau uses visual best practices to determine how label text is aligned in a view, but you can also customize your alignment. For example, you can change the direction of label text so that it’s horizontal (left to right) or vertical (up and down). To rotate your labels, right-click (control-click on Mac) on a label and select Rotate Labels . Note: Tableau adheres to regional standards when determining when to begin or end line breaks. Format shading Shading settings control the background color of the worksheet, pane, and headers. To access these settings, to go Format > Worksheet > Shading . You can also add banding, alternating color from row to row or column to column. Banding is useful for text tables because the alternating shading helps your eye distinguish between consecutive rows or columns. Click the image to replay it. For row and column banding, you can use the following options: Pane and Header - The color the bands use. Band Size - The thickness of the bands. Level - If you have nested tables with multiple fields on the rows and columns shelves, this option allows you to add banding at a particular level. Format lines You can control the appearance of the lines that are part of the view, such as grid lines and zero lines. You can turn the lines on or off and format the line type (for example, solid, dotted, or dashed) and the thickness of the times. You can also format the color and the opacity of the lines. For example, you can turn on grid lines to help give quantitative cues to the viewer. In this example, gray dotted grid lines have been added to the viz. You can also format trend lines, reference lines, and reference bands on the web. You can access these formatting settings by clicking the tooltip on the line, or by clicking on the line while the format pane is open. In this example, the trend line has been formatted to be a solid green line. Format interactive controls You can format all of your interactive controls, including legends, filters, highlighters, and parameters at the same time using the Interactive Controls section of the worksheet format pane. To access these settings, go to Format > Worksheet > Interactive Controls . If you'd like these controls to have consistent formatting, formatting at this level will save you time. Alternatively, you can format each interactive control individually. Format legends If you have a legend on your worksheet, you can customize how it looks. For example, in this example, the Sales above Budget legend is formatted so that the title is bolded and the background is light gray. You can access legends formatting by either going into Format > Legends , or by clicking into the menu on the legend and selecting Format Legends . You can also edit the colors for each of the items in the legend, edit the title, or choose to hide the title or legend through this menu. Format filters Filter cards contain controls that let users interact with your view. You can change filter cards to use custom formatting. For example, the body text in the filter shown is set to Tableau Medium, the title text is set to Tableau Semibold, the background is set to green with 50% opacity, and a black border has been added. You can access Filters and Sets formatting by either going into Format > Filters and Sets, or by clicking into the menu on the Filter card and selecting Format Filters and Sets . Format highlighters The highlighter on your worksheet can be formatted to customize your font, background color, and border. Formatting highlighters allows you to better integrate them into your dashboard or worksheet style. You can also edit the title that displays on each highlighter that shows in the view. You can access highlighter formatting by either going into Format > Highlighters , or by clicking into the menu on the Highlighter card and selecting Format Highlighters. For more information about using highlighters, see Highlight Data Points in Context Format parameters Parameter controls are similar to filter cards in that they contain controls that let users modify the view. If you create a parameter control, you can customize how it looks. For example, in the view below, the New Business Growth parameter is formatted so that the growth percentage text appears in green. You can access Parameters formatting by either going into Format > Parameters , or by clicking into the menu on the parameter card and selecting Format Parameters . Format borders and dividers Borders are the lines that surround the table, pane, and headers in a view. You can specify the border style, width, and color for the pane and header areas. Additionally, you can format the row and column dividers. For example, in this view the Row Divider borders are formatted to use a blue color. Row and column dividers serve to visually break up a view and are most commonly used in nested text tables. You can modify the style, width, color, and level of the borders that divide each row or each column using the row and column divider drop-downs. By default, the Pane and Header dividers are formatted simultaneously to save you time. If you'd like the pane and the headers to have different formatting, click the link icon to unlink the formatting and format each member separately. You can also switch the formatting settings for Row and Column Dividers on or off to hide styling options you don't want to use. In this example, Row Dividers formatting is turned off, and the Column Dividers pane and header formatting is unlinked. Row and column divider level settings The level refers to the header level you want to divide by. For example, if you have two fields on your measures column, such as category and sub-category, you can choose to have row dividers just by category (level 1) or by category and sub-category (level 2). In this example, the row divider is set at level 1. In this example, the row divider is set at level 2. Other articles in this section Back to top Thanks for your feedback!"
Domain 3: Create Content,3.4. Format dashboards,3.4.7. Apply responsive design for specific device layouts,https://help.tableau.com/current/pro/desktop/en-us/dashboards_dsd_create.htm,"Create Dashboard Layouts for Different Device Types Applies to: Tableau Cloud, Tableau Desktop, Tableau Server Dashboards can include layouts  for different types of devices that span a wide range of screen sizes. When you publish these layouts to Tableau Server or Tableau Cloud, people viewing your dashboard experience a  design optimized for their  phone, tablet, or desktop. As the author, you only have to create a single dashboard and deliver a single URL. Tip: In addition to optimizing layouts for mobile, Optimize Workbook Performance to better meets the needs of mobile users, who often have limited bandwidth and are in a hurry. How the Default dashboard relates to device layouts Device layouts appear on the Dashboard tab, under Default. Initially, each device layout contains every item in the Default dashboard and derives its size and layout from Default as well. Think of the Default dashboard as the parent, and the device layouts (desktop, tablet, and phone) as its children. Any view, filter, action, legend or parameter that you want to add to a device layout must first exist in the Default dashboard. Phone layouts and the Default dashboard To save time with a unique Phone layout option that automatically reflects changes to the Default dashboard, either click the open lock icon , or choose Auto-Generate Layout from the pop-up menu. If you instead click the closed lock icon or choose Edit Layout from the menu, the Phone layout becomes fully independent, so you'll need to manually add and arrange items to reflect changes to the Default dashboard. Desktop and Tablet layouts and the Default dashboard Unlike Phone layouts, you need to manually add Desktop and Tablet layouts to a dashboard. Desktop and Tablet layouts are always fully independent from the Default dashboard, so each device layout can contain a unique arrangement of objects. Automatically add phone layouts Two options let you automatically add phone layouts: To create phone layouts whenever you open old dashboards that lack them, choose Dashboard > Add Phone Layouts to Existing Dashboards To create phone layouts whenever you create a new dashboard, choose Dashboard > Add Phone Layouts to New Dashboards . (This option is on by default.) Preview and manually add device layouts Open a dashboard. On the Dashboard tab on the left, click Device Preview . In device preview mode, these options appear above the dashboard: Take a moment to click through the Device types and Models and explore the different screen sizes. Then set these options: To see how the dashboard will look in landscape vs. portrait mode, click . Usually, landscape is optimal for tablets and portrait is best for phones. Select Tableau Mobile app to see how the dashboard will look with the app instead of the browser. This option is available for iOS or Android devices and shrinks the dashboard slightly, leaving space for the app controls. Choose a Device type , such as Tablet . In the upper-right corner, click the Add Layout button   for the device type you selected (for example, Add Tablet Layout ). Add an additional layout by selecting a new Device type and clicking Add Layout . Creating a layout for each device type gives you the most control over your users' experience as they view your dashboard from different devices. After you publish a dashboard with  all three layouts, users won't see the default dashboard layout; instead, they'll always see  the appropriate device-specific layout. Note : If you make changes to a view, double-check related devices layouts to ensure that they look as you expect. Customize a device layout After you've added a device layout to your dashboard, you can start rearranging objects to create the look you want. For Desktop and Tablet layouts, click Custom : For Phone layouts, either click the lock icon , or choose Edit Layout from the pop-up menu: Anything you can add to your layout is listed on the left, under Layout . If an item has a blue check mark, it means that it's part of the device layout that you're currently working on. If you remove an item, it's only removed from the current device layout. It still exists on the default dashboard and can be added to the device layout again. Click through the Device model options to see how the layout will appear on different models. Ultimately, it's the size of the web browser that loads the dashboard that determines which layout appears on the device. For details, see Confirm which layout  a device will display . At left, explore the options under Size . Default : The height and width of the device layout mimics whatever the default dashboard is using. For example, if you're creating a tablet layout and the default dashboard is set to a fixed size of Desktop Browser (1000 x 800), setting Size to Default for the tablet layout will make it use 1000 x 800 as well. Fit all : All items are automatically resized to fit the device frame size. The device frame size is determined by the Device type, Model, and orientation (portrait or landscape) settings. Fit width (recommended for phones): Items are automatically resized to fit the width of the device frame, but the height is fixed. This is a great option for phone layouts and vertical scrolling. Optimize for phones The small screens of mobile phones benefit from further optimization. Try these techniques. Optimize manual phone layouts If you've chosen to edit a phone layout yourself, you can quickly optimize the placement of filters, remove white space, and more. On the Dashboard tab, click the pop-up menu to the right of Phone , and select Optimize Layout . Be aware that this command only rearranges items currently in the phone layout. If you want to continuously update the phone layout to reflect all changes to the default dashboard, select Auto-Generate Layout . Add links that trigger instant messages and phone calls To let phone users quickly contact key people about dashboard content, add URL actions to objects that automatically trigger SMS messages and telephone calls. Use the link format sms: phone-number or tel: phone-number . Be sure to include country and area codes if necessary. Create phone-specific versions of views Create duplicates of certain views in the default dashboard—one optimized for desktop viewing and a second optimized for phones. Go to the worksheet for a view, click its tab, and select Duplicate Sheet . Customize the view for mobile viewing. For maps for example, you may want to zoom in to a specific region by default, or you may want to disable panning, zooming, and other functionality. See Customize How People Interact with your Map . Now add the new view to the default dashboard so that it can be available to the device layouts you're creating. Shorten titles Short titles work best for mobile viewing. To edit a title, double-click it. Optimize white space White space is another visual element to consider. While screen real estate on a phone is scarce and you want to make the most of it, you may also want to provide additional safe places for your users to tap or initiate scrolling, so they don't select filters and other items unintentionally. To add white space, use padding or Blank objects. For more information, see Size and Lay Out Your Dashboard . Publish the dashboard Click Server > Publish Workbook . If you're not already signed in, you're prompted for your credentials. In the Publish Workbook to Tableau Server dialog box, make sure the Show sheets as tabs check box is cleared. When this check box is selected for device-specific dashboards, the tabs' sizing requirements interfere with the server's ability to correctly detect the size of the web browser and load the correct layout. Click Publish . Test the dashboard After you publish the dashboard to Tableau Server or Tableau Cloud, test the dashboard by viewing it from different browser sizes. Open the dashboard on Tableau Server or Tableau Cloud. In the upper-right corner of the page, click Share and copy the contents of the Link text box. Paste the string into a web browser URL. The string should include the following: embed=y With the embed code string as your browser URL, test the different layouts by changing the size of your web browser window and refreshing it. Confirm which layout  a device will display The dashboard layout a device displays is based on the smallest dimension (height or width) of the iframe in which the Tableau view appears. Sometimes Desktop, Tablet, or Phone layouts may appear on other types of devices. For example, a Tablet layout may appear on a desktop computer if the display or browser window is small. If the smallest iframe dimension is ... This device layout appears ... 500 pixels or less Phone Between 501 and 800 pixels Tablet Greater than 800 pixels Desktop If Tableau Cloud and Tableau Server users find a Phone or Tablet layout too limiting, they can use the display settings button in the toolbar to view the Desktop layout. This button is a toggle that allows you to switch between  Desktop and Mobile layouts. The button placement varies depending on the device you are viewing the dashboard on. Display settings on  a desktop device Display settings on  a tablet Display settings on  a phone Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.1. Publish Content,4.1.1. Publish a workbook,https://help.tableau.com/current/pro/desktop/en-us/publish_workbooks_howto.htm,"Comprehensive Steps to Publish a Workbook Applies to: Tableau Desktop In Tableau Desktop, open the workbook you want to publish. Select Server > Publish Workbook . If the Publish Workbook option does not appear on the Server menu, make sure a worksheet or dashboard tab is active (not the Data Source tab). If necessary, sign in to a server. For Tableau Cloud, enter https://online.tableau.com . For more information, see Sign in to Tableau Server or Tableau Cloud . In the Publish Workbook dialog box, select the project, enter a name for the workbook, and add search tags. Tags help users find related workbooks when they browse the server. Separate tags using 						a comma or space. To add a tag that contains a space, put the tag in quotation marks. For Permissions , accept the default project settings. Generally, a site administrator manages permissions on the server. If you think your workbook is an exception, work with your administrator to determine the best course of action, and see Set Permissions as You Publish a Data Source or Workbook . For Data Sources , select Edit if you want to change whether the data is embedded in the workbook or published separately, or change how people authenticate with data sources. If you’re publishing an extract and want to set up a refresh schedule, you must select Embed password or Allow refresh access . If your workbook connects to a Tableau data source, we recommend embedding the password. If you instead choose to prompt users, they'll need additional permissions on the data source. For more information, see Set Credentials for Accessing Your Published Data . Configure Variable publishing options that are available for this workbook. Click Publish . (Optional) Set up a refresh schedule for each extract you published. The publishing workflow guides you through these steps. For some data types you publish to Tableau Cloud, the publishing process starts Tableau Bridge on your computer. For more information, see Schedule Extract Refreshes as You Publish a Workbook . Variable publishing options The following options appear when they’re appropriate for the workbook. Show or hide sheets By default, Tableau Desktop publishes all sheets in a multiple-sheet workbook. In the Sheets section of the Publish Workbook dialog box, you can specify which sheets to include. Hiding sheets is useful when you want to publish a dashboard or story without showing the worksheets that were used to create it. Important: Hiding sheets is not a security measure. Anyone who has the Download/Web Save As capability can access the hidden sheets.  Other editing permissions can also allow access to hidden sheets. For more information, see Content Access and Ownership (Link opens in a new window) in Tableau Server Help. Warning: If any changes are made to the selection of sheets, such as deselecting, reselecting, or using the 'All'/'Only Dashboards' buttons, custom permissions will be removed from the corresponding views. This happens when a workbook with custom view permissions is republished while the 'show sheets as tabs' option is disabled. Show sheets as tabs If you select multiple sheets to show, you can specify how users navigate them. Select the Show Sheets as Tabs check box to provide tab-based navigation. Clear the check box to allow people to open only one view at a time. Note that how sheet tabs are configured also impacts permissions. When a workbook shows sheets as tabs, workbook-level permission rules are applied to the sheets. When the sheets are not shown as tabs, any changes made to workbook permissions do not apply to the individual sheets (aka views). View-level permissions must be set independently. See the Set Content Permissions (Link opens in a new window) tab in the Permissions (Link opens in a new window) topic for more information. Show selections Select this to highlight a particular portion of the view  when others open the workbook. Make your selections in Tableau Desktop before you start the publishing process. Include external files In general, if your views contain information that isn't available to the server or other users, you can use the Include External Files option when you publish. With this option, you can include an Excel, CSV, or other data source file local to your computer. However, the availability of this option depends on whether you are publishing to Tableau Server or Tableau Cloud. For Tableau Server If you're publishing to Tableau Server, and the workbook references data or images on a mapped drive, you can select the Include External Files when you publish. Alternatively, you can change the connection information so that the workbook references the UNC path to the data. For example, you could change D:\datasource.xls to \\filesrv\datasource.xls . For Tableau Cloud If you're publishing to Tableau Cloud and the workbook connects to on-premises data, like Excel or text, which Tableau Cloud cannot connect to directly, you will need to do one of the following: Check to see if all the connections ( Supported Connectors (Link opens in a new window) ) in the data source are supported by Tableau Bridge. If so, you can ignore the check box, but you must use Tableau Bridge to keep the data fresh. For more information, see Use Tableau Bridge to Keep Tableau Cloud Data Fresh (Link opens in a new window) . If one of the connections in the data source is not supported by Tableau Bridge, you'll need to select the ""Include External Files"" check box so that Tableau Cloud can refresh the data that Tableau can connect to directly. The file-based data cannot refresh and its data will remain static in this case. Preview device layouts To see how your designs appear on mobile devices, click Preview device layouts in the browser when publishing is complete. Then choose a device type above the viz, and a specific dashboard from the menu at right. If you don't like a device preview, open the workbook in Tableau Desktop, adjust device layouts ,  and republish. Choose how to generate thumbnails for workbooks with user filters On the server, users can browse Tableau content with a thumbnail view. These thumbnail images are based on workbook sheets. If your workbook contains user filters, you can specify 		which user’s filter to use when creating the thumbnails. For example, if you want the thumbnail image 		to show all regions of a sales forecast, you can generate thumbnails based on a user who is allowed to see all regions. In the following scenarios, a generic image appears in place of the view thumbnail. The user you select does not have permission to see the data. The data is from a Tableau Server data source that utilizes data source filters, user calculations, impersonation, or other user references. To learn more about user filters, see Restrict Access at the Data Row Level . Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.1. Publish Content,4.1.2. Publish a data source,https://help.tableau.com/current/pro/desktop/en-us/publish_datasources.htm,"Publish a Data Source Applies to: Tableau Desktop When you are ready to make a data source available to other users, you can publish it to Tableau Server or Tableau Cloud. If the data source is in a workbook that you published to Tableau Server or Tableau Cloud, you can make it available by saving it, provided it’s an embedded Excel or text file. For details, see Publish a Data Source on the Web . Note: If you haven't yet read about best practices for creating data sources and when to create an extract, see Best Practices for Published Data Sources . General publishing steps The following steps give an overview of the publishing workflow you will use regardless of the type of data or the server you publish to. Below these steps you can find supplemental information for authentication types and using Tableau Bridge . Select Server > Publish Data Source . If your workbook is connected to multiple data sources, select the one you want from the Publish Data Sources submenu. If you’re not already signed in to Tableau Server or Tableau Cloud, sign in now. How you sign in depends on how your administrator has set up your environment. For information, see Sign in to Tableau Server or Tableau Cloud . In the Publish Data Source dialog box, do the following: For Project , select the project you want to publish to and enter the data source name. For Description and Tags , add a description and tags that will help you and other users find it. Separate tags using either a comma or a space. To add a tag that contains a space, put it in quotation marks (e.g., “Sales Quotes”). For Refresh Schedule , if publishing an extract, you have the option to select a refresh schedule to ensure that your extract data stays fresh. If you choose not to select a schedule here, you can select a schedule from Tableau Server after publishing. Note: This option is not available when publishing from the Data Source page or to Tableau Cloud. For Permissions , accept the default project settings. Generally a site administrator manages permissions on the server. If you think your data source is an exception, work with your administrator to determine the best course of action, and see Set Permissions as You Publish a Data Source or Workbook . For Authentication , if you need to provide credentials to access your data, you can specify how authentication should be handled when the data is published to the server. The options available for accessing the data source depend on the type of data you publish and whether you are publishing to Tableau Server or Tableau Cloud. Information appears at the bottom of the dialog box to let you know whether you need to take further action, such as adding Tableau Cloud to your data provider's authorized list. For information about the authentication types, see Set Credentials for Accessing Your Published Data . If you are publishing file-based data that is on a Windows mapped drive, or using images that will not be available from the server, select Include external files . When you include external files, copies of the files  are put on the server as part of your data source. Copies of files are also put on the server and included as part of the data source when you publish extracts of multi-connection data sources that contain a connection to file-based data such as Excel. For more information about the implications of publishing extracts of multi-connection data sources, see Join Your Data If you do not want to publish                 the external files to the server, change the connection information                 so that the data source references a full UNC path. For example, rather             than connecting to D:\datasource.xls, you would connect to \\filesrv\datasource.xls. By default, during the publishing process, Tableau updates the workbook connection to use the new published data source. It also closes the local data source. To continue using the local data source instead, clear the Update workbook to use the published data source check box. Note: If you select Undo after publishing the data source, Tableau will revert to using the local data source, but  the data source will remain published. In addition, Tableau does not replace a local data source when you publish a cube (multidimensional) data source to Tableau Server. (Tableau Cloud does not support publishing cube data sources.) Click Publish . After publishing is complete, your web browser opens Ask Data for the data source, where you can ask questions to automatically create vizzes. For more information, see Automatically Build Views with Ask Data . (Optional) Set up a refresh schedule on the server. For more information, see the following topics: Schedule Refreshes on Tableau Server (Link opens in a new window) Schedule Refreshes on Tableau Cloud (Link opens in a new window) Schedule Refreshes Using Tableau Bridge - see the section below. Publish on-premises data (Tableau Cloud only) To keep data sources that connect to on-premises data fresh after publishing to Tableau Cloud, Tableau Bridge is required. Tableau Cloud relies on Bridge to facilitate the connection between it and data accessible only from inside a private network. As part of the publishing process, Tableau Cloud will automatically detect if Bridge is needed. If Bridge is needed, your publishing workflow might differ from the publishing process described above. Refer to one of the following topics depending on the type of data source you’re publishing: If publishing a data source that uses an extract connection, see Set up a Bridge Refresh Schedule (Link opens in a new window) in the Tableau Cloud Help. If publishing a data source that connects to a private cloud database, see Set up schedules for private cloud-based data sources (Link opens in a new window) . If publishing a data source that uses an live connection, see Publish a Bridge Data Source with a Live Connection (Link opens in a new window) in the Tableau Cloud Help. If publishing a data source that connects to a private cloud database, see Publish private cloud-based data sources (Link opens in a new window) to ensure Bridge is used to facilitate the data freshness tasks. Note: Bridge keeps data fresh for published data sources only, i.e., data sources published separately from workbooks. Bridge can't keep data fresh in data sources embedded in workbooks. Publish with a Web Data Connector To publish a web data connector data source, you need to import the web data connector to the server before you can set up a refresh schedule. You can do this only on Tableau Server. You can refresh some web data connector data sources on Tableau Cloud, using Tableau Bridge. For information, see Web Data Connectors in Tableau Server (Link opens in a new window) in the Tableau Server Help or Connectivity with Tableau Bridge (Link opens in a new window) in the Tableau Cloud Help. Hidden fields in workbooks Workbooks connected to a published data source respect the state of hidden fields in the published the data source. If you create a new workbook that uses a published data source with hidden fields, those fields remain hidden in the workbook and cannot be used in calculations, sets, groups, and other object creation. If you work with an existing workbook that uses a published data source with hidden fields, those hidden fields are displayed in red in the workbook to indicate that the fields, and therefore the views and calculations that use those fields, are invalid. You can address this issue in one of the following ways: Show (unhide) the relevant fields in the data source, and then republish the data source. Update the relevant workbooks to exclude the hidden fields. For information, see Hide or Unhide Fields . See also Keep Data Fresh (Link opens in a new window) (Tableau Cloud) Data Sources (Link opens in a new window) (Tableau Server) Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.1. Publish Content,4.1.3. Print content,https://help.tableau.com/current/pro/desktop/en-us/printing.htm,"Print Views from Tableau Desktop Applies to: Tableau Desktop Before printing, specify how you want the printed page to look using the Page Setup dialog box. Then print to a printer or PDF. Set up the page You can apply different page setup options for each worksheet in a workbook, For example, worksheets can print with titles showing or hidden, with unique page orientation, and more. To begin, select File > Page Setup . General settings (available for individual sheets, not dashboards) Show - Show or hide the title, view, caption, color legend, shape legend, size legend, and map legend. Headers and Breaks - Control the appearance of these table elements. Repeat headers and legends on each page - adds table row and column headers at the top of each printed page when a view breaks across several pages. Break pages on pane boundaries - prevents page breaks in the middle of a table cell. Pages Shelf - If the view uses the Pages Shelf, specify whether to print the current page or all pages. Layout settings Legend Layout - If you include one or more legends, select how you want the legends to appear on the printed page. Margins - Specify top, bottom, left, and right margins by typing values into the text boxes. Centering - Optionally, select whether to center the view horizontally or vertically—or both—on the page. Print Scaling settings These settings affect only printed documents, not exported images or PDFs. However, the page orientation settings  are used as the default when you publish the workbook to Tableau Cloud or Tableau Server. Print Scaling - Scale a view to fit within a single page or print across multiple pages. Select from the following options: Automatic – Scales the view automatically based on the paper size. Scale to – Scales the view to the specified percentage of its original size. Fit to – Scales the view to fit within the specified area. Select the number of printed pages across and down. For example, if you have a really wide view that is not very tall, you can specify three pages across by one page down. Page Orientation - Specify how you want the view oriented on the printed page. Select from the following options: Use Printer Setting – Use the page orientation that is already specified by the printer. Portrait – Presents the view so that it is oriented vertically on the printed page. Landscape – Presents the view so that it is oriented horizontally on the printed page. The following diagram shows the difference between portrait and landscape page orientations. Print a view After you have configured the Page Setup settings, select File > Print . The following options in the Print dialog box are unique to Tableau. Show Selections When this option is selected any selections you’ve made in the views will be maintained while printing. Change the Print Range When you print from a workbook with multiple worksheets, each worksheet represents one or more printed pages, depending on the page setup. Select from the following print ranges: Entire Workbook - Prints all the worksheets in the workbook. Active Sheet - Prints only the sheet currently displayed in the workbook. Selected Sheets - Prints the selected sheets. You can select multiple worksheets in a workbook by holding down the CTRL or Shift keys (or the z key on a Mac) while clicking the worksheet tabs that you want to select. Print to PDF Note: If you're using Tableau Cloud or Tableau Server, instead see Download Views and Workbooks and Link to a PNG, PDF, or CSV of a View . In Tableau Desktop, you can save views as PDF files rather than printing 			them as hard copies. You do not 		need to have Adobe Acrobat installed on your computer. When you print an individual sheet to PDF, filters in the view are not included. To show filters, create a dashboard containing the sheet and export the dashboard to PDF. Print to PDF using a Windows computer Specify page setup options for each sheet in your workbook. Select File > Print to PDF . In the Print to PDF dialog box, select the print Range: Entire Workbook - Publishes all the sheets in the workbook. Active Sheet - Publishes only the sheet currently displayed 								in the workbook. Selected Sheets - Publishes the selected sheets. To select multiple sheets in a Tableau workbook, hold down the Ctrl key as you select sheet tabs along the bottom of the Tableau workbook. Select a Paper Size . If you select Unspecified, the paper 							size will expand to the necessary size to fit the entire view on 						a single page. Select View PDF File After Printing if 							you want to automatically open the PDF after creating it. 							This option is only available if you have Adobe Acrobat Reader or 						Adobe Acrobat installed on your computer. Select whether to Show Selections . When this option 						is selected the selections in the views are maintained in the PDF. Click OK and specify where you want to save the PDF. Then 						click Save . Print to PDF using a Mac computer Specify page setup options for each sheet in your workbook. Select File > Print . In the Print  dialog box, click Show Details to select a print range: Entire Workbook - Publishes all the sheets in the workbook. Active Sheet - Publishes only the sheet currently displayed 								in the workbook. Selected Sheets - Publishes the selected sheets.  To select multiple sheets in a Tableau workbook, hold down the Command key as you select sheet tabs along the bottom of the Tableau workbook. Click PDF > Save as PDF . Specify where you want to save the PDF, then 						click Save . Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.1. Publish Content,4.1.4. Export content,https://help.tableau.com/current/pro/desktop/en-us/save_export_data.htm,"Export Data from Tableau Desktop Applies to: Tableau Desktop You can export the data in a Tableau data source, including all or part of the records from your original data. Alternatively, you can export only the portion of data used to generate the view. Note: If you're using Tableau Cloud or Tableau Server, instead see Download Views and Workbooks and Link to a PNG, PDF, or CSV of a View . Export data in the data source After you join tables from one or more connections and make general customizations (for example, create a calculated field, pivot fields, create groups, apply data source or extract filters, etc.) to your Tableau data source, you might want to share or reuse the data in its new form. You can do this by using one of the methods listed below. Export your data to .csv file Extract your data Export the data source Note: The export may exclude some table calculations and level of detail expressions. Export your data to .csv file Because the .csv format is one of the most simple structured formats for data, it's supported by a wide range of tools, databases, and programming languages. Exporting your data in the Tableau data source using this format creates an independent data set and can be a convenient and flexible way to share your data with others. There are two primary ways you can export your data in the data source to a .csv file in Tableau: from the Data Source page and from the view. From the Data Source page: On the Data Source page, select Data > Export Data to CSV to export all the data in your data source to .csv file. From the view: On the sheet tab, drag a field to the Columns or Rows shelf, click the View Data icon in the Data pane, and click the Export All button. Extract your data Another way to export all of your data or a subset of your data in the data source is to create an extract (.hyper) file. An extract functions as an independent data set, which you can use to connect directly from Tableau. For more information, see Extract Your Data . Export the data source After you connect to your data, you can export and save your data source as a Tableau data source (.tds) file. Saving the data source creates a shortcut to your remote data and allows you to avoid having to create a new connection to a specific data set each time. For more information, see Save Data Sources . Export data used in the view After you create a view, you can also export just the data used to generate that view. The fields that are exported come from the fields on the shelves of the sheet. However, fields that function as external filters, in other words, the fields that appear only on the Filters shelf, are not included in the export. If you want to include other fields with the exported data without changing the baseline view, you can place those fields on the Detail shelf. The various methods for exporting the data used to generate the view is listed below. Export data in the view to Microsoft Access or .csv Export crosstab of data in the view to Excel Copy data in the view to clipboard Copy crosstab of data in the view to clipboard Export data in the view to Microsoft Access or .csv Export the data that is used to generate the view as an Access database (Windows only) or .csv file (Mac only). In Tableau Desktop, select Worksheet > Export > Data . Select a location and type a name for your Access database or .csv file. Click Save . If you're on Windows, the Export Data to Access dialog box displays to give you the option to immediately use the new Access database and continue working in Access without interrupting your work flow. Export crosstab of data in the view to Excel You can export directly to Excel the data used to generate the view formatted as a crosstab. When you export your view as a crosstab, Tableau automatically opens the Excel application and pastes a crosstab version of the current view into a new Excel workbook. Although this option provides a direct method for exporting your data to another application, performance of the export can be affected because it is simultaneously copying and formatting the data. If the view you are exporting contains a lot of data, a dialog box opens asking whether you want to export the formatting. In this case, if you choose to exclude the formatting from the export, performance of the export might improve. In Tableau Desktop:  select Worksheet > Export > Crosstab to Excel . If you're using a Mac, this option opens a dialog box where you can save the file. You must then manually open the file in Excel. In Tableau Server or Tableau Cloud, open a view or dashboard and select Download > Crosstab . Select which sheets from the workbook to export data from. Copy data in the view to clipboard Copy the data used to generate the view so that you can paste it into another application. Create a view. Select Worksheet > Copy > Data . Open another application, such as Word, and paste the data into the document. In this example, the fields placed on the Columns, Rows, and Color shelves are copied into the document.  However, the Customer Segment field is not copied because it is an external filter because it appears only on the Filters shelf. Copy crosstab of data in the view to clipboard You can copy a crosstab version of a view so that you can paste or transfer the data into another application. The pasted data always appears as a crosstab, even if the initial view of the data in Tableau did not use a crosstab format. Copying a crosstab is restricted by some general conditions: You must copy all records in the view. You cannot copy a subset of records. This option is valid for aggregated views only. It cannot be used on disaggregated views of data because a crosstab is by definition an aggregated view of data. This means the Aggregate Measures option on the Analysis menu must be selected in order for copying a crosstab to work properly. You cannot copy a crosstab if the view contains continuous dimensions such as continuous dates and times. Other restrictions may apply depending on the data in your view. After the general conditions are met, copy the crosstab. Create a view. Select Worksheet > Copy > Crosstab . Open another application, such as Excel, and paste the crosstab. Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.2. Schedule data updates,4.2.1. Schedule data extract refreshes,https://help.tableau.com/current/server/en-us/qs_refresh_extracts.htm,"Quick Start: Refresh Extracts on a Schedule For published workbooks that connect to data extracts, you can set up the server to refresh the extracts on a recurring schedule, so all workbooks connected to them always show the most up-to-date data. To schedule refreshes you need to have administrator or data owner permissions. Note: This topic applies to extracts published to Tableau Server. For Tableau Cloud, how you refresh extracts depends on the underlying data they connect to. For more information, see Keep Data Fresh (Link opens in a new window) . 1 Set up a schedule on the server Sign in to the server, go to the Schedules page, and click New Schedule . Tableau provides a few refresh schedules. You create additional schedules you need. 2 Enable scheduled extract refreshes and failure emails As a server or site administrator, you can enable schedules, as well as email notification when extract refreshes fail. Select Settings , and then go to the General page. Under Email Notification, select Send email to data source and workbook owners when scheduled refreshes fail . Under Embedded Credentials , select both check boxes to allow publishers to embed credentials and schedule extract refreshes. 3 Publish a workbook with an extract In Tableau Desktop, select Server > Publish Workbook . Sign in to the server if you’re not already. In the Publish Workbook to Tableau Server dialog box , click Schedules & Authentication .  Under Extract Schedule , select the schedule from the list. If the original data requires authentication, you will also need to select how you want people to access it. 4 Monitor refresh performance You can monitor scheduled tasks by viewing Background Tasks for Extracts on the Status page. Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.2. Schedule data updates,4.2.2. Schedule a Tableau Prep workflow,https://help.tableau.com/current/server/en-us/prep_conductor_create_schedule_definitions.htm,"Step 3: Create Schedules for Flow Tasks Applies to: Tableau Data Management, Tableau Prep Create a new schedule: On the Schedules tab, click New Schedule . Enter the following information in the New Schedule dialog box and click Create . Name: Enter a descriptive name for the schedule.  Typically, this includes the description of the schedule frequency. Type: Select Flow as the task type. Priority: You can define a default priority from 1 to 100, where 1 is the highest priority. This value will be assigned to the tasks by default. If two tasks are pending in the queue, the one with the higher priority runs first. Execution: Choose whether a schedule will run in parallel or serially. Schedules that run in parallel run on all available backgrounder processes so that they can complete faster. Linked Tasks (version 2021.3 and later): Select the check box if the schedule can be used to schedule flows to run one after the other. Linked tasks require a Parallel execution method. Starting in version 2022.1, this option is enabled by default. In prior versions, the Server Administrator must first enable linked tasks for the server before you can configure schedules to support linked tasks. For more information, see Step 2: Configure Flow Settings for your Tableau Server Frequency: You can define an hourly, daily, weekly, or monthly schedule. Next step Step 4: Safe list Input and Output locations Who can do this Tableau Server Administrators can create and modify schedules. Schedules are created at the server level and apply across all the sites on a server. Back to top Thanks for your feedback!"
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.3. Manage Published workbooks,4.3.1. Create alerts,https://kb.tableau.com/articles/HowTo/how-to-reate-conditional-data-driven-alerts,"Published: 21 Jun 2017 Last Modified Date: 20 Jul 2023 Question How to set conditional data driven alerts based on thresholds in the underlying data or based on the time of day. Environment Tableau Server Answer Data driven alerts is a new feature starting in Tableau Server 10.3. The ability to set specific conditional data driven alerts is still based on workarounds. Workaround for conditional alerts based on time of day Option 1 Change the time interval that the Server checks for to confirm when conditions are true.(See link in upper right) Option 2 Change the extract refresh schedule, since server also checks alerts whenever extracts in the related workbook are refreshed. Workaround for conditional alerts based on when the underlying data reaches a threshold of N or more records Option 1 Create a secondary view counting the records and create an additional alert on the secondary view. Option 2 Create a filter on the view to only show the bars with N or more records in the underlying data. Workaround for conditional alerts based on when the value for a particular dimension reaches various thresholds Option 1 Create multiple graphs with a filter for each dimension value Apply a data driven alert to each graph separately Additional Information The ability to set specific conditional data driven alerts is not a functionality that currently is built into the product. Voice your support for the implementation of this feature by adding your vote to the following Community idea: Specific Conditional Data Driven Alerts . Did this article resolve the issue? Thank you for providing your feedback on the effectiveness of the article. Click here to return to our Support page. Open new Case Open a new case Continue Searching Click here to go to our Support page. Knowledge Base Get detailed answers and how-to step-by-step instructions for your issues and technical questions. Community Find and share solutions with our active community through forums, user groups and ideas. Product Help Browse a complete list of product manuals and guides. Available online, offline and PDF formats. Training and Tutorials Learn how to master Tableau’s products with our on-demand, live or class room training."
Domain 4: Publish and Manage Content on Tableau Server and Tableau Online,4.3. Manage Published workbooks,4.3.2. Create subscriptions,https://help.tableau.com/current/online/en-us/subscribe_user.htm,"Create a Subscription to a View or Workbook Applies to: Tableau Cloud, Tableau Server Subscriptions email you an image or PDF snapshot of a view or workbook at regular intervals—without requiring you to sign in to Tableau Cloud . Note : If Tableau Catalog is turned on for a site, administrators can determine whether subscription emails include relevant upstream data quality warnings. Tableau Catalog is available as part of the Data Management offering. For more information, see About Tableau Catalog . Tableau Cloud SMTP addresses To ensure subscription emails are delivered successfully, confirm that security software and policies in your company allow emails from @cloudmail.tableau.com and IP addresses 54.240.86.205 and 54.240.86.204. Subscriptions that cannot be delivered may return rejection errors to Tableau and temporarily block the recipient. Set up a subscription for yourself or others When you open a view in Tableau Cloud , if you see a subscription icon ( ) in the toolbar, you can subscribe to that view or to the entire workbook. You can subscribe other users who have permission to view the content if you own a workbook, if you are a project leader with an appropriate site role, or if you are an administrator. Note: Data refresh-initiated subscription emails are not supported for views or workbooks that rely on data sources that use Bridge to keep data fresh. From the Explore section of your site, select All Workbooks or All Views , or open the project that contains the view you want to subscribe to. Open a view either directly, or after opening the containing workbook. On the view toolbar, select Watch > Subscriptions . Add the Tableau users or groups you want to receive the subscription. To receive a subscription, users must have the View and Download Image/PDF permissions. If you  own the workbook, select Subscribe me . Note : When you subscribe a group, each user is added individually at the time the subscription is created. If more users are added to the group later, you must re-subscribe the group for those new users to receive the subscription. Likewise, users later removed from the group will not have their subscriptions removed automatically unless their permissions to the subscribed view are removed. Choose whether subscription emails include the current view or the entire workbook. If the view contains data only when high-priority information exists, select Don't send if view is empty . Choose the format for your snapshot: as a PNG image, a PDF attachment, or both. If PDFs, choose the paper size and orientation you'd like to receive. To clarify subscription emails, customize the subject line, and add a message. Note: To update the subscription message, you must unsubscribe from the existing subscription and create a new subscription with a different message. For more information, see Update or unsubscribe from a subscription . When the workbook uses one data extract on a published connection, you can pick a frequency: When Data Refreshes : Sends only when data in the view or workbook is refreshed by running refresh schedules. On Selected Schedule : Pick a schedule for the subscription. If frequency is not set to When Data Refreshes, click the drop-down arrow to the left  of the current settings to pick a schedule: Then specify a custom schedule that sends subscription emails whenever you wish. (The precise delivery time may vary if server load is high.) To change the time zone, click the Time Zone link it to go to your account settings page. Click Subscribe . When you receive a subscription email, you can select the image (or the link in the message body for PDF subscriptions) to be taken to the view or workbook in Tableau Cloud . Update or unsubscribe from a subscription You can unsubscribe from an existing subscription, or make changes to a subscription’s format, schedule, subject, or empty view mode. Access your Tableau Cloud account settings by doing one of the following: Click Manage my subscriptions at the bottom of a subscription email. Sign in to Tableau Cloud . At the top of the page, select your user icon, and then select My Content . Click Subscriptions . Select the check box next to the view you want to unsubscribe from, click Actions , and then click Unsubscribe , or select the subscription option you'd like to change. Resume or delete suspended subscriptions Sometimes, subscriptions fail because of an issue with the workbook or a problem loading the view. If a subscription fails more than five times, you'll receive a notification email that your subscription has been suspended. There are a few ways to resume a suspended subscription if you're a subscription owner or administrator: From the My Content area of Tableau web pages, an   icon appears in the Last update column to indicate that the subscription is suspended. Select ... > Resume Subscription to resume. From the Subscriptions tab of the affected workbook, an icon appears in the last update column to indicate that the subscription is suspended. Select ... > Resume Subscription to resume. You'll receive an email notification when the subscription is working again. See also Change subscription settings (Link opens in a new window) in the Tableau Desktop and Web Authoring Help. Project-level administration (Link opens in a new window) in the Tableau Cloud Help, to learn which site roles allow full Project Leader capabilities. Back to top Thanks for your feedback!"
